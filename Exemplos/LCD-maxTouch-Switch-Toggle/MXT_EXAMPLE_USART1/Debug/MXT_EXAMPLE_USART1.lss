
MXT_EXAMPLE_USART1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008c84  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00408c84  00408c84  00018c84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20400000  00408c8c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000004cc  204009c0  0040964c  000209c0  2**2
                  ALLOC
  4 .stack        00002004  20400e8c  00409b18  000209c0  2**0
                  ALLOC
  5 .heap         00000200  20402e90  0040bb1c  000209c0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209ee  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001db91  00000000  00000000  00020a47  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00004022  00000000  00000000  0003e5d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00008a53  00000000  00000000  000425fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000d98  00000000  00000000  0004b04d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000ef8  00000000  00000000  0004bde5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00023032  00000000  00000000  0004ccdd  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00010043  00000000  00000000  0006fd0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00095307  00000000  00000000  0007fd52  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  000033cc  00000000  00000000  0011505c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	90 2e 40 20 6d 1b 40 00 6b 1b 40 00 6b 1b 40 00     ..@ m.@.k.@.k.@.
  400010:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 00 00 00 00     k.@.k.@.k.@.....
	...
  40002c:	6b 1b 40 00 6b 1b 40 00 00 00 00 00 6b 1b 40 00     k.@.k.@.....k.@.
  40003c:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  40004c:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  40005c:	6b 1b 40 00 6b 1b 40 00 00 00 00 00 e5 14 40 00     k.@.k.@.......@.
  40006c:	f9 14 40 00 0d 15 40 00 6b 1b 40 00 6b 1b 40 00     ..@...@.k.@.k.@.
  40007c:	6b 1b 40 00 21 15 40 00 35 15 40 00 6b 1b 40 00     k.@.!.@.5.@.k.@.
  40008c:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  40009c:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  4000ac:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  4000bc:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  4000cc:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  4000dc:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  4000ec:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  4000fc:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  40010c:	6b 1b 40 00 6b 1b 40 00 00 00 00 00 00 00 00 00     k.@.k.@.........
  40011c:	00 00 00 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     ....k.@.k.@.k.@.
  40012c:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  40013c:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  40014c:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00 6b 1b 40 00     k.@.k.@.k.@.k.@.
  40015c:	6b 1b 40 00 6b 1b 40 00 6b 1b 40 00                 k.@.k.@.k.@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204009c0 	.word	0x204009c0
  400184:	00000000 	.word	0x00000000
  400188:	00408c8c 	.word	0x00408c8c

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	00408c8c 	.word	0x00408c8c
  4001c8:	204009c4 	.word	0x204009c4
  4001cc:	00408c8c 	.word	0x00408c8c
  4001d0:	00000000 	.word	0x00000000

004001d4 <mxt_init_device>:
 * \param chgpin IOPORT pin instance attached to the maXTouch device's /CHG pin
 * \return Operation result status code
 */
status_code_t mxt_init_device(struct mxt_device *device,
		twihs_master_t interface, uint8_t chip_adr, uint32_t chgpin)
{
  4001d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4001d6:	b087      	sub	sp, #28
  4001d8:	4604      	mov	r4, r0
  4001da:	460e      	mov	r6, r1
  4001dc:	4617      	mov	r7, r2
	int8_t status;

	/* Set TWI interface, TWI address and CHG-pin of the maXTouch device. */
	device->interface = interface;
  4001de:	6081      	str	r1, [r0, #8]
	device->mxt_chip_adr = chip_adr;
  4001e0:	7302      	strb	r2, [r0, #12]
	device->chgpin = chgpin;
  4001e2:	6183      	str	r3, [r0, #24]
	device->handler = NULL;
  4001e4:	2500      	movs	r5, #0
  4001e6:	6105      	str	r5, [r0, #16]
			malloc(sizeof(struct mxt_info_object));
  4001e8:	2007      	movs	r0, #7
  4001ea:	4b9d      	ldr	r3, [pc, #628]	; (400460 <mxt_init_device+0x28c>)
  4001ec:	4798      	blx	r3
	device->info_object = (struct mxt_info_object *)
  4001ee:	6020      	str	r0, [r4, #0]
	twihs_package_t packet = {
  4001f0:	9501      	str	r5, [sp, #4]
  4001f2:	9505      	str	r5, [sp, #20]
  4001f4:	2302      	movs	r3, #2
  4001f6:	9302      	str	r3, [sp, #8]
  4001f8:	9003      	str	r0, [sp, #12]
  4001fa:	2307      	movs	r3, #7
  4001fc:	9304      	str	r3, [sp, #16]
  4001fe:	f88d 7014 	strb.w	r7, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  400202:	a901      	add	r1, sp, #4
  400204:	4630      	mov	r0, r6
  400206:	4b97      	ldr	r3, [pc, #604]	; (400464 <mxt_init_device+0x290>)
  400208:	4798      	blx	r3
  40020a:	1b40      	subs	r0, r0, r5
  40020c:	bf18      	it	ne
  40020e:	2001      	movne	r0, #1
  400210:	4240      	negs	r0, r0
	if ((status = mxt_read_id_block(device)) != STATUS_OK) {
  400212:	b108      	cbz	r0, 400218 <mxt_init_device+0x44>
	}

	device->multitouch_report_offset = status;

	return STATUS_OK;
}
  400214:	b007      	add	sp, #28
  400216:	bdf0      	pop	{r4, r5, r6, r7, pc}
			malloc(device->info_object->obj_count *
  400218:	6825      	ldr	r5, [r4, #0]
  40021a:	79a8      	ldrb	r0, [r5, #6]
  40021c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
  400220:	0040      	lsls	r0, r0, #1
  400222:	4b8f      	ldr	r3, [pc, #572]	; (400460 <mxt_init_device+0x28c>)
  400224:	4798      	blx	r3
	device->object_list = (struct mxt_object *)
  400226:	6060      	str	r0, [r4, #4]
	twihs_package_t packet = {
  400228:	2300      	movs	r3, #0
  40022a:	9301      	str	r3, [sp, #4]
  40022c:	9304      	str	r3, [sp, #16]
  40022e:	9305      	str	r3, [sp, #20]
  400230:	2307      	movs	r3, #7
  400232:	f88d 3004 	strb.w	r3, [sp, #4]
  400236:	2302      	movs	r3, #2
  400238:	9302      	str	r3, [sp, #8]
  40023a:	9003      	str	r0, [sp, #12]
		.length       = device->info_object->obj_count *
  40023c:	79ab      	ldrb	r3, [r5, #6]
  40023e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  400242:	005b      	lsls	r3, r3, #1
	twihs_package_t packet = {
  400244:	9304      	str	r3, [sp, #16]
  400246:	7b23      	ldrb	r3, [r4, #12]
  400248:	f88d 3014 	strb.w	r3, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  40024c:	a901      	add	r1, sp, #4
  40024e:	68a0      	ldr	r0, [r4, #8]
  400250:	4b84      	ldr	r3, [pc, #528]	; (400464 <mxt_init_device+0x290>)
  400252:	4798      	blx	r3
  400254:	3000      	adds	r0, #0
  400256:	bf18      	it	ne
  400258:	2001      	movne	r0, #1
  40025a:	4240      	negs	r0, r0
	if (status != STATUS_OK) {
  40025c:	2800      	cmp	r0, #0
  40025e:	d1d9      	bne.n	400214 <mxt_init_device+0x40>
	uint8_t *id_pointer = (uint8_t *)device->info_object;
  400260:	6827      	ldr	r7, [r4, #0]
	uint8_t *objects_pointer = (uint8_t *)device->object_list;
  400262:	6860      	ldr	r0, [r4, #4]
			(device->info_object->obj_count *
  400264:	79bb      	ldrb	r3, [r7, #6]
  400266:	eb03 0643 	add.w	r6, r3, r3, lsl #1
  40026a:	0076      	lsls	r6, r6, #1
	crc_area_size = MXT_ID_BLOCK_SIZE +
  40026c:	3607      	adds	r6, #7
  40026e:	b2b6      	uxth	r6, r6
  400270:	463a      	mov	r2, r7
  400272:	3706      	adds	r7, #6
	uint32_t crc_tmp = 0;
  400274:	2100      	movs	r1, #0
		result ^= crcpoly;
  400276:	f8df c1f0 	ldr.w	ip, [pc, #496]	; 400468 <mxt_init_device+0x294>
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  40027a:	f892 e001 	ldrb.w	lr, [r2, #1]
  40027e:	7815      	ldrb	r5, [r2, #0]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  400280:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
  400284:	ea85 0141 	eor.w	r1, r5, r1, lsl #1
	if (result & 0x1000000) {
  400288:	f011 7f80 	tst.w	r1, #16777216	; 0x1000000
		result ^= crcpoly;
  40028c:	bf18      	it	ne
  40028e:	ea81 010c 	eorne.w	r1, r1, ip
  400292:	3202      	adds	r2, #2
	for (i = 0; i < MXT_ID_BLOCK_SIZE - 1; i += 2) {
  400294:	42ba      	cmp	r2, r7
  400296:	d1f0      	bne.n	40027a <mxt_init_device+0xa6>
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  400298:	7802      	ldrb	r2, [r0, #0]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  40029a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  40029e:	ea83 0241 	eor.w	r2, r3, r1, lsl #1
	if (result & 0x1000000) {
  4002a2:	f012 7f80 	tst.w	r2, #16777216	; 0x1000000
  4002a6:	d003      	beq.n	4002b0 <mxt_init_device+0xdc>
		result ^= crcpoly;
  4002a8:	f482 0200 	eor.w	r2, r2, #8388608	; 0x800000
  4002ac:	f082 021b 	eor.w	r2, r2, #27
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  4002b0:	f1a6 0708 	sub.w	r7, r6, #8
  4002b4:	2f01      	cmp	r7, #1
  4002b6:	dd12      	ble.n	4002de <mxt_init_device+0x10a>
  4002b8:	2301      	movs	r3, #1
		result ^= crcpoly;
  4002ba:	f8df e1ac 	ldr.w	lr, [pc, #428]	; 400468 <mxt_init_device+0x294>
		crc_tmp = mxt_crc_24(crc_tmp, objects_pointer[i],
  4002be:	18c1      	adds	r1, r0, r3
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  4002c0:	784d      	ldrb	r5, [r1, #1]
  4002c2:	5cc1      	ldrb	r1, [r0, r3]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  4002c4:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
  4002c8:	ea81 0242 	eor.w	r2, r1, r2, lsl #1
	if (result & 0x1000000) {
  4002cc:	f012 7f80 	tst.w	r2, #16777216	; 0x1000000
		result ^= crcpoly;
  4002d0:	bf18      	it	ne
  4002d2:	ea82 020e 	eorne.w	r2, r2, lr
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  4002d6:	3302      	adds	r3, #2
  4002d8:	b29b      	uxth	r3, r3
  4002da:	42bb      	cmp	r3, r7
  4002dc:	dbef      	blt.n	4002be <mxt_init_device+0xea>
	crc_tmp = mxt_crc_24(crc_tmp,
  4002de:	4430      	add	r0, r6
	result = ((crc << 1u) ^ (uint32_t)data_word);
  4002e0:	f810 3c08 	ldrb.w	r3, [r0, #-8]
  4002e4:	ea83 0242 	eor.w	r2, r3, r2, lsl #1
	if (result & 0x1000000) {
  4002e8:	f012 7f80 	tst.w	r2, #16777216	; 0x1000000
  4002ec:	d003      	beq.n	4002f6 <mxt_init_device+0x122>
		result ^= crcpoly;
  4002ee:	f482 0200 	eor.w	r2, r2, #8388608	; 0x800000
  4002f2:	f082 021b 	eor.w	r2, r2, #27
	*crc = (crc_tmp & 0x00FFFFFF);
  4002f6:	f022 457f 	bic.w	r5, r2, #4278190080	; 0xff000000
	twihs_package_t packet = {
  4002fa:	2300      	movs	r3, #0
  4002fc:	9301      	str	r3, [sp, #4]
  4002fe:	9305      	str	r3, [sp, #20]
  400300:	f88d 6004 	strb.w	r6, [sp, #4]
  400304:	0a36      	lsrs	r6, r6, #8
  400306:	f88d 6005 	strb.w	r6, [sp, #5]
  40030a:	2302      	movs	r3, #2
  40030c:	9302      	str	r3, [sp, #8]
  40030e:	f8cd d00c 	str.w	sp, [sp, #12]
  400312:	2303      	movs	r3, #3
  400314:	9304      	str	r3, [sp, #16]
  400316:	7b23      	ldrb	r3, [r4, #12]
  400318:	f88d 3014 	strb.w	r3, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  40031c:	a901      	add	r1, sp, #4
  40031e:	68a0      	ldr	r0, [r4, #8]
  400320:	4b50      	ldr	r3, [pc, #320]	; (400464 <mxt_init_device+0x290>)
  400322:	4798      	blx	r3
  400324:	b328      	cbz	r0, 400372 <mxt_init_device+0x19e>
		return ERR_IO_ERROR;
  400326:	f04f 33ff 	mov.w	r3, #4294967295
	if (crc_calculated != crc_read) {
  40032a:	42ab      	cmp	r3, r5
  40032c:	f040 808b 	bne.w	400446 <mxt_init_device+0x272>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  400330:	6825      	ldr	r5, [r4, #0]
  400332:	79a8      	ldrb	r0, [r5, #6]
  400334:	b198      	cbz	r0, 40035e <mxt_init_device+0x18a>
  400336:	2300      	movs	r3, #0
  400338:	3301      	adds	r3, #1
  40033a:	b2da      	uxtb	r2, r3
  40033c:	4290      	cmp	r0, r2
  40033e:	d8fb      	bhi.n	400338 <mxt_init_device+0x164>
		tot_report_ids += (device->object_list[i].num_report_ids);
  400340:	6862      	ldr	r2, [r4, #4]
  400342:	1e43      	subs	r3, r0, #1
  400344:	b2db      	uxtb	r3, r3
  400346:	3301      	adds	r3, #1
  400348:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  40034c:	eb02 0143 	add.w	r1, r2, r3, lsl #1
  400350:	2000      	movs	r0, #0
  400352:	7953      	ldrb	r3, [r2, #5]
  400354:	4418      	add	r0, r3
  400356:	b2c0      	uxtb	r0, r0
  400358:	3206      	adds	r2, #6
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40035a:	4291      	cmp	r1, r2
  40035c:	d1f9      	bne.n	400352 <mxt_init_device+0x17e>
			malloc(sizeof(struct mxt_report_id_map) *
  40035e:	0040      	lsls	r0, r0, #1
  400360:	4b3f      	ldr	r3, [pc, #252]	; (400460 <mxt_init_device+0x28c>)
  400362:	4798      	blx	r3
	device->report_id_map = (struct mxt_report_id_map *)
  400364:	6160      	str	r0, [r4, #20]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  400366:	79ab      	ldrb	r3, [r5, #6]
  400368:	b173      	cbz	r3, 400388 <mxt_init_device+0x1b4>
  40036a:	2700      	movs	r7, #0
  40036c:	2601      	movs	r6, #1
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  40036e:	46be      	mov	lr, r7
  400370:	e037      	b.n	4003e2 <mxt_init_device+0x20e>
		return ((uint32_t)crc[2] << 16) | ((uint16_t)crc[1] << 8) | crc[0];
  400372:	f89d 2002 	ldrb.w	r2, [sp, #2]
  400376:	f89d 3000 	ldrb.w	r3, [sp]
  40037a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40037e:	f89d 2001 	ldrb.w	r2, [sp, #1]
  400382:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400386:	e7d0      	b.n	40032a <mxt_init_device+0x156>
		return ERR_BAD_DATA;
  400388:	f06f 0003 	mvn.w	r0, #3
  40038c:	e742      	b.n	400214 <mxt_init_device+0x40>
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  40038e:	3001      	adds	r0, #1
  400390:	b2c0      	uxtb	r0, r0
  400392:	6862      	ldr	r2, [r4, #4]
  400394:	1953      	adds	r3, r2, r5
  400396:	7919      	ldrb	r1, [r3, #4]
  400398:	4281      	cmp	r1, r0
  40039a:	d31c      	bcc.n	4003d6 <mxt_init_device+0x202>
			if (device->object_list[i].num_report_ids != 0) {
  40039c:	795b      	ldrb	r3, [r3, #5]
  40039e:	2b00      	cmp	r3, #0
  4003a0:	d0f5      	beq.n	40038e <mxt_init_device+0x1ba>
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  4003a2:	6862      	ldr	r2, [r4, #4]
  4003a4:	442a      	add	r2, r5
  4003a6:	7953      	ldrb	r3, [r2, #5]
  4003a8:	2b00      	cmp	r3, #0
  4003aa:	d0f0      	beq.n	40038e <mxt_init_device+0x1ba>
  4003ac:	4633      	mov	r3, r6
							device->object_list[i].type;
  4003ae:	7811      	ldrb	r1, [r2, #0]
					device->report_id_map[id_index].object_type =
  4003b0:	6962      	ldr	r2, [r4, #20]
  4003b2:	f802 1013 	strb.w	r1, [r2, r3, lsl #1]
					device->report_id_map[id_index].instance = j;
  4003b6:	6962      	ldr	r2, [r4, #20]
  4003b8:	eb02 0243 	add.w	r2, r2, r3, lsl #1
  4003bc:	7050      	strb	r0, [r2, #1]
					id_index++;
  4003be:	3301      	adds	r3, #1
  4003c0:	b2db      	uxtb	r3, r3
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  4003c2:	6862      	ldr	r2, [r4, #4]
  4003c4:	442a      	add	r2, r5
  4003c6:	1b99      	subs	r1, r3, r6
  4003c8:	f892 c005 	ldrb.w	ip, [r2, #5]
  4003cc:	b2c9      	uxtb	r1, r1
  4003ce:	458c      	cmp	ip, r1
  4003d0:	d8ed      	bhi.n	4003ae <mxt_init_device+0x1da>
					id_index++;
  4003d2:	461e      	mov	r6, r3
  4003d4:	e7db      	b.n	40038e <mxt_init_device+0x1ba>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4003d6:	3701      	adds	r7, #1
  4003d8:	b2ff      	uxtb	r7, r7
  4003da:	6823      	ldr	r3, [r4, #0]
  4003dc:	799b      	ldrb	r3, [r3, #6]
  4003de:	429f      	cmp	r7, r3
  4003e0:	d207      	bcs.n	4003f2 <mxt_init_device+0x21e>
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  4003e2:	eb07 0347 	add.w	r3, r7, r7, lsl #1
  4003e6:	005a      	lsls	r2, r3, #1
  4003e8:	4615      	mov	r5, r2
  4003ea:	6863      	ldr	r3, [r4, #4]
  4003ec:	4413      	add	r3, r2
  4003ee:	4670      	mov	r0, lr
  4003f0:	e7d4      	b.n	40039c <mxt_init_device+0x1c8>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4003f2:	b35b      	cbz	r3, 40044c <mxt_init_device+0x278>
  4003f4:	4610      	mov	r0, r2
  4003f6:	3b01      	subs	r3, #1
  4003f8:	b2db      	uxtb	r3, r3
  4003fa:	3301      	adds	r3, #1
  4003fc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  400400:	eb02 0243 	add.w	r2, r2, r3, lsl #1
  400404:	2100      	movs	r1, #0
		tot_report_ids += (device->object_list[i].num_report_ids);
  400406:	7943      	ldrb	r3, [r0, #5]
  400408:	4419      	add	r1, r3
  40040a:	b2c9      	uxtb	r1, r1
  40040c:	3006      	adds	r0, #6
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40040e:	4282      	cmp	r2, r0
  400410:	d1f9      	bne.n	400406 <mxt_init_device+0x232>
	for (i = 0; i < tot_rpt_id; ++i) {
  400412:	b1f1      	cbz	r1, 400452 <mxt_init_device+0x27e>
		if (device->report_id_map[i].object_type == object_type) {
  400414:	6962      	ldr	r2, [r4, #20]
  400416:	7813      	ldrb	r3, [r2, #0]
  400418:	2b09      	cmp	r3, #9
  40041a:	d00f      	beq.n	40043c <mxt_init_device+0x268>
  40041c:	2300      	movs	r3, #0
	for (i = 0; i < tot_rpt_id; ++i) {
  40041e:	3301      	adds	r3, #1
  400420:	b2db      	uxtb	r3, r3
  400422:	428b      	cmp	r3, r1
  400424:	d00c      	beq.n	400440 <mxt_init_device+0x26c>
		if (device->report_id_map[i].object_type == object_type) {
  400426:	f812 0f02 	ldrb.w	r0, [r2, #2]!
  40042a:	2809      	cmp	r0, #9
  40042c:	d1f7      	bne.n	40041e <mxt_init_device+0x24a>
			return i;
  40042e:	b25b      	sxtb	r3, r3
	if (status == -1) {
  400430:	f1b3 3fff 	cmp.w	r3, #4294967295
  400434:	d010      	beq.n	400458 <mxt_init_device+0x284>
	device->multitouch_report_offset = status;
  400436:	7723      	strb	r3, [r4, #28]
	return STATUS_OK;
  400438:	2000      	movs	r0, #0
  40043a:	e6eb      	b.n	400214 <mxt_init_device+0x40>
		if (device->report_id_map[i].object_type == object_type) {
  40043c:	2300      	movs	r3, #0
  40043e:	e7f6      	b.n	40042e <mxt_init_device+0x25a>
		return ERR_BAD_DATA;
  400440:	f06f 0003 	mvn.w	r0, #3
  400444:	e6e6      	b.n	400214 <mxt_init_device+0x40>
		return ERR_BAD_DATA;
  400446:	f06f 0003 	mvn.w	r0, #3
  40044a:	e6e3      	b.n	400214 <mxt_init_device+0x40>
		return ERR_BAD_DATA;
  40044c:	f06f 0003 	mvn.w	r0, #3
  400450:	e6e0      	b.n	400214 <mxt_init_device+0x40>
  400452:	f06f 0003 	mvn.w	r0, #3
  400456:	e6dd      	b.n	400214 <mxt_init_device+0x40>
  400458:	f06f 0003 	mvn.w	r0, #3
  40045c:	e6da      	b.n	400214 <mxt_init_device+0x40>
  40045e:	bf00      	nop
  400460:	00402441 	.word	0x00402441
  400464:	004018e9 	.word	0x004018e9
  400468:	0080001b 	.word	0x0080001b

0040046c <mxt_get_object_address>:
uint16_t mxt_get_object_address(struct mxt_device *device, uint8_t object_id,
		uint8_t instance)
{
	uint8_t i;

	for (i = 0; i < device->info_object->obj_count; i++) {
  40046c:	6803      	ldr	r3, [r0, #0]
  40046e:	799a      	ldrb	r2, [r3, #6]
  400470:	b1d2      	cbz	r2, 4004a8 <mxt_get_object_address+0x3c>
{
  400472:	b410      	push	{r4}
		if (object_id == device->object_list[i].type) {
  400474:	6844      	ldr	r4, [r0, #4]
  400476:	7823      	ldrb	r3, [r4, #0]
  400478:	428b      	cmp	r3, r1
  40047a:	d00e      	beq.n	40049a <mxt_get_object_address+0x2e>
  40047c:	1da3      	adds	r3, r4, #6
  40047e:	3a01      	subs	r2, #1
  400480:	b2d2      	uxtb	r2, r2
  400482:	3201      	adds	r2, #1
  400484:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  400488:	eb04 0242 	add.w	r2, r4, r2, lsl #1
	for (i = 0; i < device->info_object->obj_count; i++) {
  40048c:	4293      	cmp	r3, r2
  40048e:	d009      	beq.n	4004a4 <mxt_get_object_address+0x38>
		if (object_id == device->object_list[i].type) {
  400490:	461c      	mov	r4, r3
  400492:	f813 0b06 	ldrb.w	r0, [r3], #6
  400496:	4288      	cmp	r0, r1
  400498:	d1f8      	bne.n	40048c <mxt_get_object_address+0x20>
			return device->object_list[i].start_address;
  40049a:	f8b4 0001 	ldrh.w	r0, [r4, #1]
		}
	}

	return 0;
}
  40049e:	f85d 4b04 	ldr.w	r4, [sp], #4
  4004a2:	4770      	bx	lr
	return 0;
  4004a4:	2000      	movs	r0, #0
  4004a6:	e7fa      	b.n	40049e <mxt_get_object_address+0x32>
  4004a8:	2000      	movs	r0, #0
  4004aa:	4770      	bx	lr

004004ac <mxt_write_config_object>:
 * \param *obj_data Pointer to memory buffer containing object data
 * \result Operation result status code
 */
status_code_t mxt_write_config_object(struct mxt_device *device,
		mxt_memory_adr memory_adr, void *obj_data)
{
  4004ac:	b530      	push	{r4, r5, lr}
  4004ae:	b087      	sub	sp, #28
	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  4004b0:	2300      	movs	r3, #0
  4004b2:	9301      	str	r3, [sp, #4]
  4004b4:	9304      	str	r3, [sp, #16]
  4004b6:	9305      	str	r3, [sp, #20]
  4004b8:	f88d 1004 	strb.w	r1, [sp, #4]
  4004bc:	0a0b      	lsrs	r3, r1, #8
  4004be:	f88d 3005 	strb.w	r3, [sp, #5]
  4004c2:	2302      	movs	r3, #2
  4004c4:	9302      	str	r3, [sp, #8]
  4004c6:	9203      	str	r2, [sp, #12]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4004c8:	6803      	ldr	r3, [r0, #0]
  4004ca:	799a      	ldrb	r2, [r3, #6]
  4004cc:	b1ba      	cbz	r2, 4004fe <mxt_write_config_object+0x52>
		if (device->object_list[i].start_address == mem_adr) {
  4004ce:	6844      	ldr	r4, [r0, #4]
  4004d0:	f8b4 3001 	ldrh.w	r3, [r4, #1]
  4004d4:	428b      	cmp	r3, r1
  4004d6:	d00f      	beq.n	4004f8 <mxt_write_config_object+0x4c>
  4004d8:	1da3      	adds	r3, r4, #6
  4004da:	3a01      	subs	r2, #1
  4004dc:	b2d2      	uxtb	r2, r2
  4004de:	3201      	adds	r2, #1
  4004e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  4004e4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4004e8:	4293      	cmp	r3, r2
  4004ea:	d016      	beq.n	40051a <mxt_write_config_object+0x6e>
		if (device->object_list[i].start_address == mem_adr) {
  4004ec:	461c      	mov	r4, r3
  4004ee:	3306      	adds	r3, #6
  4004f0:	f8b4 5001 	ldrh.w	r5, [r4, #1]
  4004f4:	428d      	cmp	r5, r1
  4004f6:	d1f7      	bne.n	4004e8 <mxt_write_config_object+0x3c>
			return (device->object_list[i].size + 1);
  4004f8:	78e2      	ldrb	r2, [r4, #3]
  4004fa:	3201      	adds	r2, #1
  4004fc:	b2d2      	uxtb	r2, r2
		.addr[0]      = memory_adr,
		.addr[1]      = memory_adr >> 8,
		.addr_length  = sizeof(mxt_memory_adr),
		.chip         = device->mxt_chip_adr,
		.buffer       = obj_data,
		.length       = mxt_get_object_size(device, memory_adr)
  4004fe:	9204      	str	r2, [sp, #16]
	twihs_package_t packet = {
  400500:	7b03      	ldrb	r3, [r0, #12]
  400502:	f88d 3014 	strb.w	r3, [sp, #20]
	};

	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  400506:	a901      	add	r1, sp, #4
  400508:	6880      	ldr	r0, [r0, #8]
  40050a:	4b05      	ldr	r3, [pc, #20]	; (400520 <mxt_write_config_object+0x74>)
  40050c:	4798      	blx	r3
  40050e:	3000      	adds	r0, #0
  400510:	bf18      	it	ne
  400512:	2001      	movne	r0, #1
		return ERR_IO_ERROR;
	} else {
		return STATUS_OK;
	}

}
  400514:	4240      	negs	r0, r0
  400516:	b007      	add	sp, #28
  400518:	bd30      	pop	{r4, r5, pc}
	return 0;
  40051a:	2200      	movs	r2, #0
  40051c:	e7ef      	b.n	4004fe <mxt_write_config_object+0x52>
  40051e:	bf00      	nop
  400520:	00401995 	.word	0x00401995

00400524 <mxt_write_config_reg>:
 * \param value Value to be written to register
 * \result Operation result status code
 */
status_code_t mxt_write_config_reg(struct mxt_device *device,
		mxt_memory_adr memory_adr, uint8_t value)
{
  400524:	b500      	push	{lr}
  400526:	b089      	sub	sp, #36	; 0x24
  400528:	f88d 2007 	strb.w	r2, [sp, #7]
	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  40052c:	2300      	movs	r3, #0
  40052e:	9303      	str	r3, [sp, #12]
  400530:	9307      	str	r3, [sp, #28]
  400532:	f88d 100c 	strb.w	r1, [sp, #12]
  400536:	0a09      	lsrs	r1, r1, #8
  400538:	f88d 100d 	strb.w	r1, [sp, #13]
  40053c:	2302      	movs	r3, #2
  40053e:	9304      	str	r3, [sp, #16]
  400540:	f10d 0307 	add.w	r3, sp, #7
  400544:	9305      	str	r3, [sp, #20]
  400546:	2301      	movs	r3, #1
  400548:	9306      	str	r3, [sp, #24]
  40054a:	7b03      	ldrb	r3, [r0, #12]
  40054c:	f88d 301c 	strb.w	r3, [sp, #28]
		.chip         = device->mxt_chip_adr,
		.buffer       = &value,
		.length       = sizeof(value)
	};

	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  400550:	a903      	add	r1, sp, #12
  400552:	6880      	ldr	r0, [r0, #8]
  400554:	4b04      	ldr	r3, [pc, #16]	; (400568 <mxt_write_config_reg+0x44>)
  400556:	4798      	blx	r3
  400558:	3000      	adds	r0, #0
  40055a:	bf18      	it	ne
  40055c:	2001      	movne	r0, #1
		return ERR_IO_ERROR;
	} else {
		return STATUS_OK;
	}
}
  40055e:	4240      	negs	r0, r0
  400560:	b009      	add	sp, #36	; 0x24
  400562:	f85d fb04 	ldr.w	pc, [sp], #4
  400566:	bf00      	nop
  400568:	00401995 	.word	0x00401995

0040056c <mxt_is_message_pending>:
 * \param *device Pointer to mxt_device instance
 * \return Return /CHG pin status
 */
bool mxt_is_message_pending(struct mxt_device *device)
{
	if (ioport_get_pin_level(device->chgpin) == false) {
  40056c:	6982      	ldr	r2, [r0, #24]
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  40056e:	4b07      	ldr	r3, [pc, #28]	; (40058c <mxt_is_message_pending+0x20>)
  400570:	eb03 1352 	add.w	r3, r3, r2, lsr #5
  400574:	025b      	lsls	r3, r3, #9
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  400576:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
	return 1U << (pin & 0x1F);
  400578:	f002 021f 	and.w	r2, r2, #31
  40057c:	2301      	movs	r3, #1
  40057e:	fa03 f202 	lsl.w	r2, r3, r2
  400582:	420a      	tst	r2, r1
		return true;
	} else {
		return false;
	}
}
  400584:	bf0c      	ite	eq
  400586:	4618      	moveq	r0, r3
  400588:	2000      	movne	r0, #0
  40058a:	4770      	bx	lr
  40058c:	00200707 	.word	0x00200707

00400590 <mxt_read_message>:
 * \param *message Pointer to mxt_message instance
 * \return Operation result status code
 */
status_code_t mxt_read_message(struct mxt_device *device,
		struct mxt_conf_messageprocessor_t5 *message)
{
  400590:	b530      	push	{r4, r5, lr}
  400592:	b087      	sub	sp, #28
  400594:	4604      	mov	r4, r0
  400596:	460d      	mov	r5, r1
	uint16_t obj_adr = mxt_get_object_address(device,
  400598:	2200      	movs	r2, #0
  40059a:	2105      	movs	r1, #5
  40059c:	4b0d      	ldr	r3, [pc, #52]	; (4005d4 <mxt_read_message+0x44>)
  40059e:	4798      	blx	r3
			MXT_GEN_MESSAGEPROCESSOR_T5, 0);

	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  4005a0:	2300      	movs	r3, #0
  4005a2:	9301      	str	r3, [sp, #4]
  4005a4:	9305      	str	r3, [sp, #20]
  4005a6:	f88d 0004 	strb.w	r0, [sp, #4]
  4005aa:	0a00      	lsrs	r0, r0, #8
  4005ac:	f88d 0005 	strb.w	r0, [sp, #5]
  4005b0:	2302      	movs	r3, #2
  4005b2:	9302      	str	r3, [sp, #8]
  4005b4:	9503      	str	r5, [sp, #12]
  4005b6:	2309      	movs	r3, #9
  4005b8:	9304      	str	r3, [sp, #16]
  4005ba:	7b23      	ldrb	r3, [r4, #12]
  4005bc:	f88d 3014 	strb.w	r3, [sp, #20]
		.buffer       = message,
		.length       = MXT_TWI_MSG_SIZE_T5
	};

	/* Read information from the slave */
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4005c0:	a901      	add	r1, sp, #4
  4005c2:	68a0      	ldr	r0, [r4, #8]
  4005c4:	4b04      	ldr	r3, [pc, #16]	; (4005d8 <mxt_read_message+0x48>)
  4005c6:	4798      	blx	r3
  4005c8:	3000      	adds	r0, #0
  4005ca:	bf18      	it	ne
  4005cc:	2001      	movne	r0, #1
		return mxt_validate_message(&packet);
#else
		return STATUS_OK;
#endif
	}
}
  4005ce:	4240      	negs	r0, r0
  4005d0:	b007      	add	sp, #28
  4005d2:	bd30      	pop	{r4, r5, pc}
  4005d4:	0040046d 	.word	0x0040046d
  4005d8:	004018e9 	.word	0x004018e9

004005dc <mxt_read_touch_event>:
 * \param *touch_event Pointer to mxt_touch_event instance
 * \return Operation result status code
 */
status_code_t mxt_read_touch_event(struct mxt_device *device,
		struct mxt_touch_event *touch_event)
{
  4005dc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4005de:	b085      	sub	sp, #20
  4005e0:	4604      	mov	r4, r0
  4005e2:	460e      	mov	r6, r1
	uint8_t obj_type, status;
	struct mxt_conf_messageprocessor_t5 message;

	while (mxt_is_message_pending(device)) {
  4005e4:	4d17      	ldr	r5, [pc, #92]	; (400644 <mxt_read_touch_event+0x68>)
		if((status = mxt_read_message(device, &message)) != STATUS_OK) {
  4005e6:	4f18      	ldr	r7, [pc, #96]	; (400648 <mxt_read_touch_event+0x6c>)
	while (mxt_is_message_pending(device)) {
  4005e8:	4620      	mov	r0, r4
  4005ea:	47a8      	blx	r5
  4005ec:	b328      	cbz	r0, 40063a <mxt_read_touch_event+0x5e>
		if((status = mxt_read_message(device, &message)) != STATUS_OK) {
  4005ee:	a901      	add	r1, sp, #4
  4005f0:	4620      	mov	r0, r4
  4005f2:	47b8      	blx	r7
  4005f4:	4603      	mov	r3, r0
  4005f6:	bb10      	cbnz	r0, 40063e <mxt_read_touch_event+0x62>
 * \return Operation
 */
enum mxt_object_type mxt_get_object_type(struct mxt_device *device,
		struct mxt_conf_messageprocessor_t5 *message)
{
	return (enum mxt_object_type)(device->report_id_map[message->reportid].object_type);
  4005f8:	f89d 3004 	ldrb.w	r3, [sp, #4]
  4005fc:	6962      	ldr	r2, [r4, #20]
		if (obj_type == MXT_TOUCH_MULTITOUCHSCREEN_T9) {
  4005fe:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
  400602:	2a09      	cmp	r2, #9
  400604:	d1f0      	bne.n	4005e8 <mxt_read_touch_event+0xc>
			touch_event->id = (message.reportid -
  400606:	7f22      	ldrb	r2, [r4, #28]
  400608:	1a9b      	subs	r3, r3, r2
  40060a:	7033      	strb	r3, [r6, #0]
			touch_event->status = message.message[0];
  40060c:	f89d 3005 	ldrb.w	r3, [sp, #5]
  400610:	7073      	strb	r3, [r6, #1]
					((message.message[3] & 0xf0) >> 4);
  400612:	f89d 3008 	ldrb.w	r3, [sp, #8]
			touch_event->x = (message.message[1] << 4) |
  400616:	f89d 1006 	ldrb.w	r1, [sp, #6]
					((message.message[3] & 0xf0) >> 4);
  40061a:	091a      	lsrs	r2, r3, #4
			touch_event->x = (message.message[1] << 4) |
  40061c:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
  400620:	8072      	strh	r2, [r6, #2]
			touch_event->y = (message.message[2] << 4) |
  400622:	f89d 2007 	ldrb.w	r2, [sp, #7]
					(message.message[3] & 0x0f);
  400626:	f003 030f 	and.w	r3, r3, #15
			touch_event->y = (message.message[2] << 4) |
  40062a:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
  40062e:	80b3      	strh	r3, [r6, #4]
			touch_event->size = message.message[4];
  400630:	f89d 3009 	ldrb.w	r3, [sp, #9]
  400634:	71b3      	strb	r3, [r6, #6]
			return STATUS_OK;
  400636:	2300      	movs	r3, #0
  400638:	e001      	b.n	40063e <mxt_read_touch_event+0x62>
	return ERR_BAD_DATA;
  40063a:	f06f 0303 	mvn.w	r3, #3
}
  40063e:	4618      	mov	r0, r3
  400640:	b005      	add	sp, #20
  400642:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400644:	0040056d 	.word	0x0040056d
  400648:	00400591 	.word	0x00400591

0040064c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  40064c:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40064e:	4810      	ldr	r0, [pc, #64]	; (400690 <sysclk_init+0x44>)
  400650:	4b10      	ldr	r3, [pc, #64]	; (400694 <sysclk_init+0x48>)
  400652:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400654:	213e      	movs	r1, #62	; 0x3e
  400656:	2000      	movs	r0, #0
  400658:	4b0f      	ldr	r3, [pc, #60]	; (400698 <sysclk_init+0x4c>)
  40065a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  40065c:	4c0f      	ldr	r4, [pc, #60]	; (40069c <sysclk_init+0x50>)
  40065e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400660:	2800      	cmp	r0, #0
  400662:	d0fc      	beq.n	40065e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400664:	4b0e      	ldr	r3, [pc, #56]	; (4006a0 <sysclk_init+0x54>)
  400666:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400668:	4a0e      	ldr	r2, [pc, #56]	; (4006a4 <sysclk_init+0x58>)
  40066a:	4b0f      	ldr	r3, [pc, #60]	; (4006a8 <sysclk_init+0x5c>)
  40066c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  40066e:	4c0f      	ldr	r4, [pc, #60]	; (4006ac <sysclk_init+0x60>)
  400670:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400672:	2800      	cmp	r0, #0
  400674:	d0fc      	beq.n	400670 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400676:	2002      	movs	r0, #2
  400678:	4b0d      	ldr	r3, [pc, #52]	; (4006b0 <sysclk_init+0x64>)
  40067a:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40067c:	2000      	movs	r0, #0
  40067e:	4b0d      	ldr	r3, [pc, #52]	; (4006b4 <sysclk_init+0x68>)
  400680:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400682:	4b0d      	ldr	r3, [pc, #52]	; (4006b8 <sysclk_init+0x6c>)
  400684:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400686:	480d      	ldr	r0, [pc, #52]	; (4006bc <sysclk_init+0x70>)
  400688:	4b02      	ldr	r3, [pc, #8]	; (400694 <sysclk_init+0x48>)
  40068a:	4798      	blx	r3
  40068c:	bd10      	pop	{r4, pc}
  40068e:	bf00      	nop
  400690:	07270e00 	.word	0x07270e00
  400694:	00401d41 	.word	0x00401d41
  400698:	004015e5 	.word	0x004015e5
  40069c:	00401639 	.word	0x00401639
  4006a0:	00401649 	.word	0x00401649
  4006a4:	20183f01 	.word	0x20183f01
  4006a8:	400e0600 	.word	0x400e0600
  4006ac:	00401659 	.word	0x00401659
  4006b0:	00401549 	.word	0x00401549
  4006b4:	00401581 	.word	0x00401581
  4006b8:	00401c35 	.word	0x00401c35
  4006bc:	11e1a300 	.word	0x11e1a300

004006c0 <usart_serial_write_packet>:
 *
 */
status_code_t usart_serial_write_packet(usart_if usart, const uint8_t *data,
		size_t len)
{
	while (len) {
  4006c0:	2a00      	cmp	r2, #0
  4006c2:	d054      	beq.n	40076e <usart_serial_write_packet+0xae>
{
  4006c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4006c8:	4692      	mov	sl, r2
  4006ca:	4606      	mov	r6, r0
  4006cc:	460f      	mov	r7, r1
  4006ce:	448a      	add	sl, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4006d0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 40078c <usart_serial_write_packet+0xcc>
		while (uart_write((Uart*)p_usart, c)!=0);
  4006d4:	4d27      	ldr	r5, [pc, #156]	; (400774 <usart_serial_write_packet+0xb4>)
		return 1;
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4006d6:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 400790 <usart_serial_write_packet+0xd0>
  4006da:	e006      	b.n	4006ea <usart_serial_write_packet+0x2a>
		while (uart_write((Uart*)p_usart, c)!=0);
  4006dc:	4621      	mov	r1, r4
  4006de:	4640      	mov	r0, r8
  4006e0:	47a8      	blx	r5
  4006e2:	2800      	cmp	r0, #0
  4006e4:	d1fa      	bne.n	4006dc <usart_serial_write_packet+0x1c>
	while (len) {
  4006e6:	45ba      	cmp	sl, r7
  4006e8:	d03e      	beq.n	400768 <usart_serial_write_packet+0xa8>
		usart_serial_putchar(usart, *data);
  4006ea:	f817 4b01 	ldrb.w	r4, [r7], #1
	if (UART0 == (Uart*)p_usart) {
  4006ee:	4546      	cmp	r6, r8
  4006f0:	d0f4      	beq.n	4006dc <usart_serial_write_packet+0x1c>
	if (UART1 == (Uart*)p_usart) {
  4006f2:	454e      	cmp	r6, r9
  4006f4:	d016      	beq.n	400724 <usart_serial_write_packet+0x64>
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  4006f6:	4b20      	ldr	r3, [pc, #128]	; (400778 <usart_serial_write_packet+0xb8>)
  4006f8:	429e      	cmp	r6, r3
  4006fa:	d019      	beq.n	400730 <usart_serial_write_packet+0x70>
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  4006fc:	4b1f      	ldr	r3, [pc, #124]	; (40077c <usart_serial_write_packet+0xbc>)
  4006fe:	429e      	cmp	r6, r3
  400700:	d01c      	beq.n	40073c <usart_serial_write_packet+0x7c>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400702:	4b1f      	ldr	r3, [pc, #124]	; (400780 <usart_serial_write_packet+0xc0>)
  400704:	429e      	cmp	r6, r3
  400706:	d01f      	beq.n	400748 <usart_serial_write_packet+0x88>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400708:	4b1e      	ldr	r3, [pc, #120]	; (400784 <usart_serial_write_packet+0xc4>)
  40070a:	429e      	cmp	r6, r3
  40070c:	d024      	beq.n	400758 <usart_serial_write_packet+0x98>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  40070e:	4b1e      	ldr	r3, [pc, #120]	; (400788 <usart_serial_write_packet+0xc8>)
  400710:	429e      	cmp	r6, r3
  400712:	d1e8      	bne.n	4006e6 <usart_serial_write_packet+0x26>
		while (usart_write(p_usart, c)!=0);
  400714:	f8df b07c 	ldr.w	fp, [pc, #124]	; 400794 <usart_serial_write_packet+0xd4>
  400718:	4621      	mov	r1, r4
  40071a:	481b      	ldr	r0, [pc, #108]	; (400788 <usart_serial_write_packet+0xc8>)
  40071c:	47d8      	blx	fp
  40071e:	2800      	cmp	r0, #0
  400720:	d1fa      	bne.n	400718 <usart_serial_write_packet+0x58>
  400722:	e7e0      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (uart_write((Uart*)p_usart, c)!=0);
  400724:	4621      	mov	r1, r4
  400726:	4648      	mov	r0, r9
  400728:	47a8      	blx	r5
  40072a:	2800      	cmp	r0, #0
  40072c:	d1fa      	bne.n	400724 <usart_serial_write_packet+0x64>
  40072e:	e7da      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (uart_write((Uart*)p_usart, c)!=0);
  400730:	4621      	mov	r1, r4
  400732:	4811      	ldr	r0, [pc, #68]	; (400778 <usart_serial_write_packet+0xb8>)
  400734:	47a8      	blx	r5
  400736:	2800      	cmp	r0, #0
  400738:	d1fa      	bne.n	400730 <usart_serial_write_packet+0x70>
  40073a:	e7d4      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (uart_write((Uart*)p_usart, c)!=0);
  40073c:	4621      	mov	r1, r4
  40073e:	480f      	ldr	r0, [pc, #60]	; (40077c <usart_serial_write_packet+0xbc>)
  400740:	47a8      	blx	r5
  400742:	2800      	cmp	r0, #0
  400744:	d1fa      	bne.n	40073c <usart_serial_write_packet+0x7c>
  400746:	e7ce      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (usart_write(p_usart, c)!=0);
  400748:	f8df b048 	ldr.w	fp, [pc, #72]	; 400794 <usart_serial_write_packet+0xd4>
  40074c:	4621      	mov	r1, r4
  40074e:	480c      	ldr	r0, [pc, #48]	; (400780 <usart_serial_write_packet+0xc0>)
  400750:	47d8      	blx	fp
  400752:	2800      	cmp	r0, #0
  400754:	d1fa      	bne.n	40074c <usart_serial_write_packet+0x8c>
  400756:	e7c6      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (usart_write(p_usart, c)!=0);
  400758:	f8df b038 	ldr.w	fp, [pc, #56]	; 400794 <usart_serial_write_packet+0xd4>
  40075c:	4621      	mov	r1, r4
  40075e:	4809      	ldr	r0, [pc, #36]	; (400784 <usart_serial_write_packet+0xc4>)
  400760:	47d8      	blx	fp
  400762:	2800      	cmp	r0, #0
  400764:	d1fa      	bne.n	40075c <usart_serial_write_packet+0x9c>
  400766:	e7be      	b.n	4006e6 <usart_serial_write_packet+0x26>
		len--;
		data++;
	}
	return STATUS_OK;
}
  400768:	2000      	movs	r0, #0
  40076a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40076e:	2000      	movs	r0, #0
  400770:	4770      	bx	lr
  400772:	bf00      	nop
  400774:	00401a35 	.word	0x00401a35
  400778:	400e1a00 	.word	0x400e1a00
  40077c:	400e1c00 	.word	0x400e1c00
  400780:	40024000 	.word	0x40024000
  400784:	40028000 	.word	0x40028000
  400788:	4002c000 	.word	0x4002c000
  40078c:	400e0800 	.word	0x400e0800
  400790:	400e0a00 	.word	0x400e0a00
  400794:	00401b3d 	.word	0x00401b3d

00400798 <spi_master_init>:
 *
 * \param p_spi  Base address of the SPI instance.
 *
 */
void spi_master_init(Spi *p_spi)
{
  400798:	b510      	push	{r4, lr}
  40079a:	4604      	mov	r4, r0
#if SAMG55
	flexcom_enable(BOARD_FLEXCOM_SPI);
	flexcom_set_opmode(BOARD_FLEXCOM_SPI, FLEXCOM_SPI);
#else
	spi_enable_clock(p_spi);
  40079c:	4b10      	ldr	r3, [pc, #64]	; (4007e0 <spi_master_init+0x48>)
  40079e:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  4007a0:	2380      	movs	r3, #128	; 0x80
  4007a2:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4007a4:	6863      	ldr	r3, [r4, #4]
  4007a6:	f043 0301 	orr.w	r3, r3, #1
  4007aa:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4007ac:	6863      	ldr	r3, [r4, #4]
  4007ae:	f043 0310 	orr.w	r3, r3, #16
  4007b2:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  4007b4:	6863      	ldr	r3, [r4, #4]
  4007b6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4007ba:	6063      	str	r3, [r4, #4]
#endif
	spi_reset(p_spi);
	spi_set_master_mode(p_spi);
	spi_disable_mode_fault_detect(p_spi);
	spi_disable_loopback(p_spi);
	spi_set_peripheral_chip_select_value(p_spi, DEFAULT_CHIP_ID);
  4007bc:	2100      	movs	r1, #0
  4007be:	4620      	mov	r0, r4
  4007c0:	4b08      	ldr	r3, [pc, #32]	; (4007e4 <spi_master_init+0x4c>)
  4007c2:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  4007c4:	6863      	ldr	r3, [r4, #4]
  4007c6:	f023 0302 	bic.w	r3, r3, #2
  4007ca:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR &= (~SPI_MR_PCSDEC);
  4007cc:	6863      	ldr	r3, [r4, #4]
  4007ce:	f023 0304 	bic.w	r3, r3, #4
  4007d2:	6063      	str	r3, [r4, #4]
	spi_set_fixed_peripheral_select(p_spi);
	spi_disable_peripheral_select_decode(p_spi);
	spi_set_delay_between_chip_select(p_spi, CONFIG_SPI_MASTER_DELAY_BCS);
  4007d4:	2100      	movs	r1, #0
  4007d6:	4620      	mov	r0, r4
  4007d8:	4b03      	ldr	r3, [pc, #12]	; (4007e8 <spi_master_init+0x50>)
  4007da:	4798      	blx	r3
  4007dc:	bd10      	pop	{r4, pc}
  4007de:	bf00      	nop
  4007e0:	00401689 	.word	0x00401689
  4007e4:	004016b5 	.word	0x004016b5
  4007e8:	004016cb 	.word	0x004016cb

004007ec <spi_master_setup_device>:
 * \param baud_rate Baud rate for communication with slave device in Hz.
 * \param sel_id    Board specific select id.
 */
void spi_master_setup_device(Spi *p_spi, struct spi_device *device,
		spi_flags_t flags, uint32_t baud_rate, board_spi_select_id_t sel_id)
{
  4007ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4007f0:	4604      	mov	r4, r0
  4007f2:	460d      	mov	r5, r1
  4007f4:	4616      	mov	r6, r2
#if (SAM4L)
    int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_pba_hz());
#else
	int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_peripheral_hz());
  4007f6:	4915      	ldr	r1, [pc, #84]	; (40084c <spi_master_setup_device+0x60>)
  4007f8:	4618      	mov	r0, r3
  4007fa:	4b15      	ldr	r3, [pc, #84]	; (400850 <spi_master_setup_device+0x64>)
  4007fc:	4798      	blx	r3
  4007fe:	4607      	mov	r7, r0
	/* avoid Cppcheck Warning */
	UNUSED(sel_id);
	if (-1 == baud_div) {
		Assert(0 == "Failed to find baudrate divider");
	}
	spi_set_transfer_delay(p_spi, device->id, CONFIG_SPI_MASTER_DELAY_BS,
  400800:	2300      	movs	r3, #0
  400802:	461a      	mov	r2, r3
  400804:	6829      	ldr	r1, [r5, #0]
  400806:	4620      	mov	r0, r4
  400808:	f8df 805c 	ldr.w	r8, [pc, #92]	; 400868 <spi_master_setup_device+0x7c>
  40080c:	47c0      	blx	r8
			CONFIG_SPI_MASTER_DELAY_BCT);
	spi_set_bits_per_transfer(p_spi, device->id,
  40080e:	2208      	movs	r2, #8
  400810:	6829      	ldr	r1, [r5, #0]
  400812:	4620      	mov	r0, r4
  400814:	4b0f      	ldr	r3, [pc, #60]	; (400854 <spi_master_setup_device+0x68>)
  400816:	4798      	blx	r3
			CONFIG_SPI_MASTER_BITS_PER_TRANSFER);
	spi_set_baudrate_div(p_spi, device->id, baud_div);
  400818:	b2fa      	uxtb	r2, r7
  40081a:	6829      	ldr	r1, [r5, #0]
  40081c:	4620      	mov	r0, r4
  40081e:	4b0e      	ldr	r3, [pc, #56]	; (400858 <spi_master_setup_device+0x6c>)
  400820:	4798      	blx	r3
	spi_configure_cs_behavior(p_spi, device->id, SPI_CS_KEEP_LOW);
  400822:	2208      	movs	r2, #8
  400824:	6829      	ldr	r1, [r5, #0]
  400826:	4620      	mov	r0, r4
  400828:	4b0c      	ldr	r3, [pc, #48]	; (40085c <spi_master_setup_device+0x70>)
  40082a:	4798      	blx	r3
	spi_set_clock_polarity(p_spi, device->id, flags >> 1);
  40082c:	0872      	lsrs	r2, r6, #1
  40082e:	6829      	ldr	r1, [r5, #0]
  400830:	4620      	mov	r0, r4
  400832:	4b0b      	ldr	r3, [pc, #44]	; (400860 <spi_master_setup_device+0x74>)
  400834:	4798      	blx	r3
	spi_set_clock_phase(p_spi, device->id, ((flags & 0x1) ^ 0x1));
  400836:	f086 0201 	eor.w	r2, r6, #1
  40083a:	f002 0201 	and.w	r2, r2, #1
  40083e:	6829      	ldr	r1, [r5, #0]
  400840:	4620      	mov	r0, r4
  400842:	4b08      	ldr	r3, [pc, #32]	; (400864 <spi_master_setup_device+0x78>)
  400844:	4798      	blx	r3
  400846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40084a:	bf00      	nop
  40084c:	08f0d180 	.word	0x08f0d180
  400850:	004017a7 	.word	0x004017a7
  400854:	00401793 	.word	0x00401793
  400858:	004017bd 	.word	0x004017bd
  40085c:	0040174d 	.word	0x0040174d
  400860:	00401711 	.word	0x00401711
  400864:	0040172f 	.word	0x0040172f
  400868:	004017e5 	.word	0x004017e5

0040086c <spi_select_device>:
 * \param p_spi   Base address of the SPI instance.
 * \param device  SPI device.
 *
 */
void spi_select_device(Spi *p_spi, struct spi_device *device)
{
  40086c:	b508      	push	{r3, lr}
	if (p_spi->SPI_MR & SPI_MR_PCSDEC) {
  40086e:	6843      	ldr	r3, [r0, #4]
	if (spi_get_peripheral_select_decode_setting(p_spi)) {
  400870:	f013 0f04 	tst.w	r3, #4
  400874:	d006      	beq.n	400884 <spi_select_device+0x18>
		if (device->id < MAX_NUM_WITH_DECODER) {
  400876:	6809      	ldr	r1, [r1, #0]
  400878:	290f      	cmp	r1, #15
  40087a:	d900      	bls.n	40087e <spi_select_device+0x12>
  40087c:	bd08      	pop	{r3, pc}
			spi_set_peripheral_chip_select_value(p_spi, device->id);
  40087e:	4b06      	ldr	r3, [pc, #24]	; (400898 <spi_select_device+0x2c>)
  400880:	4798      	blx	r3
  400882:	bd08      	pop	{r3, pc}
		}
	} else {
		if (device->id < MAX_NUM_WITHOUT_DECODER) {
  400884:	6809      	ldr	r1, [r1, #0]
  400886:	2903      	cmp	r1, #3
  400888:	d8f8      	bhi.n	40087c <spi_select_device+0x10>
			spi_set_peripheral_chip_select_value(p_spi, (~(1 << device->id)));
  40088a:	2301      	movs	r3, #1
  40088c:	fa03 f101 	lsl.w	r1, r3, r1
  400890:	43c9      	mvns	r1, r1
  400892:	4b01      	ldr	r3, [pc, #4]	; (400898 <spi_select_device+0x2c>)
  400894:	4798      	blx	r3
		}
	}
}
  400896:	e7f1      	b.n	40087c <spi_select_device+0x10>
  400898:	004016b5 	.word	0x004016b5

0040089c <spi_write_packet>:
{
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t i = 0;
	uint8_t val;

	while (len) {
  40089c:	b11a      	cbz	r2, 4008a6 <spi_write_packet+0xa>
{
  40089e:	b410      	push	{r4}
  4008a0:	460c      	mov	r4, r1
  4008a2:	4411      	add	r1, r2
  4008a4:	e006      	b.n	4008b4 <spi_write_packet+0x18>
		spi_write_single(p_spi, val);
		i++;
		len--;
	}

	return STATUS_OK;
  4008a6:	2000      	movs	r0, #0
  4008a8:	4770      	bx	lr
		val = data[i];
  4008aa:	f814 3b01 	ldrb.w	r3, [r4], #1
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(Spi *p_spi, uint16_t data)
{
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  4008ae:	60c3      	str	r3, [r0, #12]
	while (len) {
  4008b0:	42a1      	cmp	r1, r4
  4008b2:	d00c      	beq.n	4008ce <spi_write_packet+0x32>
{
  4008b4:	f643 2399 	movw	r3, #15001	; 0x3a99
 * \retval 1 if transmissions are complete.
 * \retval 0 if transmissions are not complete.
 */
static inline uint32_t spi_is_tx_ready(Spi *p_spi)
{
	if (p_spi->SPI_SR & SPI_SR_TDRE) {
  4008b8:	6902      	ldr	r2, [r0, #16]
		while (!spi_is_tx_ready(p_spi)) {
  4008ba:	f012 0f02 	tst.w	r2, #2
  4008be:	d1f4      	bne.n	4008aa <spi_write_packet+0xe>
			if (!timeout--) {
  4008c0:	3b01      	subs	r3, #1
  4008c2:	d1f9      	bne.n	4008b8 <spi_write_packet+0x1c>
				return ERR_TIMEOUT;
  4008c4:	f06f 0002 	mvn.w	r0, #2
}
  4008c8:	f85d 4b04 	ldr.w	r4, [sp], #4
  4008cc:	4770      	bx	lr
	return STATUS_OK;
  4008ce:	2000      	movs	r0, #0
  4008d0:	e7fa      	b.n	4008c8 <spi_write_packet+0x2c>

004008d2 <spi_read_packet>:
{
	uint32_t timeout = SPI_TIMEOUT;
	uint8_t val;
	uint32_t i = 0;

	while (len) {
  4008d2:	b13a      	cbz	r2, 4008e4 <spi_read_packet+0x12>
{
  4008d4:	b470      	push	{r4, r5, r6}
  4008d6:	4615      	mov	r5, r2
  4008d8:	460c      	mov	r4, r1
  4008da:	440d      	add	r5, r1
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  4008dc:	26ff      	movs	r6, #255	; 0xff
 *
 * \return 1 if the SPI Receiver is ready, otherwise 0.
 */
static inline uint32_t spi_is_rx_ready(Spi *p_spi)
{
	if ((p_spi->SPI_SR & (SPI_SR_RDRF | SPI_SR_TXEMPTY))
  4008de:	f240 2101 	movw	r1, #513	; 0x201
  4008e2:	e012      	b.n	40090a <spi_read_packet+0x38>
		data[i] = val;
		i++;
		len--;
	}

	return STATUS_OK;
  4008e4:	2000      	movs	r0, #0
  4008e6:	4770      	bx	lr
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  4008e8:	60c6      	str	r6, [r0, #12]
		while (!spi_is_rx_ready(p_spi)) {
  4008ea:	f643 2399 	movw	r3, #15001	; 0x3a99
	if ((p_spi->SPI_SR & (SPI_SR_RDRF | SPI_SR_TXEMPTY))
  4008ee:	6902      	ldr	r2, [r0, #16]
  4008f0:	ea31 0202 	bics.w	r2, r1, r2
  4008f4:	d004      	beq.n	400900 <spi_read_packet+0x2e>
			if (!timeout--) {
  4008f6:	3b01      	subs	r3, #1
  4008f8:	d1f9      	bne.n	4008ee <spi_read_packet+0x1c>
				return ERR_TIMEOUT;
  4008fa:	f06f 0002 	mvn.w	r0, #2
  4008fe:	e00e      	b.n	40091e <spi_read_packet+0x4c>
	return (p_spi->SPI_RDR & SPI_RDR_RD_Msk);
  400900:	6883      	ldr	r3, [r0, #8]
 * \param data      Data to read.
 *
 */
static inline void spi_read_single(Spi *p_spi, uint8_t *data)
{
	*data = (uint8_t)spi_get(p_spi);
  400902:	f804 3b01 	strb.w	r3, [r4], #1
	while (len) {
  400906:	42a5      	cmp	r5, r4
  400908:	d00b      	beq.n	400922 <spi_read_packet+0x50>
{
  40090a:	f643 2399 	movw	r3, #15001	; 0x3a99
	if (p_spi->SPI_SR & SPI_SR_TDRE) {
  40090e:	6902      	ldr	r2, [r0, #16]
		while (!spi_is_tx_ready(p_spi)) {
  400910:	f012 0f02 	tst.w	r2, #2
  400914:	d1e8      	bne.n	4008e8 <spi_read_packet+0x16>
			if (!timeout--) {
  400916:	3b01      	subs	r3, #1
  400918:	d1f9      	bne.n	40090e <spi_read_packet+0x3c>
				return ERR_TIMEOUT;
  40091a:	f06f 0002 	mvn.w	r0, #2
}
  40091e:	bc70      	pop	{r4, r5, r6}
  400920:	4770      	bx	lr
	return STATUS_OK;
  400922:	2000      	movs	r0, #0
  400924:	e7fb      	b.n	40091e <spi_read_packet+0x4c>
	...

00400928 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400928:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  40092c:	b980      	cbnz	r0, 400950 <_read+0x28>
  40092e:	460c      	mov	r4, r1
  400930:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  400932:	2a00      	cmp	r2, #0
  400934:	dd0f      	ble.n	400956 <_read+0x2e>
  400936:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400938:	4e08      	ldr	r6, [pc, #32]	; (40095c <_read+0x34>)
  40093a:	4d09      	ldr	r5, [pc, #36]	; (400960 <_read+0x38>)
  40093c:	6830      	ldr	r0, [r6, #0]
  40093e:	4621      	mov	r1, r4
  400940:	682b      	ldr	r3, [r5, #0]
  400942:	4798      	blx	r3
		ptr++;
  400944:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400946:	42bc      	cmp	r4, r7
  400948:	d1f8      	bne.n	40093c <_read+0x14>
		nChars++;
	}
	return nChars;
}
  40094a:	4640      	mov	r0, r8
  40094c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400950:	f04f 38ff 	mov.w	r8, #4294967295
  400954:	e7f9      	b.n	40094a <_read+0x22>
	for (; len > 0; --len) {
  400956:	4680      	mov	r8, r0
  400958:	e7f7      	b.n	40094a <_read+0x22>
  40095a:	bf00      	nop
  40095c:	20400e50 	.word	0x20400e50
  400960:	20400e48 	.word	0x20400e48

00400964 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400964:	3801      	subs	r0, #1
  400966:	2802      	cmp	r0, #2
  400968:	d815      	bhi.n	400996 <_write+0x32>
{
  40096a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40096e:	460e      	mov	r6, r1
  400970:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  400972:	b19a      	cbz	r2, 40099c <_write+0x38>
  400974:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400976:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4009b0 <_write+0x4c>
  40097a:	4f0c      	ldr	r7, [pc, #48]	; (4009ac <_write+0x48>)
  40097c:	f8d8 0000 	ldr.w	r0, [r8]
  400980:	f815 1b01 	ldrb.w	r1, [r5], #1
  400984:	683b      	ldr	r3, [r7, #0]
  400986:	4798      	blx	r3
  400988:	2800      	cmp	r0, #0
  40098a:	db0a      	blt.n	4009a2 <_write+0x3e>
  40098c:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  40098e:	3c01      	subs	r4, #1
  400990:	d1f4      	bne.n	40097c <_write+0x18>
  400992:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400996:	f04f 30ff 	mov.w	r0, #4294967295
  40099a:	4770      	bx	lr
	for (; len != 0; --len) {
  40099c:	4610      	mov	r0, r2
  40099e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4009a2:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4009a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4009aa:	bf00      	nop
  4009ac:	20400e4c 	.word	0x20400e4c
  4009b0:	20400e50 	.word	0x20400e50

004009b4 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4009b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4009b8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4009bc:	4b9e      	ldr	r3, [pc, #632]	; (400c38 <board_init+0x284>)
  4009be:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  4009c0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009c4:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  4009c8:	4b9c      	ldr	r3, [pc, #624]	; (400c3c <board_init+0x288>)
  4009ca:	2200      	movs	r2, #0
  4009cc:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  4009d0:	695a      	ldr	r2, [r3, #20]
  4009d2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4009d6:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  4009d8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009dc:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  4009e0:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  4009e4:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  4009e8:	f007 0007 	and.w	r0, r7, #7
  4009ec:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  4009ee:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  4009f2:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  4009f6:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  4009fa:	f3bf 8f4f 	dsb	sy
  4009fe:	f04f 34ff 	mov.w	r4, #4294967295
  400a02:	fa04 fc00 	lsl.w	ip, r4, r0
  400a06:	fa06 f000 	lsl.w	r0, r6, r0
  400a0a:	fa04 f40e 	lsl.w	r4, r4, lr
  400a0e:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400a12:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400a14:	463a      	mov	r2, r7
  400a16:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400a18:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400a1c:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400a20:	3a01      	subs	r2, #1
  400a22:	4423      	add	r3, r4
  400a24:	f1b2 3fff 	cmp.w	r2, #4294967295
  400a28:	d1f6      	bne.n	400a18 <board_init+0x64>
        } while(sets--);
  400a2a:	3e01      	subs	r6, #1
  400a2c:	4460      	add	r0, ip
  400a2e:	f1b6 3fff 	cmp.w	r6, #4294967295
  400a32:	d1ef      	bne.n	400a14 <board_init+0x60>
  400a34:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400a38:	4b80      	ldr	r3, [pc, #512]	; (400c3c <board_init+0x288>)
  400a3a:	695a      	ldr	r2, [r3, #20]
  400a3c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400a40:	615a      	str	r2, [r3, #20]
  400a42:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a46:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a4a:	4a7d      	ldr	r2, [pc, #500]	; (400c40 <board_init+0x28c>)
  400a4c:	497d      	ldr	r1, [pc, #500]	; (400c44 <board_init+0x290>)
  400a4e:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a50:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400a54:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400a56:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a5a:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400a5e:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400a62:	f022 0201 	bic.w	r2, r2, #1
  400a66:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400a6a:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400a6e:	f022 0201 	bic.w	r2, r2, #1
  400a72:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400a76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a7a:	f3bf 8f6f 	isb	sy
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400a7e:	200a      	movs	r0, #10
  400a80:	4c71      	ldr	r4, [pc, #452]	; (400c48 <board_init+0x294>)
  400a82:	47a0      	blx	r4
  400a84:	200b      	movs	r0, #11
  400a86:	47a0      	blx	r4
  400a88:	200c      	movs	r0, #12
  400a8a:	47a0      	blx	r4
  400a8c:	2010      	movs	r0, #16
  400a8e:	47a0      	blx	r4
  400a90:	2011      	movs	r0, #17
  400a92:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400a94:	4e6d      	ldr	r6, [pc, #436]	; (400c4c <board_init+0x298>)
  400a96:	f44f 7880 	mov.w	r8, #256	; 0x100
  400a9a:	f8c6 8010 	str.w	r8, [r6, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400a9e:	f8c6 80a0 	str.w	r8, [r6, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400aa2:	f8c6 8030 	str.w	r8, [r6, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400aa6:	4c6a      	ldr	r4, [pc, #424]	; (400c50 <board_init+0x29c>)
  400aa8:	f44f 6500 	mov.w	r5, #2048	; 0x800
  400aac:	6165      	str	r5, [r4, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400aae:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		base->PIO_PUER = mask;
  400ab2:	6665      	str	r5, [r4, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400ab4:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  400ab8:	6565      	str	r5, [r4, #84]	; 0x54
		base->PIO_IFER = mask;
  400aba:	6225      	str	r5, [r4, #32]
		base->PIO_IFSCER = mask;
  400abc:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400ac0:	6f23      	ldr	r3, [r4, #112]	; 0x70
  400ac2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400ac6:	6723      	str	r3, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ac8:	6f63      	ldr	r3, [r4, #116]	; 0x74
  400aca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400ace:	6763      	str	r3, [r4, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400ad0:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400ad4:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400ad8:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
		base->PIO_PUDR = mask;
  400adc:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
  400ae0:	6623      	str	r3, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400ae2:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  400ae6:	6563      	str	r3, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  400ae8:	6263      	str	r3, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400aea:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400aee:	6f22      	ldr	r2, [r4, #112]	; 0x70
  400af0:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  400af4:	6722      	str	r2, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400af6:	6f62      	ldr	r2, [r4, #116]	; 0x74
  400af8:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  400afc:	6762      	str	r2, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400afe:	6063      	str	r3, [r4, #4]
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  400b00:	4a54      	ldr	r2, [pc, #336]	; (400c54 <board_init+0x2a0>)
  400b02:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  400b06:	f043 0310 	orr.w	r3, r3, #16
  400b0a:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
		base->PIO_PUDR = mask;
  400b0e:	f502 22b2 	add.w	r2, r2, #364544	; 0x59000
  400b12:	2310      	movs	r3, #16
  400b14:	6613      	str	r3, [r2, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400b16:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b1a:	6553      	str	r3, [r2, #84]	; 0x54
		base->PIO_IFDR = mask;
  400b1c:	6253      	str	r3, [r2, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400b1e:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  400b22:	6f11      	ldr	r1, [r2, #112]	; 0x70
  400b24:	4319      	orrs	r1, r3
  400b26:	6711      	str	r1, [r2, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  400b28:	6f51      	ldr	r1, [r2, #116]	; 0x74
  400b2a:	4319      	orrs	r1, r3
  400b2c:	6751      	str	r1, [r2, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400b2e:	6053      	str	r3, [r2, #4]
		base->PIO_PUDR = mask;
  400b30:	2208      	movs	r2, #8
  400b32:	6622      	str	r2, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400b34:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b38:	6562      	str	r2, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  400b3a:	6262      	str	r2, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400b3c:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400b40:	6f21      	ldr	r1, [r4, #112]	; 0x70
  400b42:	f021 0108 	bic.w	r1, r1, #8
  400b46:	6721      	str	r1, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400b48:	6f61      	ldr	r1, [r4, #116]	; 0x74
  400b4a:	f021 0108 	bic.w	r1, r1, #8
  400b4e:	6761      	str	r1, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400b50:	6062      	str	r2, [r4, #4]
		base->PIO_PUDR = mask;
  400b52:	6623      	str	r3, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400b54:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b58:	6563      	str	r3, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  400b5a:	6263      	str	r3, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400b5c:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400b60:	6f22      	ldr	r2, [r4, #112]	; 0x70
  400b62:	f022 0210 	bic.w	r2, r2, #16
  400b66:	6722      	str	r2, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400b68:	6f62      	ldr	r2, [r4, #116]	; 0x74
  400b6a:	f022 0210 	bic.w	r2, r2, #16
  400b6e:	6762      	str	r2, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400b70:	6063      	str	r3, [r4, #4]
	ioport_set_pin_mode(SD_MMC_0_CD_GPIO, SD_MMC_0_CD_FLAGS);
#endif

#ifdef CONF_BOARD_ILI9488
	/**LCD pin configure on EBI*/
	pio_configure(PIN_EBI_RESET_PIO, PIN_EBI_RESET_TYPE, PIN_EBI_RESET_MASK, PIN_EBI_RESET_ATTRI);
  400b72:	2300      	movs	r3, #0
  400b74:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  400b78:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400b7c:	4630      	mov	r0, r6
  400b7e:	4f36      	ldr	r7, [pc, #216]	; (400c58 <board_init+0x2a4>)
  400b80:	47b8      	blx	r7
	pio_configure(PIN_EBI_CDS_PIO, PIN_EBI_CDS_TYPE, PIN_EBI_CDS_MASK, PIN_EBI_CDS_ATTRI);
  400b82:	2300      	movs	r3, #0
  400b84:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  400b88:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400b8c:	4630      	mov	r0, r6
  400b8e:	47b8      	blx	r7
	pio_configure(PIN_EBI_DATAL_PIO, PIN_EBI_DATAL_TYPE, PIN_EBI_DATAL_MASK, PIN_EBI_DATAL_ATTRI);
  400b90:	2301      	movs	r3, #1
  400b92:	22ff      	movs	r2, #255	; 0xff
  400b94:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400b98:	4630      	mov	r0, r6
  400b9a:	47b8      	blx	r7
	pio_configure(PIN_EBI_DATAH_0_PIO, PIN_EBI_DATAH_0_TYPE, PIN_EBI_DATAH_0_MASK, PIN_EBI_DATAH_0_ATTRI);
  400b9c:	2301      	movs	r3, #1
  400b9e:	223f      	movs	r2, #63	; 0x3f
  400ba0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400ba4:	482d      	ldr	r0, [pc, #180]	; (400c5c <board_init+0x2a8>)
  400ba6:	47b8      	blx	r7
	pio_configure(PIN_EBI_DATAH_1_PIO, PIN_EBI_DATAH_1_TYPE, PIN_EBI_DATAH_1_MASK, PIN_EBI_DATAH_1_ATTRI);
  400ba8:	2301      	movs	r3, #1
  400baa:	f44f 32c0 	mov.w	r2, #98304	; 0x18000
  400bae:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bb2:	4620      	mov	r0, r4
  400bb4:	47b8      	blx	r7
	pio_configure(PIN_EBI_NWE_PIO, PIN_EBI_NWE_TYPE, PIN_EBI_NWE_MASK, PIN_EBI_NWE_ATTRI);
  400bb6:	2301      	movs	r3, #1
  400bb8:	4642      	mov	r2, r8
  400bba:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bbe:	4630      	mov	r0, r6
  400bc0:	47b8      	blx	r7
	pio_configure(PIN_EBI_NRD_PIO, PIN_EBI_NRD_TYPE, PIN_EBI_NRD_MASK, PIN_EBI_NRD_ATTRI);
  400bc2:	2301      	movs	r3, #1
  400bc4:	462a      	mov	r2, r5
  400bc6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bca:	4630      	mov	r0, r6
  400bcc:	47b8      	blx	r7
	pio_configure(PIN_EBI_CS_PIO, PIN_EBI_CS_TYPE, PIN_EBI_CS_MASK, PIN_EBI_CS_ATTRI);
  400bce:	2301      	movs	r3, #1
  400bd0:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400bd4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bd8:	4821      	ldr	r0, [pc, #132]	; (400c60 <board_init+0x2ac>)
  400bda:	47b8      	blx	r7
	pio_configure(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_TYPE, PIN_EBI_BACKLIGHT_MASK, PIN_EBI_BACKLIGHT_ATTRI);
  400bdc:	2300      	movs	r3, #0
  400bde:	f44f 7200 	mov.w	r2, #512	; 0x200
  400be2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400be6:	4630      	mov	r0, r6
  400be8:	47b8      	blx	r7
	pio_set(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_MASK);
  400bea:	f44f 7100 	mov.w	r1, #512	; 0x200
  400bee:	4630      	mov	r0, r6
  400bf0:	4b1c      	ldr	r3, [pc, #112]	; (400c64 <board_init+0x2b0>)
  400bf2:	4798      	blx	r3
	MATRIX->CCFG_SMCNFCS = CCFG_SMCNFCS_SDRAMEN;
#endif

#ifdef CONF_BOARD_ILI9488
	/**LCD pin configure on SPI*/
	pio_configure_pin(LCD_SPI_MISO_PIO, LCD_SPI_MISO_FLAGS);
  400bf4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400bf8:	2074      	movs	r0, #116	; 0x74
  400bfa:	4c1b      	ldr	r4, [pc, #108]	; (400c68 <board_init+0x2b4>)
  400bfc:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_MOSI_PIO, LCD_SPI_MOSI_FLAGS);
  400bfe:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c02:	2075      	movs	r0, #117	; 0x75
  400c04:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_SPCK_PIO, LCD_SPI_SPCK_FLAGS);
  400c06:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c0a:	2076      	movs	r0, #118	; 0x76
  400c0c:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_NPCS_PIO, LCD_SPI_NPCS_FLAGS);
  400c0e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c12:	207b      	movs	r0, #123	; 0x7b
  400c14:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_RESET_PIO, LCD_SPI_RESET_FLAGS);
  400c16:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400c1a:	2018      	movs	r0, #24
  400c1c:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_CDS_PIO, LCD_SPI_CDS_FLAGS);
  400c1e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400c22:	2006      	movs	r0, #6
  400c24:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_BACKLIGHT_PIO, LCD_SPI_BACKLIGHT_FLAGS);
  400c26:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400c2a:	2053      	movs	r0, #83	; 0x53
  400c2c:	47a0      	blx	r4
	pio_set_pin_high(LCD_SPI_BACKLIGHT_PIO);
  400c2e:	2053      	movs	r0, #83	; 0x53
  400c30:	4b0e      	ldr	r3, [pc, #56]	; (400c6c <board_init+0x2b8>)
  400c32:	4798      	blx	r3
  400c34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c38:	400e1850 	.word	0x400e1850
  400c3c:	e000ed00 	.word	0xe000ed00
  400c40:	400e0c00 	.word	0x400e0c00
  400c44:	5a00080c 	.word	0x5a00080c
  400c48:	00401669 	.word	0x00401669
  400c4c:	400e1200 	.word	0x400e1200
  400c50:	400e0e00 	.word	0x400e0e00
  400c54:	40088000 	.word	0x40088000
  400c58:	00401295 	.word	0x00401295
  400c5c:	400e1600 	.word	0x400e1600
  400c60:	400e1400 	.word	0x400e1400
  400c64:	004011a1 	.word	0x004011a1
  400c68:	00401365 	.word	0x00401365
  400c6c:	0040132d 	.word	0x0040132d

00400c70 <ili9488_check_box_coordinates>:
 * \param p_ul_x2 X coordinate of lower-right corner on LCD.
 * \param p_ul_y2 Y coordinate of lower-right corner on LCD.
 */
static void ili9488_check_box_coordinates(uint32_t *p_ul_x1, uint32_t *p_ul_y1,
		uint32_t *p_ul_x2, uint32_t *p_ul_y2)
{
  400c70:	b430      	push	{r4, r5}
	uint32_t dw;

	if (*p_ul_x1 >= ILI9488_LCD_WIDTH) {
  400c72:	6804      	ldr	r4, [r0, #0]
  400c74:	f5b4 7fa0 	cmp.w	r4, #320	; 0x140
  400c78:	d302      	bcc.n	400c80 <ili9488_check_box_coordinates+0x10>
		*p_ul_x1 = ILI9488_LCD_WIDTH - 1;
  400c7a:	f240 143f 	movw	r4, #319	; 0x13f
  400c7e:	6004      	str	r4, [r0, #0]
	}

	if (*p_ul_x2 >= ILI9488_LCD_WIDTH) {
  400c80:	6814      	ldr	r4, [r2, #0]
  400c82:	f5b4 7fa0 	cmp.w	r4, #320	; 0x140
  400c86:	d302      	bcc.n	400c8e <ili9488_check_box_coordinates+0x1e>
		*p_ul_x2 = ILI9488_LCD_WIDTH - 1;
  400c88:	f240 143f 	movw	r4, #319	; 0x13f
  400c8c:	6014      	str	r4, [r2, #0]
	}

	if (*p_ul_y1 >= ILI9488_LCD_HEIGHT) {
  400c8e:	680c      	ldr	r4, [r1, #0]
  400c90:	f5b4 7ff0 	cmp.w	r4, #480	; 0x1e0
  400c94:	d302      	bcc.n	400c9c <ili9488_check_box_coordinates+0x2c>
		*p_ul_y1 = ILI9488_LCD_HEIGHT - 1;
  400c96:	f240 14df 	movw	r4, #479	; 0x1df
  400c9a:	600c      	str	r4, [r1, #0]
	}

	if (*p_ul_y2 >= ILI9488_LCD_HEIGHT) {
  400c9c:	681c      	ldr	r4, [r3, #0]
  400c9e:	f5b4 7ff0 	cmp.w	r4, #480	; 0x1e0
  400ca2:	d302      	bcc.n	400caa <ili9488_check_box_coordinates+0x3a>
		*p_ul_y2 = ILI9488_LCD_HEIGHT - 1;
  400ca4:	f240 14df 	movw	r4, #479	; 0x1df
  400ca8:	601c      	str	r4, [r3, #0]
	}

	if (*p_ul_x1 > *p_ul_x2) {
  400caa:	6804      	ldr	r4, [r0, #0]
  400cac:	6815      	ldr	r5, [r2, #0]
  400cae:	42ac      	cmp	r4, r5
  400cb0:	d901      	bls.n	400cb6 <ili9488_check_box_coordinates+0x46>
		dw = *p_ul_x1;
		*p_ul_x1 = *p_ul_x2;
  400cb2:	6005      	str	r5, [r0, #0]
		*p_ul_x2 = dw;
  400cb4:	6014      	str	r4, [r2, #0]
	}

	if (*p_ul_y1 > *p_ul_y2) {
  400cb6:	680a      	ldr	r2, [r1, #0]
  400cb8:	6818      	ldr	r0, [r3, #0]
  400cba:	4282      	cmp	r2, r0
  400cbc:	d901      	bls.n	400cc2 <ili9488_check_box_coordinates+0x52>
		dw = *p_ul_y1;
		*p_ul_y1 = *p_ul_y2;
  400cbe:	6008      	str	r0, [r1, #0]
		*p_ul_y2 = dw;
  400cc0:	601a      	str	r2, [r3, #0]
	}
}
  400cc2:	bc30      	pop	{r4, r5}
  400cc4:	4770      	bx	lr
	...

00400cc8 <ili9488_write_ram_prepare>:
{
  400cc8:	b510      	push	{r4, lr}
  400cca:	b082      	sub	sp, #8
	pio_set_pin_low(LCD_SPI_CDS_PIO);
  400ccc:	2006      	movs	r0, #6
  400cce:	4b0a      	ldr	r3, [pc, #40]	; (400cf8 <ili9488_write_ram_prepare+0x30>)
  400cd0:	4798      	blx	r3
	spi_write(BOARD_ILI9488_SPI, ILI9488_CMD_MEMORY_WRITE, BOARD_ILI9488_SPI_NPCS, 0);
  400cd2:	2300      	movs	r3, #0
  400cd4:	2203      	movs	r2, #3
  400cd6:	212c      	movs	r1, #44	; 0x2c
  400cd8:	4808      	ldr	r0, [pc, #32]	; (400cfc <ili9488_write_ram_prepare+0x34>)
  400cda:	4c09      	ldr	r4, [pc, #36]	; (400d00 <ili9488_write_ram_prepare+0x38>)
  400cdc:	47a0      	blx	r4
	for(i = 0; i < 0xFF; i++);
  400cde:	2300      	movs	r3, #0
  400ce0:	9301      	str	r3, [sp, #4]
  400ce2:	9b01      	ldr	r3, [sp, #4]
  400ce4:	2bfe      	cmp	r3, #254	; 0xfe
  400ce6:	d805      	bhi.n	400cf4 <ili9488_write_ram_prepare+0x2c>
  400ce8:	9b01      	ldr	r3, [sp, #4]
  400cea:	3301      	adds	r3, #1
  400cec:	9301      	str	r3, [sp, #4]
  400cee:	9b01      	ldr	r3, [sp, #4]
  400cf0:	2bfe      	cmp	r3, #254	; 0xfe
  400cf2:	d9f9      	bls.n	400ce8 <ili9488_write_ram_prepare+0x20>
}
  400cf4:	b002      	add	sp, #8
  400cf6:	bd10      	pop	{r4, pc}
  400cf8:	00401349 	.word	0x00401349
  400cfc:	40008000 	.word	0x40008000
  400d00:	004016dd 	.word	0x004016dd

00400d04 <ili9488_write_register>:
{
  400d04:	b570      	push	{r4, r5, r6, lr}
  400d06:	b082      	sub	sp, #8
  400d08:	4605      	mov	r5, r0
  400d0a:	460e      	mov	r6, r1
  400d0c:	4614      	mov	r4, r2
	pio_set_pin_low(LCD_SPI_CDS_PIO);
  400d0e:	2006      	movs	r0, #6
  400d10:	4b14      	ldr	r3, [pc, #80]	; (400d64 <ili9488_write_register+0x60>)
  400d12:	4798      	blx	r3
	spi_write(BOARD_ILI9488_SPI, uc_reg, BOARD_ILI9488_SPI_NPCS, 0);
  400d14:	2300      	movs	r3, #0
  400d16:	2203      	movs	r2, #3
  400d18:	4629      	mov	r1, r5
  400d1a:	4813      	ldr	r0, [pc, #76]	; (400d68 <ili9488_write_register+0x64>)
  400d1c:	4d13      	ldr	r5, [pc, #76]	; (400d6c <ili9488_write_register+0x68>)
  400d1e:	47a8      	blx	r5
	for(i = 0; i < 0xFF; i++);
  400d20:	2300      	movs	r3, #0
  400d22:	9301      	str	r3, [sp, #4]
  400d24:	9b01      	ldr	r3, [sp, #4]
  400d26:	2bfe      	cmp	r3, #254	; 0xfe
  400d28:	d805      	bhi.n	400d36 <ili9488_write_register+0x32>
  400d2a:	9b01      	ldr	r3, [sp, #4]
  400d2c:	3301      	adds	r3, #1
  400d2e:	9301      	str	r3, [sp, #4]
  400d30:	9b01      	ldr	r3, [sp, #4]
  400d32:	2bfe      	cmp	r3, #254	; 0xfe
  400d34:	d9f9      	bls.n	400d2a <ili9488_write_register+0x26>
	if(size > 0) {
  400d36:	b90c      	cbnz	r4, 400d3c <ili9488_write_register+0x38>
}
  400d38:	b002      	add	sp, #8
  400d3a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_pin_high(LCD_SPI_CDS_PIO);
  400d3c:	2006      	movs	r0, #6
  400d3e:	4b0c      	ldr	r3, [pc, #48]	; (400d70 <ili9488_write_register+0x6c>)
  400d40:	4798      	blx	r3
		spi_write_packet(BOARD_ILI9488_SPI, us_data, size);
  400d42:	4622      	mov	r2, r4
  400d44:	4631      	mov	r1, r6
  400d46:	4808      	ldr	r0, [pc, #32]	; (400d68 <ili9488_write_register+0x64>)
  400d48:	4b0a      	ldr	r3, [pc, #40]	; (400d74 <ili9488_write_register+0x70>)
  400d4a:	4798      	blx	r3
		for(i = 0; i < 0x5F; i++);
  400d4c:	2300      	movs	r3, #0
  400d4e:	9301      	str	r3, [sp, #4]
  400d50:	9b01      	ldr	r3, [sp, #4]
  400d52:	2b5e      	cmp	r3, #94	; 0x5e
  400d54:	d8f0      	bhi.n	400d38 <ili9488_write_register+0x34>
  400d56:	9b01      	ldr	r3, [sp, #4]
  400d58:	3301      	adds	r3, #1
  400d5a:	9301      	str	r3, [sp, #4]
  400d5c:	9b01      	ldr	r3, [sp, #4]
  400d5e:	2b5e      	cmp	r3, #94	; 0x5e
  400d60:	d9f9      	bls.n	400d56 <ili9488_write_register+0x52>
  400d62:	e7e9      	b.n	400d38 <ili9488_write_register+0x34>
  400d64:	00401349 	.word	0x00401349
  400d68:	40008000 	.word	0x40008000
  400d6c:	004016dd 	.word	0x004016dd
  400d70:	0040132d 	.word	0x0040132d
  400d74:	0040089d 	.word	0x0040089d

00400d78 <ili9488_write_ram_buffer>:
{
  400d78:	b530      	push	{r4, r5, lr}
  400d7a:	b083      	sub	sp, #12
  400d7c:	4604      	mov	r4, r0
  400d7e:	460d      	mov	r5, r1
	pio_set_pin_high(LCD_SPI_CDS_PIO);
  400d80:	2006      	movs	r0, #6
  400d82:	4b0a      	ldr	r3, [pc, #40]	; (400dac <ili9488_write_ram_buffer+0x34>)
  400d84:	4798      	blx	r3
	spi_write_packet(BOARD_ILI9488_SPI, p_ul_buf, ul_size);
  400d86:	462a      	mov	r2, r5
  400d88:	4621      	mov	r1, r4
  400d8a:	4809      	ldr	r0, [pc, #36]	; (400db0 <ili9488_write_ram_buffer+0x38>)
  400d8c:	4b09      	ldr	r3, [pc, #36]	; (400db4 <ili9488_write_ram_buffer+0x3c>)
  400d8e:	4798      	blx	r3
	for(i = 0; i < 0xFF; i++);
  400d90:	2300      	movs	r3, #0
  400d92:	9301      	str	r3, [sp, #4]
  400d94:	9b01      	ldr	r3, [sp, #4]
  400d96:	2bfe      	cmp	r3, #254	; 0xfe
  400d98:	d805      	bhi.n	400da6 <ili9488_write_ram_buffer+0x2e>
  400d9a:	9b01      	ldr	r3, [sp, #4]
  400d9c:	3301      	adds	r3, #1
  400d9e:	9301      	str	r3, [sp, #4]
  400da0:	9b01      	ldr	r3, [sp, #4]
  400da2:	2bfe      	cmp	r3, #254	; 0xfe
  400da4:	d9f9      	bls.n	400d9a <ili9488_write_ram_buffer+0x22>
}
  400da6:	b003      	add	sp, #12
  400da8:	bd30      	pop	{r4, r5, pc}
  400daa:	bf00      	nop
  400dac:	0040132d 	.word	0x0040132d
  400db0:	40008000 	.word	0x40008000
  400db4:	0040089d 	.word	0x0040089d

00400db8 <ili9488_delay>:
	for(i = 0; i < ul_ms; i++) {
  400db8:	4601      	mov	r1, r0
  400dba:	b130      	cbz	r0, 400dca <ili9488_delay+0x12>
  400dbc:	4a03      	ldr	r2, [pc, #12]	; (400dcc <ili9488_delay+0x14>)
{
  400dbe:	4b04      	ldr	r3, [pc, #16]	; (400dd0 <ili9488_delay+0x18>)
		for(i = 0; i < 100000; i++) {
  400dc0:	3b01      	subs	r3, #1
  400dc2:	d1fd      	bne.n	400dc0 <ili9488_delay+0x8>
	for(i = 0; i < ul_ms; i++) {
  400dc4:	4291      	cmp	r1, r2
  400dc6:	d8fa      	bhi.n	400dbe <ili9488_delay+0x6>
  400dc8:	4770      	bx	lr
  400dca:	4770      	bx	lr
  400dcc:	000186a1 	.word	0x000186a1
  400dd0:	000186a0 	.word	0x000186a0

00400dd4 <ili9488_set_display_direction>:
 * \brief ILI9488 configure landscape.
 *
 * \Param LandscaprMode Landscape Mode.
 */
void ili9488_set_display_direction(enum ili9488_display_direction direction )
{
  400dd4:	b500      	push	{lr}
  400dd6:	b083      	sub	sp, #12
	ili9488_color_t value;
	if(direction) {
  400dd8:	b958      	cbnz	r0, 400df2 <ili9488_set_display_direction+0x1e>
		value = 0xE8;
	} else {
		value = 0x48;
  400dda:	2348      	movs	r3, #72	; 0x48
  400ddc:	f88d 3007 	strb.w	r3, [sp, #7]
	}
	ili9488_write_register(ILI9488_CMD_MEMORY_ACCESS_CONTROL, &value, 1);
  400de0:	2201      	movs	r2, #1
  400de2:	f10d 0107 	add.w	r1, sp, #7
  400de6:	2036      	movs	r0, #54	; 0x36
  400de8:	4b04      	ldr	r3, [pc, #16]	; (400dfc <ili9488_set_display_direction+0x28>)
  400dea:	4798      	blx	r3
}
  400dec:	b003      	add	sp, #12
  400dee:	f85d fb04 	ldr.w	pc, [sp], #4
		value = 0xE8;
  400df2:	23e8      	movs	r3, #232	; 0xe8
  400df4:	f88d 3007 	strb.w	r3, [sp, #7]
  400df8:	e7f2      	b.n	400de0 <ili9488_set_display_direction+0xc>
  400dfa:	bf00      	nop
  400dfc:	00400d05 	.word	0x00400d05

00400e00 <ili9488_set_window>:
 * \Param y start position.
 * \Param width  Width of window.
 * \Param height Height of window.
 */
void ili9488_set_window(uint16_t x, uint16_t y, uint16_t width, uint16_t height )
{
  400e00:	b510      	push	{r4, lr}
  400e02:	b084      	sub	sp, #16
	uint32_t cnt = 0;
	ili9488_color_t buf[4];

	cnt = sizeof(buf)/sizeof(ili9488_color_t);

	col_start  =  x ;
  400e04:	f8ad 000e 	strh.w	r0, [sp, #14]
	col_end    =  width + x - 1;
  400e08:	3a01      	subs	r2, #1
  400e0a:	4402      	add	r2, r0
  400e0c:	f8ad 200c 	strh.w	r2, [sp, #12]

	row_start = y ;
  400e10:	f8ad 100a 	strh.w	r1, [sp, #10]
	row_end   = height + y - 1;
  400e14:	3b01      	subs	r3, #1
  400e16:	4419      	add	r1, r3
  400e18:	f8ad 1008 	strh.w	r1, [sp, #8]

	buf[0] = get_8b_to_16b(col_start);
  400e1c:	0a03      	lsrs	r3, r0, #8
  400e1e:	f88d 3004 	strb.w	r3, [sp, #4]
	buf[1] = get_0b_to_8b(col_start);
  400e22:	f88d 0005 	strb.w	r0, [sp, #5]
	buf[2] = get_8b_to_16b(col_end);
  400e26:	f3c2 2307 	ubfx	r3, r2, #8, #8
  400e2a:	f88d 3006 	strb.w	r3, [sp, #6]
	buf[3] = get_0b_to_8b(col_end);
  400e2e:	f88d 2007 	strb.w	r2, [sp, #7]
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  400e32:	2204      	movs	r2, #4
  400e34:	eb0d 0102 	add.w	r1, sp, r2
  400e38:	202a      	movs	r0, #42	; 0x2a
  400e3a:	4c10      	ldr	r4, [pc, #64]	; (400e7c <ili9488_set_window+0x7c>)
  400e3c:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
  400e3e:	2200      	movs	r2, #0
  400e40:	4611      	mov	r1, r2
  400e42:	4610      	mov	r0, r2
  400e44:	47a0      	blx	r4

	/* Set Horizontal Address End Position */
	buf[0] = get_8b_to_16b(row_start);
  400e46:	f89d 300b 	ldrb.w	r3, [sp, #11]
  400e4a:	f88d 3004 	strb.w	r3, [sp, #4]
	buf[1] = get_0b_to_8b(row_start);
  400e4e:	f89d 300a 	ldrb.w	r3, [sp, #10]
  400e52:	f88d 3005 	strb.w	r3, [sp, #5]
	buf[2] = get_8b_to_16b(row_end);
  400e56:	f89d 3009 	ldrb.w	r3, [sp, #9]
  400e5a:	f88d 3006 	strb.w	r3, [sp, #6]
	buf[3] = get_0b_to_8b(row_end);
  400e5e:	f89d 3008 	ldrb.w	r3, [sp, #8]
  400e62:	f88d 3007 	strb.w	r3, [sp, #7]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  400e66:	2204      	movs	r2, #4
  400e68:	eb0d 0102 	add.w	r1, sp, r2
  400e6c:	202b      	movs	r0, #43	; 0x2b
  400e6e:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
  400e70:	2200      	movs	r2, #0
  400e72:	4611      	mov	r1, r2
  400e74:	4610      	mov	r0, r2
  400e76:	47a0      	blx	r4
}
  400e78:	b004      	add	sp, #16
  400e7a:	bd10      	pop	{r4, pc}
  400e7c:	00400d05 	.word	0x00400d05

00400e80 <ili9488_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili9488_display_on(void)
{
  400e80:	b508      	push	{r3, lr}
	ili9488_write_register(ILI9488_CMD_DISPLAY_ON, 0, 0);
  400e82:	2200      	movs	r2, #0
  400e84:	4611      	mov	r1, r2
  400e86:	2029      	movs	r0, #41	; 0x29
  400e88:	4b01      	ldr	r3, [pc, #4]	; (400e90 <ili9488_display_on+0x10>)
  400e8a:	4798      	blx	r3
  400e8c:	bd08      	pop	{r3, pc}
  400e8e:	bf00      	nop
  400e90:	00400d05 	.word	0x00400d05

00400e94 <ili9488_set_foreground_color>:
 * \brief Set foreground color.
 *
 * \param ul_color foreground color.
 */
void ili9488_set_foreground_color(uint32_t ul_color)
{
  400e94:	b410      	push	{r4}
		g_ul_pixel_cache[i] = ul_color;
	}
#endif
#ifdef ILI9488_SPIMODE
	for (i = 0; i < LCD_DATA_CACHE_SIZE * LCD_DATA_COLOR_UNIT; ) {
		g_ul_pixel_cache[i++] = ul_color>>16;
  400e96:	f3c0 4407 	ubfx	r4, r0, #16, #8
		g_ul_pixel_cache[i++] = ul_color>>8;
  400e9a:	f3c0 2107 	ubfx	r1, r0, #8, #8
  400e9e:	4b06      	ldr	r3, [pc, #24]	; (400eb8 <ili9488_set_foreground_color+0x24>)
  400ea0:	f503 7270 	add.w	r2, r3, #960	; 0x3c0
		g_ul_pixel_cache[i++] = ul_color>>16;
  400ea4:	701c      	strb	r4, [r3, #0]
		g_ul_pixel_cache[i++] = ul_color>>8;
  400ea6:	7059      	strb	r1, [r3, #1]
		g_ul_pixel_cache[i++] = ul_color&0xFF;
  400ea8:	7098      	strb	r0, [r3, #2]
  400eaa:	3303      	adds	r3, #3
	for (i = 0; i < LCD_DATA_CACHE_SIZE * LCD_DATA_COLOR_UNIT; ) {
  400eac:	4293      	cmp	r3, r2
  400eae:	d1f9      	bne.n	400ea4 <ili9488_set_foreground_color+0x10>
	}
#endif
}
  400eb0:	f85d 4b04 	ldr.w	r4, [sp], #4
  400eb4:	4770      	bx	lr
  400eb6:	bf00      	nop
  400eb8:	204009dc 	.word	0x204009dc

00400ebc <ili9488_set_cursor_position>:
 *
 * \param x X coordinate of upper-left corner on LCD.
 * \param y Y coordinate of upper-left corner on LCD.
 */
void ili9488_set_cursor_position(uint16_t x, uint16_t y)
{
  400ebc:	b510      	push	{r4, lr}
  400ebe:	b084      	sub	sp, #16
  400ec0:	f8ad 0006 	strh.w	r0, [sp, #6]
  400ec4:	f8ad 1004 	strh.w	r1, [sp, #4]
	uint32_t cnt = 0;

	ili9488_color_t buf[4];
	cnt = sizeof(buf)/sizeof(ili9488_color_t);

	buf[0] = get_8b_to_16b(x);
  400ec8:	0a03      	lsrs	r3, r0, #8
  400eca:	f88d 300c 	strb.w	r3, [sp, #12]
	buf[1] = get_0b_to_8b(x);
  400ece:	b2c0      	uxtb	r0, r0
  400ed0:	f88d 000d 	strb.w	r0, [sp, #13]
	buf[2] = get_8b_to_16b(x);
  400ed4:	f88d 300e 	strb.w	r3, [sp, #14]
	buf[3] = get_0b_to_8b(x);
  400ed8:	f88d 000f 	strb.w	r0, [sp, #15]
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  400edc:	2204      	movs	r2, #4
  400ede:	a903      	add	r1, sp, #12
  400ee0:	202a      	movs	r0, #42	; 0x2a
  400ee2:	4c0e      	ldr	r4, [pc, #56]	; (400f1c <ili9488_set_cursor_position+0x60>)
  400ee4:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
  400ee6:	2200      	movs	r2, #0
  400ee8:	4611      	mov	r1, r2
  400eea:	4610      	mov	r0, r2
  400eec:	47a0      	blx	r4


	/* Set Horizontal Address End Position */
	buf[0] = get_8b_to_16b(y);
  400eee:	f89d 2005 	ldrb.w	r2, [sp, #5]
  400ef2:	f88d 200c 	strb.w	r2, [sp, #12]
	buf[1] = get_0b_to_8b(y);
  400ef6:	f89d 3004 	ldrb.w	r3, [sp, #4]
  400efa:	f88d 300d 	strb.w	r3, [sp, #13]
	buf[2] = get_8b_to_16b(y);
  400efe:	f88d 200e 	strb.w	r2, [sp, #14]
	buf[3] = get_0b_to_8b(y);
  400f02:	f88d 300f 	strb.w	r3, [sp, #15]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  400f06:	2204      	movs	r2, #4
  400f08:	a903      	add	r1, sp, #12
  400f0a:	202b      	movs	r0, #43	; 0x2b
  400f0c:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
  400f0e:	2200      	movs	r2, #0
  400f10:	4611      	mov	r1, r2
  400f12:	4610      	mov	r0, r2
  400f14:	47a0      	blx	r4
}
  400f16:	b004      	add	sp, #16
  400f18:	bd10      	pop	{r4, pc}
  400f1a:	bf00      	nop
  400f1c:	00400d05 	.word	0x00400d05

00400f20 <ili9488_init>:
{
  400f20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400f24:	b087      	sub	sp, #28
  400f26:	4681      	mov	r9, r0
	struct spi_device ILI9488_SPI_DEVICE = {
  400f28:	2703      	movs	r7, #3
  400f2a:	ae06      	add	r6, sp, #24
  400f2c:	f846 7d08 	str.w	r7, [r6, #-8]!
	spi_master_init(BOARD_ILI9488_SPI);
  400f30:	4d5d      	ldr	r5, [pc, #372]	; (4010a8 <ili9488_init+0x188>)
  400f32:	4628      	mov	r0, r5
  400f34:	4b5d      	ldr	r3, [pc, #372]	; (4010ac <ili9488_init+0x18c>)
  400f36:	4798      	blx	r3
	spi_master_setup_device(BOARD_ILI9488_SPI, &ILI9488_SPI_DEVICE, SPI_MODE_3, ILI9488_SPI_BAUDRATE, 0);
  400f38:	2400      	movs	r4, #0
  400f3a:	9400      	str	r4, [sp, #0]
  400f3c:	4b5c      	ldr	r3, [pc, #368]	; (4010b0 <ili9488_init+0x190>)
  400f3e:	463a      	mov	r2, r7
  400f40:	4631      	mov	r1, r6
  400f42:	4628      	mov	r0, r5
  400f44:	f8df 8198 	ldr.w	r8, [pc, #408]	; 4010e0 <ili9488_init+0x1c0>
  400f48:	47c0      	blx	r8
	spi_configure_cs_behavior(BOARD_ILI9488_SPI, BOARD_ILI9488_SPI_NPCS, SPI_CS_RISE_NO_TX);
  400f4a:	4622      	mov	r2, r4
  400f4c:	4639      	mov	r1, r7
  400f4e:	4628      	mov	r0, r5
  400f50:	4b58      	ldr	r3, [pc, #352]	; (4010b4 <ili9488_init+0x194>)
  400f52:	4798      	blx	r3
	spi_select_device(BOARD_ILI9488_SPI, &ILI9488_SPI_DEVICE);
  400f54:	4631      	mov	r1, r6
  400f56:	4628      	mov	r0, r5
  400f58:	4b57      	ldr	r3, [pc, #348]	; (4010b8 <ili9488_init+0x198>)
  400f5a:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400f5c:	2001      	movs	r0, #1
  400f5e:	6028      	str	r0, [r5, #0]
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  400f60:	6168      	str	r0, [r5, #20]
	ili9488_write_register(ILI9488_CMD_SOFTWARE_RESET, 0x0000, 0);
  400f62:	4622      	mov	r2, r4
  400f64:	4621      	mov	r1, r4
  400f66:	4e55      	ldr	r6, [pc, #340]	; (4010bc <ili9488_init+0x19c>)
  400f68:	47b0      	blx	r6
	ili9488_delay(200);
  400f6a:	20c8      	movs	r0, #200	; 0xc8
  400f6c:	4d54      	ldr	r5, [pc, #336]	; (4010c0 <ili9488_init+0x1a0>)
  400f6e:	47a8      	blx	r5
	ili9488_write_register(ILI9488_CMD_SLEEP_OUT, 0x0000, 0);
  400f70:	4622      	mov	r2, r4
  400f72:	4621      	mov	r1, r4
  400f74:	2011      	movs	r0, #17
  400f76:	47b0      	blx	r6
	ili9488_delay(200);
  400f78:	20c8      	movs	r0, #200	; 0xc8
  400f7a:	47a8      	blx	r5
	reg = 0x81;
  400f7c:	2381      	movs	r3, #129	; 0x81
  400f7e:	f88d 300a 	strb.w	r3, [sp, #10]
	param = 0x0;
  400f82:	f88d 400b 	strb.w	r4, [sp, #11]
  400f86:	2610      	movs	r6, #16
		ili9488_write_register(ILI9488_CMD_SPI_READ_SETTINGS, &reg, 1);
  400f88:	f04f 0801 	mov.w	r8, #1
  400f8c:	4f4b      	ldr	r7, [pc, #300]	; (4010bc <ili9488_init+0x19c>)
		for(j = 0; j < 0xFF; j++);
  400f8e:	4625      	mov	r5, r4
		ili9488_write_register(ILI9488_CMD_SPI_READ_SETTINGS, &reg, 1);
  400f90:	4642      	mov	r2, r8
  400f92:	f10d 010a 	add.w	r1, sp, #10
  400f96:	20fb      	movs	r0, #251	; 0xfb
  400f98:	47b8      	blx	r7
		reg++;
  400f9a:	f89d 300a 	ldrb.w	r3, [sp, #10]
  400f9e:	3301      	adds	r3, #1
  400fa0:	f88d 300a 	strb.w	r3, [sp, #10]
		for(j = 0; j < 0xFF; j++);
  400fa4:	9503      	str	r5, [sp, #12]
  400fa6:	9b03      	ldr	r3, [sp, #12]
  400fa8:	2bfe      	cmp	r3, #254	; 0xfe
  400faa:	d805      	bhi.n	400fb8 <ili9488_init+0x98>
  400fac:	9b03      	ldr	r3, [sp, #12]
  400fae:	3301      	adds	r3, #1
  400fb0:	9303      	str	r3, [sp, #12]
  400fb2:	9b03      	ldr	r3, [sp, #12]
  400fb4:	2bfe      	cmp	r3, #254	; 0xfe
  400fb6:	d9f9      	bls.n	400fac <ili9488_init+0x8c>
		ili9488_write_register(ILI9488_CMD_READ_ID4, 0, 0);
  400fb8:	462a      	mov	r2, r5
  400fba:	4629      	mov	r1, r5
  400fbc:	20d3      	movs	r0, #211	; 0xd3
  400fbe:	47b8      	blx	r7
			pio_set_pin_high(LCD_SPI_CDS_PIO);
  400fc0:	2006      	movs	r0, #6
  400fc2:	4b40      	ldr	r3, [pc, #256]	; (4010c4 <ili9488_init+0x1a4>)
  400fc4:	4798      	blx	r3
			spi_read_packet(BOARD_ILI9488_SPI, &chipidBuf, 1);
  400fc6:	4642      	mov	r2, r8
  400fc8:	f10d 0109 	add.w	r1, sp, #9
  400fcc:	4836      	ldr	r0, [pc, #216]	; (4010a8 <ili9488_init+0x188>)
  400fce:	4b3e      	ldr	r3, [pc, #248]	; (4010c8 <ili9488_init+0x1a8>)
  400fd0:	4798      	blx	r3
			for(j = 0; j < 0xFF; j++);
  400fd2:	9503      	str	r5, [sp, #12]
  400fd4:	9b03      	ldr	r3, [sp, #12]
  400fd6:	2bfe      	cmp	r3, #254	; 0xfe
  400fd8:	d805      	bhi.n	400fe6 <ili9488_init+0xc6>
  400fda:	9b03      	ldr	r3, [sp, #12]
  400fdc:	3301      	adds	r3, #1
  400fde:	9303      	str	r3, [sp, #12]
  400fe0:	9b03      	ldr	r3, [sp, #12]
  400fe2:	2bfe      	cmp	r3, #254	; 0xfe
  400fe4:	d9f9      	bls.n	400fda <ili9488_init+0xba>
		chipid |= (chipidBuf & 0xFF) << ((i - 1) << 3);
  400fe6:	f89d 3009 	ldrb.w	r3, [sp, #9]
  400fea:	40b3      	lsls	r3, r6
  400fec:	431c      	orrs	r4, r3
		ili9488_write_register(ILI9488_CMD_SPI_READ_SETTINGS, &param, 1);
  400fee:	4642      	mov	r2, r8
  400ff0:	f10d 010b 	add.w	r1, sp, #11
  400ff4:	20fb      	movs	r0, #251	; 0xfb
  400ff6:	47b8      	blx	r7
		for(j = 0; j < 0xFFF; j++);
  400ff8:	9503      	str	r5, [sp, #12]
  400ffa:	9a03      	ldr	r2, [sp, #12]
  400ffc:	f640 73fe 	movw	r3, #4094	; 0xffe
  401000:	429a      	cmp	r2, r3
  401002:	d806      	bhi.n	401012 <ili9488_init+0xf2>
  401004:	461a      	mov	r2, r3
  401006:	9b03      	ldr	r3, [sp, #12]
  401008:	3301      	adds	r3, #1
  40100a:	9303      	str	r3, [sp, #12]
  40100c:	9b03      	ldr	r3, [sp, #12]
  40100e:	4293      	cmp	r3, r2
  401010:	d9f9      	bls.n	401006 <ili9488_init+0xe6>
  401012:	3e08      	subs	r6, #8
	for (i = 3; i > 0; i--) {
  401014:	f116 0f08 	cmn.w	r6, #8
  401018:	d1ba      	bne.n	400f90 <ili9488_init+0x70>
	if (chipid != ILI9488_DEVICE_CODE) {
  40101a:	f249 4388 	movw	r3, #38024	; 0x9488
  40101e:	429c      	cmp	r4, r3
  401020:	d003      	beq.n	40102a <ili9488_init+0x10a>
		return 1;
  401022:	2001      	movs	r0, #1
}
  401024:	b007      	add	sp, #28
  401026:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	param = 0x48;
  40102a:	ad06      	add	r5, sp, #24
  40102c:	2348      	movs	r3, #72	; 0x48
  40102e:	f805 3d01 	strb.w	r3, [r5, #-1]!
	ili9488_write_register(ILI9488_CMD_MEMORY_ACCESS_CONTROL, &param, 1);
  401032:	2201      	movs	r2, #1
  401034:	4629      	mov	r1, r5
  401036:	2036      	movs	r0, #54	; 0x36
  401038:	4e20      	ldr	r6, [pc, #128]	; (4010bc <ili9488_init+0x19c>)
  40103a:	47b0      	blx	r6
	ili9488_delay(100);
  40103c:	2064      	movs	r0, #100	; 0x64
  40103e:	4c20      	ldr	r4, [pc, #128]	; (4010c0 <ili9488_init+0x1a0>)
  401040:	47a0      	blx	r4
	param = 0x04;
  401042:	2304      	movs	r3, #4
  401044:	f88d 3017 	strb.w	r3, [sp, #23]
	ili9488_write_register(ILI9488_CMD_CABC_CONTROL_9, &param, 1);
  401048:	2201      	movs	r2, #1
  40104a:	4629      	mov	r1, r5
  40104c:	20cf      	movs	r0, #207	; 0xcf
  40104e:	47b0      	blx	r6
	ili9488_delay(100);
  401050:	2064      	movs	r0, #100	; 0x64
  401052:	47a0      	blx	r4
	param = 0x06;
  401054:	2306      	movs	r3, #6
  401056:	f88d 3017 	strb.w	r3, [sp, #23]
	ili9488_write_register(ILI9488_CMD_COLMOD_PIXEL_FORMAT_SET, &param, 1);
  40105a:	2201      	movs	r2, #1
  40105c:	4629      	mov	r1, r5
  40105e:	203a      	movs	r0, #58	; 0x3a
  401060:	47b0      	blx	r6
	ili9488_delay(100);
  401062:	2064      	movs	r0, #100	; 0x64
  401064:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NORMAL_DISP_MODE_ON, 0, 0);
  401066:	2200      	movs	r2, #0
  401068:	4611      	mov	r1, r2
  40106a:	2013      	movs	r0, #19
  40106c:	47b0      	blx	r6
	ili9488_delay(100);
  40106e:	2064      	movs	r0, #100	; 0x64
  401070:	47a0      	blx	r4
	ili9488_display_on();
  401072:	4b16      	ldr	r3, [pc, #88]	; (4010cc <ili9488_init+0x1ac>)
  401074:	4798      	blx	r3
	ili9488_delay(100);
  401076:	2064      	movs	r0, #100	; 0x64
  401078:	47a0      	blx	r4
	ili9488_set_display_direction(LANDSCAPE);
  40107a:	2000      	movs	r0, #0
  40107c:	4b14      	ldr	r3, [pc, #80]	; (4010d0 <ili9488_init+0x1b0>)
  40107e:	4798      	blx	r3
	ili9488_delay(100);
  401080:	2064      	movs	r0, #100	; 0x64
  401082:	47a0      	blx	r4
	ili9488_set_window(0, 0,p_opt->ul_width,p_opt->ul_height);
  401084:	f8b9 3004 	ldrh.w	r3, [r9, #4]
  401088:	f8b9 2000 	ldrh.w	r2, [r9]
  40108c:	2100      	movs	r1, #0
  40108e:	4608      	mov	r0, r1
  401090:	4c10      	ldr	r4, [pc, #64]	; (4010d4 <ili9488_init+0x1b4>)
  401092:	47a0      	blx	r4
	ili9488_set_foreground_color(p_opt->foreground_color);
  401094:	f8d9 0008 	ldr.w	r0, [r9, #8]
  401098:	4b0f      	ldr	r3, [pc, #60]	; (4010d8 <ili9488_init+0x1b8>)
  40109a:	4798      	blx	r3
	ili9488_set_cursor_position(0, 0);
  40109c:	2100      	movs	r1, #0
  40109e:	4608      	mov	r0, r1
  4010a0:	4b0e      	ldr	r3, [pc, #56]	; (4010dc <ili9488_init+0x1bc>)
  4010a2:	4798      	blx	r3
	return 0;
  4010a4:	2000      	movs	r0, #0
  4010a6:	e7bd      	b.n	401024 <ili9488_init+0x104>
  4010a8:	40008000 	.word	0x40008000
  4010ac:	00400799 	.word	0x00400799
  4010b0:	01312d00 	.word	0x01312d00
  4010b4:	0040174d 	.word	0x0040174d
  4010b8:	0040086d 	.word	0x0040086d
  4010bc:	00400d05 	.word	0x00400d05
  4010c0:	00400db9 	.word	0x00400db9
  4010c4:	0040132d 	.word	0x0040132d
  4010c8:	004008d3 	.word	0x004008d3
  4010cc:	00400e81 	.word	0x00400e81
  4010d0:	00400dd5 	.word	0x00400dd5
  4010d4:	00400e01 	.word	0x00400e01
  4010d8:	00400e95 	.word	0x00400e95
  4010dc:	00400ebd 	.word	0x00400ebd
  4010e0:	004007ed 	.word	0x004007ed

004010e4 <ili9488_draw_filled_rectangle>:
 * \param ul_x2 X coordinate of lower-right corner on LCD.
 * \param ul_y2 Y coordinate of lower-right corner on LCD.
 */
void ili9488_draw_filled_rectangle(uint32_t ul_x1, uint32_t ul_y1,
		uint32_t ul_x2, uint32_t ul_y2)
{
  4010e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4010e8:	b084      	sub	sp, #16
  4010ea:	9003      	str	r0, [sp, #12]
  4010ec:	9102      	str	r1, [sp, #8]
  4010ee:	9201      	str	r2, [sp, #4]
  4010f0:	aa04      	add	r2, sp, #16
  4010f2:	f842 3d10 	str.w	r3, [r2, #-16]!
	uint32_t size, blocks;

	/* Swap coordinates if necessary */
	ili9488_check_box_coordinates(&ul_x1, &ul_y1, &ul_x2, &ul_y2);
  4010f6:	4613      	mov	r3, r2
  4010f8:	aa01      	add	r2, sp, #4
  4010fa:	a902      	add	r1, sp, #8
  4010fc:	a803      	add	r0, sp, #12
  4010fe:	4c22      	ldr	r4, [pc, #136]	; (401188 <ili9488_draw_filled_rectangle+0xa4>)
  401100:	47a0      	blx	r4

	/* Determine the refresh window area */
	ili9488_set_window(ul_x1, ul_y1, (ul_x2 - ul_x1) + 1, (ul_y2 - ul_y1) + 1);
  401102:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  401106:	f8bd 1008 	ldrh.w	r1, [sp, #8]
  40110a:	9b00      	ldr	r3, [sp, #0]
  40110c:	3301      	adds	r3, #1
  40110e:	1a5b      	subs	r3, r3, r1
  401110:	9a01      	ldr	r2, [sp, #4]
  401112:	3201      	adds	r2, #1
  401114:	1a12      	subs	r2, r2, r0
  401116:	b29b      	uxth	r3, r3
  401118:	b292      	uxth	r2, r2
  40111a:	4c1c      	ldr	r4, [pc, #112]	; (40118c <ili9488_draw_filled_rectangle+0xa8>)
  40111c:	47a0      	blx	r4

	/* Prepare to write in GRAM */
	ili9488_write_ram_prepare();
  40111e:	4b1c      	ldr	r3, [pc, #112]	; (401190 <ili9488_draw_filled_rectangle+0xac>)
  401120:	4798      	blx	r3

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);
  401122:	9903      	ldr	r1, [sp, #12]
  401124:	9d01      	ldr	r5, [sp, #4]
  401126:	1a69      	subs	r1, r5, r1
  401128:	9d00      	ldr	r5, [sp, #0]
  40112a:	3501      	adds	r5, #1
  40112c:	9b02      	ldr	r3, [sp, #8]
  40112e:	1aed      	subs	r5, r5, r3
  401130:	fb01 5505 	mla	r5, r1, r5, r5
	/* Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
  401134:	4b17      	ldr	r3, [pc, #92]	; (401194 <ili9488_draw_filled_rectangle+0xb0>)
  401136:	fba3 2305 	umull	r2, r3, r3, r5
  40113a:	0a1b      	lsrs	r3, r3, #8
	while (blocks--) {
  40113c:	b163      	cbz	r3, 401158 <ili9488_draw_filled_rectangle+0x74>
  40113e:	1e5c      	subs	r4, r3, #1
		ili9488_write_ram_buffer(g_ul_pixel_cache, LCD_DATA_CACHE_SIZE * LCD_DATA_COLOR_UNIT);
  401140:	f8df 8058 	ldr.w	r8, [pc, #88]	; 40119c <ili9488_draw_filled_rectangle+0xb8>
  401144:	f44f 7770 	mov.w	r7, #960	; 0x3c0
  401148:	4e13      	ldr	r6, [pc, #76]	; (401198 <ili9488_draw_filled_rectangle+0xb4>)
  40114a:	4639      	mov	r1, r7
  40114c:	4640      	mov	r0, r8
  40114e:	47b0      	blx	r6
	while (blocks--) {
  401150:	3c01      	subs	r4, #1
  401152:	f1b4 3fff 	cmp.w	r4, #4294967295
  401156:	d1f8      	bne.n	40114a <ili9488_draw_filled_rectangle+0x66>
	}

	/* Send remaining pixels */
	ili9488_write_ram_buffer(g_ul_pixel_cache, (size % LCD_DATA_CACHE_SIZE) * LCD_DATA_COLOR_UNIT);
  401158:	490e      	ldr	r1, [pc, #56]	; (401194 <ili9488_draw_filled_rectangle+0xb0>)
  40115a:	fba1 3105 	umull	r3, r1, r1, r5
  40115e:	0a09      	lsrs	r1, r1, #8
  401160:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  401164:	eba5 1181 	sub.w	r1, r5, r1, lsl #6
  401168:	eb01 0141 	add.w	r1, r1, r1, lsl #1
  40116c:	480b      	ldr	r0, [pc, #44]	; (40119c <ili9488_draw_filled_rectangle+0xb8>)
  40116e:	4b0a      	ldr	r3, [pc, #40]	; (401198 <ili9488_draw_filled_rectangle+0xb4>)
  401170:	4798      	blx	r3

	/* Reset the refresh window area */
	ili9488_set_window(0, 0, ILI9488_LCD_WIDTH, ILI9488_LCD_HEIGHT);
  401172:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  401176:	f44f 72a0 	mov.w	r2, #320	; 0x140
  40117a:	2100      	movs	r1, #0
  40117c:	4608      	mov	r0, r1
  40117e:	4c03      	ldr	r4, [pc, #12]	; (40118c <ili9488_draw_filled_rectangle+0xa8>)
  401180:	47a0      	blx	r4

}
  401182:	b004      	add	sp, #16
  401184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401188:	00400c71 	.word	0x00400c71
  40118c:	00400e01 	.word	0x00400e01
  401190:	00400cc9 	.word	0x00400cc9
  401194:	cccccccd 	.word	0xcccccccd
  401198:	00400d79 	.word	0x00400d79
  40119c:	204009dc 	.word	0x204009dc

004011a0 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  4011a0:	6301      	str	r1, [r0, #48]	; 0x30
  4011a2:	4770      	bx	lr

004011a4 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4011a4:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4011a6:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4011aa:	d03a      	beq.n	401222 <pio_set_peripheral+0x7e>
  4011ac:	d813      	bhi.n	4011d6 <pio_set_peripheral+0x32>
  4011ae:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4011b2:	d025      	beq.n	401200 <pio_set_peripheral+0x5c>
  4011b4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4011b8:	d10a      	bne.n	4011d0 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4011ba:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4011bc:	4313      	orrs	r3, r2
  4011be:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4011c0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4011c2:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4011c4:	400b      	ands	r3, r1
  4011c6:	ea23 0302 	bic.w	r3, r3, r2
  4011ca:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4011cc:	6042      	str	r2, [r0, #4]
  4011ce:	4770      	bx	lr
	switch (ul_type) {
  4011d0:	2900      	cmp	r1, #0
  4011d2:	d1fb      	bne.n	4011cc <pio_set_peripheral+0x28>
  4011d4:	4770      	bx	lr
  4011d6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4011da:	d021      	beq.n	401220 <pio_set_peripheral+0x7c>
  4011dc:	d809      	bhi.n	4011f2 <pio_set_peripheral+0x4e>
  4011de:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4011e2:	d1f3      	bne.n	4011cc <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4011e4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4011e6:	4313      	orrs	r3, r2
  4011e8:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4011ea:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4011ec:	4313      	orrs	r3, r2
  4011ee:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4011f0:	e7ec      	b.n	4011cc <pio_set_peripheral+0x28>
	switch (ul_type) {
  4011f2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4011f6:	d013      	beq.n	401220 <pio_set_peripheral+0x7c>
  4011f8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4011fc:	d010      	beq.n	401220 <pio_set_peripheral+0x7c>
  4011fe:	e7e5      	b.n	4011cc <pio_set_peripheral+0x28>
{
  401200:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  401202:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  401204:	6f04      	ldr	r4, [r0, #112]	; 0x70
  401206:	43d3      	mvns	r3, r2
  401208:	4021      	ands	r1, r4
  40120a:	461c      	mov	r4, r3
  40120c:	4019      	ands	r1, r3
  40120e:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  401210:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  401212:	6f41      	ldr	r1, [r0, #116]	; 0x74
  401214:	400b      	ands	r3, r1
  401216:	4023      	ands	r3, r4
  401218:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40121a:	6042      	str	r2, [r0, #4]
}
  40121c:	f85d 4b04 	ldr.w	r4, [sp], #4
  401220:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  401222:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  401224:	6f01      	ldr	r1, [r0, #112]	; 0x70
  401226:	400b      	ands	r3, r1
  401228:	ea23 0302 	bic.w	r3, r3, r2
  40122c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40122e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  401230:	4313      	orrs	r3, r2
  401232:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  401234:	e7ca      	b.n	4011cc <pio_set_peripheral+0x28>

00401236 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  401236:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  401238:	f012 0f01 	tst.w	r2, #1
  40123c:	d10d      	bne.n	40125a <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  40123e:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  401240:	f012 0f0a 	tst.w	r2, #10
  401244:	d00b      	beq.n	40125e <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  401246:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  401248:	f012 0f02 	tst.w	r2, #2
  40124c:	d109      	bne.n	401262 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  40124e:	f012 0f08 	tst.w	r2, #8
  401252:	d008      	beq.n	401266 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  401254:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  401258:	e005      	b.n	401266 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  40125a:	6641      	str	r1, [r0, #100]	; 0x64
  40125c:	e7f0      	b.n	401240 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  40125e:	6241      	str	r1, [r0, #36]	; 0x24
  401260:	e7f2      	b.n	401248 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  401262:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  401266:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  401268:	6001      	str	r1, [r0, #0]
  40126a:	4770      	bx	lr

0040126c <pio_set_output>:
{
  40126c:	b410      	push	{r4}
  40126e:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  401270:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  401272:	b94c      	cbnz	r4, 401288 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  401274:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  401276:	b14b      	cbz	r3, 40128c <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  401278:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  40127a:	b94a      	cbnz	r2, 401290 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  40127c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40127e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  401280:	6001      	str	r1, [r0, #0]
}
  401282:	f85d 4b04 	ldr.w	r4, [sp], #4
  401286:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  401288:	6641      	str	r1, [r0, #100]	; 0x64
  40128a:	e7f4      	b.n	401276 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40128c:	6541      	str	r1, [r0, #84]	; 0x54
  40128e:	e7f4      	b.n	40127a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  401290:	6301      	str	r1, [r0, #48]	; 0x30
  401292:	e7f4      	b.n	40127e <pio_set_output+0x12>

00401294 <pio_configure>:
{
  401294:	b570      	push	{r4, r5, r6, lr}
  401296:	b082      	sub	sp, #8
  401298:	4605      	mov	r5, r0
  40129a:	4616      	mov	r6, r2
  40129c:	461c      	mov	r4, r3
	switch (ul_type) {
  40129e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4012a2:	d014      	beq.n	4012ce <pio_configure+0x3a>
  4012a4:	d90a      	bls.n	4012bc <pio_configure+0x28>
  4012a6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4012aa:	d024      	beq.n	4012f6 <pio_configure+0x62>
  4012ac:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4012b0:	d021      	beq.n	4012f6 <pio_configure+0x62>
  4012b2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4012b6:	d017      	beq.n	4012e8 <pio_configure+0x54>
		return 0;
  4012b8:	2000      	movs	r0, #0
  4012ba:	e01a      	b.n	4012f2 <pio_configure+0x5e>
	switch (ul_type) {
  4012bc:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4012c0:	d005      	beq.n	4012ce <pio_configure+0x3a>
  4012c2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4012c6:	d002      	beq.n	4012ce <pio_configure+0x3a>
  4012c8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4012cc:	d1f4      	bne.n	4012b8 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  4012ce:	4632      	mov	r2, r6
  4012d0:	4628      	mov	r0, r5
  4012d2:	4b11      	ldr	r3, [pc, #68]	; (401318 <pio_configure+0x84>)
  4012d4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4012d6:	f014 0f01 	tst.w	r4, #1
  4012da:	d102      	bne.n	4012e2 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  4012dc:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  4012de:	2001      	movs	r0, #1
  4012e0:	e007      	b.n	4012f2 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  4012e2:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  4012e4:	2001      	movs	r0, #1
  4012e6:	e004      	b.n	4012f2 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  4012e8:	461a      	mov	r2, r3
  4012ea:	4631      	mov	r1, r6
  4012ec:	4b0b      	ldr	r3, [pc, #44]	; (40131c <pio_configure+0x88>)
  4012ee:	4798      	blx	r3
	return 1;
  4012f0:	2001      	movs	r0, #1
}
  4012f2:	b002      	add	sp, #8
  4012f4:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  4012f6:	f004 0301 	and.w	r3, r4, #1
  4012fa:	9300      	str	r3, [sp, #0]
  4012fc:	f3c4 0380 	ubfx	r3, r4, #2, #1
  401300:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  401304:	bf14      	ite	ne
  401306:	2200      	movne	r2, #0
  401308:	2201      	moveq	r2, #1
  40130a:	4631      	mov	r1, r6
  40130c:	4628      	mov	r0, r5
  40130e:	4c04      	ldr	r4, [pc, #16]	; (401320 <pio_configure+0x8c>)
  401310:	47a0      	blx	r4
	return 1;
  401312:	2001      	movs	r0, #1
		break;
  401314:	e7ed      	b.n	4012f2 <pio_configure+0x5e>
  401316:	bf00      	nop
  401318:	004011a5 	.word	0x004011a5
  40131c:	00401237 	.word	0x00401237
  401320:	0040126d 	.word	0x0040126d

00401324 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  401324:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  401326:	4770      	bx	lr

00401328 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  401328:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  40132a:	4770      	bx	lr

0040132c <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  40132c:	4b05      	ldr	r3, [pc, #20]	; (401344 <pio_set_pin_high+0x18>)
  40132e:	eb03 1350 	add.w	r3, r3, r0, lsr #5
  401332:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  401334:	f000 001f 	and.w	r0, r0, #31
  401338:	2201      	movs	r2, #1
  40133a:	fa02 f000 	lsl.w	r0, r2, r0
  40133e:	6318      	str	r0, [r3, #48]	; 0x30
  401340:	4770      	bx	lr
  401342:	bf00      	nop
  401344:	00200707 	.word	0x00200707

00401348 <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  401348:	4b05      	ldr	r3, [pc, #20]	; (401360 <pio_set_pin_low+0x18>)
  40134a:	eb03 1350 	add.w	r3, r3, r0, lsr #5
  40134e:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  401350:	f000 001f 	and.w	r0, r0, #31
  401354:	2201      	movs	r2, #1
  401356:	fa02 f000 	lsl.w	r0, r2, r0
  40135a:	6358      	str	r0, [r3, #52]	; 0x34
  40135c:	4770      	bx	lr
  40135e:	bf00      	nop
  401360:	00200707 	.word	0x00200707

00401364 <pio_configure_pin>:
{
  401364:	b570      	push	{r4, r5, r6, lr}
  401366:	b082      	sub	sp, #8
  401368:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  40136a:	4c46      	ldr	r4, [pc, #280]	; (401484 <pio_configure_pin+0x120>)
  40136c:	eb04 1450 	add.w	r4, r4, r0, lsr #5
  401370:	0264      	lsls	r4, r4, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  401372:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  401376:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  40137a:	d059      	beq.n	401430 <pio_configure_pin+0xcc>
  40137c:	d80a      	bhi.n	401394 <pio_configure_pin+0x30>
  40137e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  401382:	d02f      	beq.n	4013e4 <pio_configure_pin+0x80>
  401384:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  401388:	d03f      	beq.n	40140a <pio_configure_pin+0xa6>
  40138a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40138e:	d016      	beq.n	4013be <pio_configure_pin+0x5a>
		return 0;
  401390:	2000      	movs	r0, #0
  401392:	e012      	b.n	4013ba <pio_configure_pin+0x56>
	switch (ul_flags & PIO_TYPE_Msk) {
  401394:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  401398:	d05d      	beq.n	401456 <pio_configure_pin+0xf2>
  40139a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40139e:	d05a      	beq.n	401456 <pio_configure_pin+0xf2>
  4013a0:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4013a4:	d1f4      	bne.n	401390 <pio_configure_pin+0x2c>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  4013a6:	f000 011f 	and.w	r1, r0, #31
  4013aa:	2601      	movs	r6, #1
  4013ac:	462a      	mov	r2, r5
  4013ae:	fa06 f101 	lsl.w	r1, r6, r1
  4013b2:	4620      	mov	r0, r4
  4013b4:	4b34      	ldr	r3, [pc, #208]	; (401488 <pio_configure_pin+0x124>)
  4013b6:	4798      	blx	r3
	return 1;
  4013b8:	4630      	mov	r0, r6
}
  4013ba:	b002      	add	sp, #8
  4013bc:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4013be:	f000 001f 	and.w	r0, r0, #31
  4013c2:	2601      	movs	r6, #1
  4013c4:	4086      	lsls	r6, r0
  4013c6:	4632      	mov	r2, r6
  4013c8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4013cc:	4620      	mov	r0, r4
  4013ce:	4b2f      	ldr	r3, [pc, #188]	; (40148c <pio_configure_pin+0x128>)
  4013d0:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4013d2:	f015 0f01 	tst.w	r5, #1
  4013d6:	d102      	bne.n	4013de <pio_configure_pin+0x7a>
		p_pio->PIO_PUDR = ul_mask;
  4013d8:	6626      	str	r6, [r4, #96]	; 0x60
	return 1;
  4013da:	2001      	movs	r0, #1
  4013dc:	e7ed      	b.n	4013ba <pio_configure_pin+0x56>
		p_pio->PIO_PUER = ul_mask;
  4013de:	6666      	str	r6, [r4, #100]	; 0x64
	return 1;
  4013e0:	2001      	movs	r0, #1
  4013e2:	e7ea      	b.n	4013ba <pio_configure_pin+0x56>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  4013e4:	f000 001f 	and.w	r0, r0, #31
  4013e8:	2601      	movs	r6, #1
  4013ea:	4086      	lsls	r6, r0
  4013ec:	4632      	mov	r2, r6
  4013ee:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4013f2:	4620      	mov	r0, r4
  4013f4:	4b25      	ldr	r3, [pc, #148]	; (40148c <pio_configure_pin+0x128>)
  4013f6:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4013f8:	f015 0f01 	tst.w	r5, #1
  4013fc:	d102      	bne.n	401404 <pio_configure_pin+0xa0>
		p_pio->PIO_PUDR = ul_mask;
  4013fe:	6626      	str	r6, [r4, #96]	; 0x60
	return 1;
  401400:	2001      	movs	r0, #1
  401402:	e7da      	b.n	4013ba <pio_configure_pin+0x56>
		p_pio->PIO_PUER = ul_mask;
  401404:	6666      	str	r6, [r4, #100]	; 0x64
	return 1;
  401406:	2001      	movs	r0, #1
  401408:	e7d7      	b.n	4013ba <pio_configure_pin+0x56>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40140a:	f000 001f 	and.w	r0, r0, #31
  40140e:	2601      	movs	r6, #1
  401410:	4086      	lsls	r6, r0
  401412:	4632      	mov	r2, r6
  401414:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  401418:	4620      	mov	r0, r4
  40141a:	4b1c      	ldr	r3, [pc, #112]	; (40148c <pio_configure_pin+0x128>)
  40141c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40141e:	f015 0f01 	tst.w	r5, #1
  401422:	d102      	bne.n	40142a <pio_configure_pin+0xc6>
		p_pio->PIO_PUDR = ul_mask;
  401424:	6626      	str	r6, [r4, #96]	; 0x60
	return 1;
  401426:	2001      	movs	r0, #1
  401428:	e7c7      	b.n	4013ba <pio_configure_pin+0x56>
		p_pio->PIO_PUER = ul_mask;
  40142a:	6666      	str	r6, [r4, #100]	; 0x64
	return 1;
  40142c:	2001      	movs	r0, #1
  40142e:	e7c4      	b.n	4013ba <pio_configure_pin+0x56>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  401430:	f000 001f 	and.w	r0, r0, #31
  401434:	2601      	movs	r6, #1
  401436:	4086      	lsls	r6, r0
  401438:	4632      	mov	r2, r6
  40143a:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40143e:	4620      	mov	r0, r4
  401440:	4b12      	ldr	r3, [pc, #72]	; (40148c <pio_configure_pin+0x128>)
  401442:	4798      	blx	r3
	if (ul_pull_up_enable) {
  401444:	f015 0f01 	tst.w	r5, #1
  401448:	d102      	bne.n	401450 <pio_configure_pin+0xec>
		p_pio->PIO_PUDR = ul_mask;
  40144a:	6626      	str	r6, [r4, #96]	; 0x60
	return 1;
  40144c:	2001      	movs	r0, #1
  40144e:	e7b4      	b.n	4013ba <pio_configure_pin+0x56>
		p_pio->PIO_PUER = ul_mask;
  401450:	6666      	str	r6, [r4, #100]	; 0x64
	return 1;
  401452:	2001      	movs	r0, #1
  401454:	e7b1      	b.n	4013ba <pio_configure_pin+0x56>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  401456:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  40145a:	f000 011f 	and.w	r1, r0, #31
  40145e:	2601      	movs	r6, #1
  401460:	ea05 0306 	and.w	r3, r5, r6
  401464:	9300      	str	r3, [sp, #0]
  401466:	f3c5 0380 	ubfx	r3, r5, #2, #1
  40146a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40146e:	bf14      	ite	ne
  401470:	2200      	movne	r2, #0
  401472:	2201      	moveq	r2, #1
  401474:	fa06 f101 	lsl.w	r1, r6, r1
  401478:	4620      	mov	r0, r4
  40147a:	4c05      	ldr	r4, [pc, #20]	; (401490 <pio_configure_pin+0x12c>)
  40147c:	47a0      	blx	r4
	return 1;
  40147e:	4630      	mov	r0, r6
		break;
  401480:	e79b      	b.n	4013ba <pio_configure_pin+0x56>
  401482:	bf00      	nop
  401484:	00200707 	.word	0x00200707
  401488:	00401237 	.word	0x00401237
  40148c:	004011a5 	.word	0x004011a5
  401490:	0040126d 	.word	0x0040126d

00401494 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  401494:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401498:	4604      	mov	r4, r0
  40149a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40149c:	4b0e      	ldr	r3, [pc, #56]	; (4014d8 <pio_handler_process+0x44>)
  40149e:	4798      	blx	r3
  4014a0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  4014a2:	4620      	mov	r0, r4
  4014a4:	4b0d      	ldr	r3, [pc, #52]	; (4014dc <pio_handler_process+0x48>)
  4014a6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  4014a8:	4005      	ands	r5, r0
  4014aa:	d013      	beq.n	4014d4 <pio_handler_process+0x40>
  4014ac:	4c0c      	ldr	r4, [pc, #48]	; (4014e0 <pio_handler_process+0x4c>)
  4014ae:	f104 0660 	add.w	r6, r4, #96	; 0x60
  4014b2:	e003      	b.n	4014bc <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4014b4:	42b4      	cmp	r4, r6
  4014b6:	d00d      	beq.n	4014d4 <pio_handler_process+0x40>
  4014b8:	3410      	adds	r4, #16
		while (status != 0) {
  4014ba:	b15d      	cbz	r5, 4014d4 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  4014bc:	6820      	ldr	r0, [r4, #0]
  4014be:	4540      	cmp	r0, r8
  4014c0:	d1f8      	bne.n	4014b4 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4014c2:	6861      	ldr	r1, [r4, #4]
  4014c4:	4229      	tst	r1, r5
  4014c6:	d0f5      	beq.n	4014b4 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4014c8:	68e3      	ldr	r3, [r4, #12]
  4014ca:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4014cc:	6863      	ldr	r3, [r4, #4]
  4014ce:	ea25 0503 	bic.w	r5, r5, r3
  4014d2:	e7ef      	b.n	4014b4 <pio_handler_process+0x20>
  4014d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4014d8:	00401325 	.word	0x00401325
  4014dc:	00401329 	.word	0x00401329
  4014e0:	20400d9c 	.word	0x20400d9c

004014e4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4014e4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4014e6:	210a      	movs	r1, #10
  4014e8:	4801      	ldr	r0, [pc, #4]	; (4014f0 <PIOA_Handler+0xc>)
  4014ea:	4b02      	ldr	r3, [pc, #8]	; (4014f4 <PIOA_Handler+0x10>)
  4014ec:	4798      	blx	r3
  4014ee:	bd08      	pop	{r3, pc}
  4014f0:	400e0e00 	.word	0x400e0e00
  4014f4:	00401495 	.word	0x00401495

004014f8 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4014f8:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  4014fa:	210b      	movs	r1, #11
  4014fc:	4801      	ldr	r0, [pc, #4]	; (401504 <PIOB_Handler+0xc>)
  4014fe:	4b02      	ldr	r3, [pc, #8]	; (401508 <PIOB_Handler+0x10>)
  401500:	4798      	blx	r3
  401502:	bd08      	pop	{r3, pc}
  401504:	400e1000 	.word	0x400e1000
  401508:	00401495 	.word	0x00401495

0040150c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  40150c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  40150e:	210c      	movs	r1, #12
  401510:	4801      	ldr	r0, [pc, #4]	; (401518 <PIOC_Handler+0xc>)
  401512:	4b02      	ldr	r3, [pc, #8]	; (40151c <PIOC_Handler+0x10>)
  401514:	4798      	blx	r3
  401516:	bd08      	pop	{r3, pc}
  401518:	400e1200 	.word	0x400e1200
  40151c:	00401495 	.word	0x00401495

00401520 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  401520:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  401522:	2110      	movs	r1, #16
  401524:	4801      	ldr	r0, [pc, #4]	; (40152c <PIOD_Handler+0xc>)
  401526:	4b02      	ldr	r3, [pc, #8]	; (401530 <PIOD_Handler+0x10>)
  401528:	4798      	blx	r3
  40152a:	bd08      	pop	{r3, pc}
  40152c:	400e1400 	.word	0x400e1400
  401530:	00401495 	.word	0x00401495

00401534 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  401534:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  401536:	2111      	movs	r1, #17
  401538:	4801      	ldr	r0, [pc, #4]	; (401540 <PIOE_Handler+0xc>)
  40153a:	4b02      	ldr	r3, [pc, #8]	; (401544 <PIOE_Handler+0x10>)
  40153c:	4798      	blx	r3
  40153e:	bd08      	pop	{r3, pc}
  401540:	400e1600 	.word	0x400e1600
  401544:	00401495 	.word	0x00401495

00401548 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  401548:	2803      	cmp	r0, #3
  40154a:	d011      	beq.n	401570 <pmc_mck_set_division+0x28>
  40154c:	2804      	cmp	r0, #4
  40154e:	d012      	beq.n	401576 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  401550:	2802      	cmp	r0, #2
  401552:	bf0c      	ite	eq
  401554:	f44f 7180 	moveq.w	r1, #256	; 0x100
  401558:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  40155a:	4a08      	ldr	r2, [pc, #32]	; (40157c <pmc_mck_set_division+0x34>)
  40155c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40155e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  401562:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  401564:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401566:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401568:	f013 0f08 	tst.w	r3, #8
  40156c:	d0fb      	beq.n	401566 <pmc_mck_set_division+0x1e>
}
  40156e:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  401570:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  401574:	e7f1      	b.n	40155a <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  401576:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  40157a:	e7ee      	b.n	40155a <pmc_mck_set_division+0x12>
  40157c:	400e0600 	.word	0x400e0600

00401580 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  401580:	4a17      	ldr	r2, [pc, #92]	; (4015e0 <pmc_switch_mck_to_pllack+0x60>)
  401582:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401584:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  401588:	4318      	orrs	r0, r3
  40158a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40158c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40158e:	f013 0f08 	tst.w	r3, #8
  401592:	d10a      	bne.n	4015aa <pmc_switch_mck_to_pllack+0x2a>
  401594:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401598:	4911      	ldr	r1, [pc, #68]	; (4015e0 <pmc_switch_mck_to_pllack+0x60>)
  40159a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40159c:	f012 0f08 	tst.w	r2, #8
  4015a0:	d103      	bne.n	4015aa <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4015a2:	3b01      	subs	r3, #1
  4015a4:	d1f9      	bne.n	40159a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  4015a6:	2001      	movs	r0, #1
  4015a8:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4015aa:	4a0d      	ldr	r2, [pc, #52]	; (4015e0 <pmc_switch_mck_to_pllack+0x60>)
  4015ac:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015ae:	f023 0303 	bic.w	r3, r3, #3
  4015b2:	f043 0302 	orr.w	r3, r3, #2
  4015b6:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4015b8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4015ba:	f013 0f08 	tst.w	r3, #8
  4015be:	d10a      	bne.n	4015d6 <pmc_switch_mck_to_pllack+0x56>
  4015c0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4015c4:	4906      	ldr	r1, [pc, #24]	; (4015e0 <pmc_switch_mck_to_pllack+0x60>)
  4015c6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4015c8:	f012 0f08 	tst.w	r2, #8
  4015cc:	d105      	bne.n	4015da <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4015ce:	3b01      	subs	r3, #1
  4015d0:	d1f9      	bne.n	4015c6 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4015d2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4015d4:	4770      	bx	lr
	return 0;
  4015d6:	2000      	movs	r0, #0
  4015d8:	4770      	bx	lr
  4015da:	2000      	movs	r0, #0
  4015dc:	4770      	bx	lr
  4015de:	bf00      	nop
  4015e0:	400e0600 	.word	0x400e0600

004015e4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4015e4:	b9a0      	cbnz	r0, 401610 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4015e6:	480e      	ldr	r0, [pc, #56]	; (401620 <pmc_switch_mainck_to_xtal+0x3c>)
  4015e8:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4015ea:	0209      	lsls	r1, r1, #8
  4015ec:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4015ee:	4a0d      	ldr	r2, [pc, #52]	; (401624 <pmc_switch_mainck_to_xtal+0x40>)
  4015f0:	401a      	ands	r2, r3
  4015f2:	4b0d      	ldr	r3, [pc, #52]	; (401628 <pmc_switch_mainck_to_xtal+0x44>)
  4015f4:	4313      	orrs	r3, r2
  4015f6:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4015f8:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4015fa:	4602      	mov	r2, r0
  4015fc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4015fe:	f013 0f01 	tst.w	r3, #1
  401602:	d0fb      	beq.n	4015fc <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401604:	4a06      	ldr	r2, [pc, #24]	; (401620 <pmc_switch_mainck_to_xtal+0x3c>)
  401606:	6a11      	ldr	r1, [r2, #32]
  401608:	4b08      	ldr	r3, [pc, #32]	; (40162c <pmc_switch_mainck_to_xtal+0x48>)
  40160a:	430b      	orrs	r3, r1
  40160c:	6213      	str	r3, [r2, #32]
  40160e:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401610:	4903      	ldr	r1, [pc, #12]	; (401620 <pmc_switch_mainck_to_xtal+0x3c>)
  401612:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401614:	4a06      	ldr	r2, [pc, #24]	; (401630 <pmc_switch_mainck_to_xtal+0x4c>)
  401616:	401a      	ands	r2, r3
  401618:	4b06      	ldr	r3, [pc, #24]	; (401634 <pmc_switch_mainck_to_xtal+0x50>)
  40161a:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40161c:	620b      	str	r3, [r1, #32]
  40161e:	4770      	bx	lr
  401620:	400e0600 	.word	0x400e0600
  401624:	ffc8fffc 	.word	0xffc8fffc
  401628:	00370001 	.word	0x00370001
  40162c:	01370000 	.word	0x01370000
  401630:	fec8fffc 	.word	0xfec8fffc
  401634:	01370002 	.word	0x01370002

00401638 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401638:	4b02      	ldr	r3, [pc, #8]	; (401644 <pmc_osc_is_ready_mainck+0xc>)
  40163a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40163c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401640:	4770      	bx	lr
  401642:	bf00      	nop
  401644:	400e0600 	.word	0x400e0600

00401648 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401648:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40164c:	4b01      	ldr	r3, [pc, #4]	; (401654 <pmc_disable_pllack+0xc>)
  40164e:	629a      	str	r2, [r3, #40]	; 0x28
  401650:	4770      	bx	lr
  401652:	bf00      	nop
  401654:	400e0600 	.word	0x400e0600

00401658 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401658:	4b02      	ldr	r3, [pc, #8]	; (401664 <pmc_is_locked_pllack+0xc>)
  40165a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40165c:	f000 0002 	and.w	r0, r0, #2
  401660:	4770      	bx	lr
  401662:	bf00      	nop
  401664:	400e0600 	.word	0x400e0600

00401668 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
  401668:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  40166c:	4b05      	ldr	r3, [pc, #20]	; (401684 <pmc_enable_periph_clk+0x1c>)
  40166e:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
  401672:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  401676:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
  40167a:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  40167e:	2000      	movs	r0, #0
  401680:	4770      	bx	lr
  401682:	bf00      	nop
  401684:	400e0600 	.word	0x400e0600

00401688 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  401688:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  40168a:	4b07      	ldr	r3, [pc, #28]	; (4016a8 <spi_enable_clock+0x20>)
  40168c:	4298      	cmp	r0, r3
  40168e:	d003      	beq.n	401698 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  401690:	4b06      	ldr	r3, [pc, #24]	; (4016ac <spi_enable_clock+0x24>)
  401692:	4298      	cmp	r0, r3
  401694:	d004      	beq.n	4016a0 <spi_enable_clock+0x18>
  401696:	bd08      	pop	{r3, pc}
  401698:	2015      	movs	r0, #21
  40169a:	4b05      	ldr	r3, [pc, #20]	; (4016b0 <spi_enable_clock+0x28>)
  40169c:	4798      	blx	r3
  40169e:	bd08      	pop	{r3, pc}
  4016a0:	202a      	movs	r0, #42	; 0x2a
  4016a2:	4b03      	ldr	r3, [pc, #12]	; (4016b0 <spi_enable_clock+0x28>)
  4016a4:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4016a6:	e7f6      	b.n	401696 <spi_enable_clock+0xe>
  4016a8:	40008000 	.word	0x40008000
  4016ac:	40058000 	.word	0x40058000
  4016b0:	00401669 	.word	0x00401669

004016b4 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4016b4:	6843      	ldr	r3, [r0, #4]
  4016b6:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4016ba:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4016bc:	6843      	ldr	r3, [r0, #4]
  4016be:	0409      	lsls	r1, r1, #16
  4016c0:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4016c4:	4319      	orrs	r1, r3
  4016c6:	6041      	str	r1, [r0, #4]
  4016c8:	4770      	bx	lr

004016ca <spi_set_delay_between_chip_select>:
 * \param p_spi Pointer to an SPI instance.
 * \param ul_delay Delay between chip selects (in number of MCK clocks).
 */
void spi_set_delay_between_chip_select(Spi *p_spi, uint32_t ul_delay)
{
	p_spi->SPI_MR &= (~SPI_MR_DLYBCS_Msk);
  4016ca:	6843      	ldr	r3, [r0, #4]
  4016cc:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  4016d0:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_DLYBCS(ul_delay);
  4016d2:	6843      	ldr	r3, [r0, #4]
  4016d4:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
  4016d8:	6041      	str	r1, [r0, #4]
  4016da:	4770      	bx	lr

004016dc <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4016dc:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4016de:	f643 2499 	movw	r4, #15001	; 0x3a99
  4016e2:	6905      	ldr	r5, [r0, #16]
  4016e4:	f015 0f02 	tst.w	r5, #2
  4016e8:	d103      	bne.n	4016f2 <spi_write+0x16>
		if (!timeout--) {
  4016ea:	3c01      	subs	r4, #1
  4016ec:	d1f9      	bne.n	4016e2 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4016ee:	2001      	movs	r0, #1
  4016f0:	e00c      	b.n	40170c <spi_write+0x30>
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4016f2:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4016f4:	f014 0f02 	tst.w	r4, #2
  4016f8:	d006      	beq.n	401708 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4016fa:	0412      	lsls	r2, r2, #16
  4016fc:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  401700:	4311      	orrs	r1, r2
		if (uc_last) {
  401702:	b10b      	cbz	r3, 401708 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  401704:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  401708:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40170a:	2000      	movs	r0, #0
}
  40170c:	bc30      	pop	{r4, r5}
  40170e:	4770      	bx	lr

00401710 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  401710:	b932      	cbnz	r2, 401720 <spi_set_clock_polarity+0x10>
  401712:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  401716:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401718:	f023 0301 	bic.w	r3, r3, #1
  40171c:	6303      	str	r3, [r0, #48]	; 0x30
  40171e:	4770      	bx	lr
  401720:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  401724:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401726:	f043 0301 	orr.w	r3, r3, #1
  40172a:	6303      	str	r3, [r0, #48]	; 0x30
  40172c:	4770      	bx	lr

0040172e <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  40172e:	b932      	cbnz	r2, 40173e <spi_set_clock_phase+0x10>
  401730:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  401734:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401736:	f023 0302 	bic.w	r3, r3, #2
  40173a:	6303      	str	r3, [r0, #48]	; 0x30
  40173c:	4770      	bx	lr
  40173e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  401742:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401744:	f043 0302 	orr.w	r3, r3, #2
  401748:	6303      	str	r3, [r0, #48]	; 0x30
  40174a:	4770      	bx	lr

0040174c <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40174c:	2a04      	cmp	r2, #4
  40174e:	d003      	beq.n	401758 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  401750:	b16a      	cbz	r2, 40176e <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  401752:	2a08      	cmp	r2, #8
  401754:	d016      	beq.n	401784 <spi_configure_cs_behavior+0x38>
  401756:	4770      	bx	lr
  401758:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40175c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40175e:	f023 0308 	bic.w	r3, r3, #8
  401762:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  401764:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401766:	f043 0304 	orr.w	r3, r3, #4
  40176a:	6303      	str	r3, [r0, #48]	; 0x30
  40176c:	4770      	bx	lr
  40176e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  401772:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401774:	f023 0308 	bic.w	r3, r3, #8
  401778:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  40177a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40177c:	f023 0304 	bic.w	r3, r3, #4
  401780:	6303      	str	r3, [r0, #48]	; 0x30
  401782:	4770      	bx	lr
  401784:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  401788:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40178a:	f043 0308 	orr.w	r3, r3, #8
  40178e:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  401790:	e7e1      	b.n	401756 <spi_configure_cs_behavior+0xa>

00401792 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  401792:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  401796:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401798:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40179c:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  40179e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4017a0:	431a      	orrs	r2, r3
  4017a2:	630a      	str	r2, [r1, #48]	; 0x30
  4017a4:	4770      	bx	lr

004017a6 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4017a6:	1e43      	subs	r3, r0, #1
  4017a8:	4419      	add	r1, r3
  4017aa:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4017ae:	1e43      	subs	r3, r0, #1
  4017b0:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4017b2:	bf94      	ite	ls
  4017b4:	b200      	sxthls	r0, r0
		return -1;
  4017b6:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4017ba:	4770      	bx	lr

004017bc <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider){
  4017bc:	b17a      	cbz	r2, 4017de <spi_set_baudrate_div+0x22>
{
  4017be:	b410      	push	{r4}
  4017c0:	4614      	mov	r4, r2
  4017c2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;
	}
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4017c6:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4017c8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4017cc:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4017ce:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4017d0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4017d4:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4017d6:	2000      	movs	r0, #0
}
  4017d8:	f85d 4b04 	ldr.w	r4, [sp], #4
  4017dc:	4770      	bx	lr
        return -1;
  4017de:	f04f 30ff 	mov.w	r0, #4294967295
  4017e2:	4770      	bx	lr

004017e4 <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  4017e4:	b410      	push	{r4}
  4017e6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  4017ea:	6b08      	ldr	r0, [r1, #48]	; 0x30
  4017ec:	b280      	uxth	r0, r0
  4017ee:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  4017f0:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  4017f2:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  4017f6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4017fa:	630b      	str	r3, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
}
  4017fc:	f85d 4b04 	ldr.w	r4, [sp], #4
  401800:	4770      	bx	lr
	...

00401804 <twihs_set_speed>:
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	/* High-Speed can be only used in slave mode, 400k is the max speed allowed for master */
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  401804:	4b28      	ldr	r3, [pc, #160]	; (4018a8 <twihs_set_speed+0xa4>)
  401806:	4299      	cmp	r1, r3
  401808:	d84b      	bhi.n	4018a2 <twihs_set_speed+0x9e>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  40180a:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  40180e:	4299      	cmp	r1, r3
  401810:	d92d      	bls.n	40186e <twihs_set_speed+0x6a>
{
  401812:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401814:	4c25      	ldr	r4, [pc, #148]	; (4018ac <twihs_set_speed+0xa8>)
  401816:	fba4 3402 	umull	r3, r4, r4, r2
  40181a:	0ba4      	lsrs	r4, r4, #14
  40181c:	3c03      	subs	r4, #3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40181e:	4b24      	ldr	r3, [pc, #144]	; (4018b0 <twihs_set_speed+0xac>)
  401820:	440b      	add	r3, r1
  401822:	009b      	lsls	r3, r3, #2
  401824:	fbb2 f2f3 	udiv	r2, r2, r3
  401828:	3a03      	subs	r2, #3
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40182a:	2cff      	cmp	r4, #255	; 0xff
  40182c:	d91d      	bls.n	40186a <twihs_set_speed+0x66>
  40182e:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  401830:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWIHS_CLK_DIVIDER;
  401832:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401834:	2cff      	cmp	r4, #255	; 0xff
  401836:	d901      	bls.n	40183c <twihs_set_speed+0x38>
  401838:	2906      	cmp	r1, #6
  40183a:	d9f9      	bls.n	401830 <twihs_set_speed+0x2c>
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40183c:	2aff      	cmp	r2, #255	; 0xff
  40183e:	d907      	bls.n	401850 <twihs_set_speed+0x4c>
  401840:	2906      	cmp	r1, #6
  401842:	d805      	bhi.n	401850 <twihs_set_speed+0x4c>
			/* Increase clock divider */
			ckdiv++;
  401844:	3101      	adds	r1, #1
			/* Divide cldiv value */
			chdiv /= TWIHS_CLK_DIVIDER;
  401846:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401848:	2aff      	cmp	r2, #255	; 0xff
  40184a:	d901      	bls.n	401850 <twihs_set_speed+0x4c>
  40184c:	2906      	cmp	r1, #6
  40184e:	d9f9      	bls.n	401844 <twihs_set_speed+0x40>
		}

		/* set clock waveform generator register */
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  401850:	0213      	lsls	r3, r2, #8
  401852:	b29b      	uxth	r3, r3
				TWIHS_CWGR_CKDIV(ckdiv);
  401854:	0409      	lsls	r1, r1, #16
  401856:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  40185a:	430b      	orrs	r3, r1
  40185c:	b2e4      	uxtb	r4, r4
  40185e:	4323      	orrs	r3, r4
		p_twihs->TWIHS_CWGR =
  401860:	6103      	str	r3, [r0, #16]
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
				TWIHS_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  401862:	2000      	movs	r0, #0
}
  401864:	f85d 4b04 	ldr.w	r4, [sp], #4
  401868:	4770      	bx	lr
	uint32_t ckdiv = 0;
  40186a:	2100      	movs	r1, #0
  40186c:	e7e6      	b.n	40183c <twihs_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40186e:	0049      	lsls	r1, r1, #1
  401870:	fbb2 f2f1 	udiv	r2, r2, r1
  401874:	3a03      	subs	r2, #3
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401876:	2aff      	cmp	r2, #255	; 0xff
  401878:	d911      	bls.n	40189e <twihs_set_speed+0x9a>
  40187a:	2300      	movs	r3, #0
			ckdiv++;
  40187c:	3301      	adds	r3, #1
			c_lh_div /= TWIHS_CLK_DIVIDER;
  40187e:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401880:	2aff      	cmp	r2, #255	; 0xff
  401882:	d901      	bls.n	401888 <twihs_set_speed+0x84>
  401884:	2b06      	cmp	r3, #6
  401886:	d9f9      	bls.n	40187c <twihs_set_speed+0x78>
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  401888:	0211      	lsls	r1, r2, #8
  40188a:	b289      	uxth	r1, r1
				TWIHS_CWGR_CKDIV(ckdiv);
  40188c:	041b      	lsls	r3, r3, #16
  40188e:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  401892:	430b      	orrs	r3, r1
  401894:	b2d2      	uxtb	r2, r2
  401896:	431a      	orrs	r2, r3
		p_twihs->TWIHS_CWGR =
  401898:	6102      	str	r2, [r0, #16]
	return PASS;
  40189a:	2000      	movs	r0, #0
  40189c:	4770      	bx	lr
	uint32_t ckdiv = 0;
  40189e:	2300      	movs	r3, #0
  4018a0:	e7f2      	b.n	401888 <twihs_set_speed+0x84>
		return FAIL;
  4018a2:	2001      	movs	r0, #1
  4018a4:	4770      	bx	lr
  4018a6:	bf00      	nop
  4018a8:	00061a80 	.word	0x00061a80
  4018ac:	057619f1 	.word	0x057619f1
  4018b0:	3ffd1200 	.word	0x3ffd1200

004018b4 <twihs_master_init>:
{
  4018b4:	b508      	push	{r3, lr}
	p_twihs->TWIHS_IDR = ~0UL;
  4018b6:	f04f 32ff 	mov.w	r2, #4294967295
  4018ba:	6282      	str	r2, [r0, #40]	; 0x28
	p_twihs->TWIHS_SR;
  4018bc:	6a02      	ldr	r2, [r0, #32]
 * \param p_twihs Pointer to a TWIHS instance.
 */
void twihs_reset(Twihs *p_twihs)
{
	/* Set SWRST bit to reset TWIHS peripheral */
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  4018be:	2280      	movs	r2, #128	; 0x80
  4018c0:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_RHR;
  4018c2:	6b02      	ldr	r2, [r0, #48]	; 0x30
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  4018c4:	2208      	movs	r2, #8
  4018c6:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  4018c8:	2220      	movs	r2, #32
  4018ca:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  4018cc:	2204      	movs	r2, #4
  4018ce:	6002      	str	r2, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  4018d0:	680a      	ldr	r2, [r1, #0]
  4018d2:	6849      	ldr	r1, [r1, #4]
  4018d4:	4b03      	ldr	r3, [pc, #12]	; (4018e4 <twihs_master_init+0x30>)
  4018d6:	4798      	blx	r3
}
  4018d8:	2801      	cmp	r0, #1
  4018da:	bf14      	ite	ne
  4018dc:	2000      	movne	r0, #0
  4018de:	2001      	moveq	r0, #1
  4018e0:	bd08      	pop	{r3, pc}
  4018e2:	bf00      	nop
  4018e4:	00401805 	.word	0x00401805

004018e8 <twihs_master_read>:
	uint32_t status, cnt = p_packet->length;
  4018e8:	68ca      	ldr	r2, [r1, #12]
	if (cnt == 0) {
  4018ea:	2a00      	cmp	r2, #0
  4018ec:	d04c      	beq.n	401988 <twihs_master_read+0xa0>
{
  4018ee:	b470      	push	{r4, r5, r6}
	uint8_t *buffer = p_packet->buffer;
  4018f0:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  4018f2:	2600      	movs	r6, #0
  4018f4:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4018f6:	684b      	ldr	r3, [r1, #4]
  4018f8:	021b      	lsls	r3, r3, #8
  4018fa:	f403 7340 	and.w	r3, r3, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  4018fe:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
  401902:	7c0d      	ldrb	r5, [r1, #16]
  401904:	042d      	lsls	r5, r5, #16
  401906:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  40190a:	432b      	orrs	r3, r5
  40190c:	6043      	str	r3, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  40190e:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401910:	684d      	ldr	r5, [r1, #4]
	if (len == 0)
  401912:	b15d      	cbz	r5, 40192c <twihs_master_read+0x44>
	val = addr[0];
  401914:	780b      	ldrb	r3, [r1, #0]
	if (len > 1) {
  401916:	2d01      	cmp	r5, #1
  401918:	dd02      	ble.n	401920 <twihs_master_read+0x38>
		val |= addr[1];
  40191a:	784e      	ldrb	r6, [r1, #1]
  40191c:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
	if (len > 2) {
  401920:	2d02      	cmp	r5, #2
  401922:	dd04      	ble.n	40192e <twihs_master_read+0x46>
		val |= addr[2];
  401924:	7889      	ldrb	r1, [r1, #2]
  401926:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
  40192a:	e000      	b.n	40192e <twihs_master_read+0x46>
		return 0;
  40192c:	2300      	movs	r3, #0
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  40192e:	60c3      	str	r3, [r0, #12]
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  401930:	2301      	movs	r3, #1
  401932:	6003      	str	r3, [r0, #0]
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  401934:	2502      	movs	r5, #2
  401936:	e012      	b.n	40195e <twihs_master_read+0x76>
  401938:	6005      	str	r5, [r0, #0]
		if (!(status & TWIHS_SR_RXRDY)) {
  40193a:	f013 0f02 	tst.w	r3, #2
  40193e:	d01b      	beq.n	401978 <twihs_master_read+0x90>
		*buffer++ = p_twihs->TWIHS_RHR;
  401940:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401942:	7023      	strb	r3, [r4, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  401944:	6a03      	ldr	r3, [r0, #32]
  401946:	f013 0f01 	tst.w	r3, #1
  40194a:	d0fb      	beq.n	401944 <twihs_master_read+0x5c>
	p_twihs->TWIHS_SR;
  40194c:	6a03      	ldr	r3, [r0, #32]
	return TWIHS_SUCCESS;
  40194e:	2000      	movs	r0, #0
}
  401950:	bc70      	pop	{r4, r5, r6}
  401952:	4770      	bx	lr
		*buffer++ = p_twihs->TWIHS_RHR;
  401954:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401956:	f804 3b01 	strb.w	r3, [r4], #1
	while (cnt > 0) {
  40195a:	3a01      	subs	r2, #1
  40195c:	d0f2      	beq.n	401944 <twihs_master_read+0x5c>
		status = p_twihs->TWIHS_SR;
  40195e:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401960:	f413 7f80 	tst.w	r3, #256	; 0x100
  401964:	d114      	bne.n	401990 <twihs_master_read+0xa8>
  401966:	f247 5130 	movw	r1, #30000	; 0x7530
		if (cnt == 1) {
  40196a:	2a01      	cmp	r2, #1
  40196c:	d0e4      	beq.n	401938 <twihs_master_read+0x50>
		if (!(status & TWIHS_SR_RXRDY)) {
  40196e:	f013 0f02 	tst.w	r3, #2
  401972:	d1ef      	bne.n	401954 <twihs_master_read+0x6c>
	while (cnt > 0) {
  401974:	2a00      	cmp	r2, #0
  401976:	d0e5      	beq.n	401944 <twihs_master_read+0x5c>
		status = p_twihs->TWIHS_SR;
  401978:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  40197a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40197e:	d105      	bne.n	40198c <twihs_master_read+0xa4>
		if (!timeout--) {
  401980:	3901      	subs	r1, #1
  401982:	d1f2      	bne.n	40196a <twihs_master_read+0x82>
			return TWIHS_ERROR_TIMEOUT;
  401984:	2009      	movs	r0, #9
  401986:	e7e3      	b.n	401950 <twihs_master_read+0x68>
		return TWIHS_INVALID_ARGUMENT;
  401988:	2001      	movs	r0, #1
  40198a:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  40198c:	2005      	movs	r0, #5
  40198e:	e7df      	b.n	401950 <twihs_master_read+0x68>
  401990:	2005      	movs	r0, #5
  401992:	e7dd      	b.n	401950 <twihs_master_read+0x68>

00401994 <twihs_master_write>:
	uint32_t status, cnt = p_packet->length;
  401994:	68cb      	ldr	r3, [r1, #12]
	if (cnt == 0) {
  401996:	2b00      	cmp	r3, #0
  401998:	d043      	beq.n	401a22 <twihs_master_write+0x8e>
{
  40199a:	b470      	push	{r4, r5, r6}
	uint8_t *buffer = p_packet->buffer;
  40199c:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  40199e:	2600      	movs	r6, #0
  4019a0:	6046      	str	r6, [r0, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  4019a2:	7c0a      	ldrb	r2, [r1, #16]
  4019a4:	0412      	lsls	r2, r2, #16
  4019a6:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4019aa:	684d      	ldr	r5, [r1, #4]
  4019ac:	022d      	lsls	r5, r5, #8
  4019ae:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  4019b2:	432a      	orrs	r2, r5
  4019b4:	6042      	str	r2, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  4019b6:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  4019b8:	684d      	ldr	r5, [r1, #4]
	if (len == 0)
  4019ba:	b15d      	cbz	r5, 4019d4 <twihs_master_write+0x40>
	val = addr[0];
  4019bc:	780a      	ldrb	r2, [r1, #0]
	if (len > 1) {
  4019be:	2d01      	cmp	r5, #1
  4019c0:	dd02      	ble.n	4019c8 <twihs_master_write+0x34>
		val |= addr[1];
  4019c2:	784e      	ldrb	r6, [r1, #1]
  4019c4:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
	if (len > 2) {
  4019c8:	2d02      	cmp	r5, #2
  4019ca:	dd04      	ble.n	4019d6 <twihs_master_write+0x42>
		val |= addr[2];
  4019cc:	7889      	ldrb	r1, [r1, #2]
  4019ce:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
  4019d2:	e000      	b.n	4019d6 <twihs_master_write+0x42>
		return 0;
  4019d4:	2200      	movs	r2, #0
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  4019d6:	60c2      	str	r2, [r0, #12]
  4019d8:	e004      	b.n	4019e4 <twihs_master_write+0x50>
		p_twihs->TWIHS_THR = *buffer++;
  4019da:	f814 2b01 	ldrb.w	r2, [r4], #1
  4019de:	6342      	str	r2, [r0, #52]	; 0x34
	while (cnt > 0) {
  4019e0:	3b01      	subs	r3, #1
  4019e2:	d00f      	beq.n	401a04 <twihs_master_write+0x70>
		status = p_twihs->TWIHS_SR;
  4019e4:	6a02      	ldr	r2, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  4019e6:	f412 7f80 	tst.w	r2, #256	; 0x100
  4019ea:	d11e      	bne.n	401a2a <twihs_master_write+0x96>
		if (!(status & TWIHS_SR_TXRDY)) {
  4019ec:	f012 0f04 	tst.w	r2, #4
  4019f0:	d1f3      	bne.n	4019da <twihs_master_write+0x46>
		status = p_twihs->TWIHS_SR;
  4019f2:	6a02      	ldr	r2, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  4019f4:	f412 7f80 	tst.w	r2, #256	; 0x100
  4019f8:	d115      	bne.n	401a26 <twihs_master_write+0x92>
		if (!(status & TWIHS_SR_TXRDY)) {
  4019fa:	f012 0f04 	tst.w	r2, #4
  4019fe:	d1ec      	bne.n	4019da <twihs_master_write+0x46>
	while (cnt > 0) {
  401a00:	2b00      	cmp	r3, #0
  401a02:	d1f6      	bne.n	4019f2 <twihs_master_write+0x5e>
		status = p_twihs->TWIHS_SR;
  401a04:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401a06:	f413 7f80 	tst.w	r3, #256	; 0x100
  401a0a:	d111      	bne.n	401a30 <twihs_master_write+0x9c>
		if (status & TWIHS_SR_TXRDY) {
  401a0c:	f013 0f04 	tst.w	r3, #4
  401a10:	d0f8      	beq.n	401a04 <twihs_master_write+0x70>
	p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  401a12:	2302      	movs	r3, #2
  401a14:	6003      	str	r3, [r0, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  401a16:	6a03      	ldr	r3, [r0, #32]
  401a18:	f013 0f01 	tst.w	r3, #1
  401a1c:	d0fb      	beq.n	401a16 <twihs_master_write+0x82>
	return TWIHS_SUCCESS;
  401a1e:	2000      	movs	r0, #0
  401a20:	e004      	b.n	401a2c <twihs_master_write+0x98>
		return TWIHS_INVALID_ARGUMENT;
  401a22:	2001      	movs	r0, #1
  401a24:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  401a26:	2005      	movs	r0, #5
  401a28:	e000      	b.n	401a2c <twihs_master_write+0x98>
  401a2a:	2005      	movs	r0, #5
}
  401a2c:	bc70      	pop	{r4, r5, r6}
  401a2e:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  401a30:	2005      	movs	r0, #5
  401a32:	e7fb      	b.n	401a2c <twihs_master_write+0x98>

00401a34 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  401a34:	6943      	ldr	r3, [r0, #20]
  401a36:	f013 0f02 	tst.w	r3, #2
  401a3a:	d002      	beq.n	401a42 <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  401a3c:	61c1      	str	r1, [r0, #28]
	return 0;
  401a3e:	2000      	movs	r0, #0
  401a40:	4770      	bx	lr
		return 1;
  401a42:	2001      	movs	r0, #1
}
  401a44:	4770      	bx	lr

00401a46 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  401a46:	6943      	ldr	r3, [r0, #20]
  401a48:	f013 0f01 	tst.w	r3, #1
  401a4c:	d003      	beq.n	401a56 <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  401a4e:	6983      	ldr	r3, [r0, #24]
  401a50:	700b      	strb	r3, [r1, #0]
	return 0;
  401a52:	2000      	movs	r0, #0
  401a54:	4770      	bx	lr
		return 1;
  401a56:	2001      	movs	r0, #1
}
  401a58:	4770      	bx	lr

00401a5a <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  401a5a:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  401a5c:	010b      	lsls	r3, r1, #4
  401a5e:	4293      	cmp	r3, r2
  401a60:	d914      	bls.n	401a8c <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401a62:	00c9      	lsls	r1, r1, #3
  401a64:	084b      	lsrs	r3, r1, #1
  401a66:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  401a6a:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  401a6e:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  401a70:	1e5c      	subs	r4, r3, #1
  401a72:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  401a76:	428c      	cmp	r4, r1
  401a78:	d901      	bls.n	401a7e <usart_set_async_baudrate+0x24>
		return 1;
  401a7a:	2001      	movs	r0, #1
  401a7c:	e017      	b.n	401aae <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  401a7e:	6841      	ldr	r1, [r0, #4]
  401a80:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  401a84:	6041      	str	r1, [r0, #4]
  401a86:	e00c      	b.n	401aa2 <usart_set_async_baudrate+0x48>
		return 1;
  401a88:	2001      	movs	r0, #1
  401a8a:	e010      	b.n	401aae <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401a8c:	0859      	lsrs	r1, r3, #1
  401a8e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  401a92:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  401a96:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  401a98:	1e5c      	subs	r4, r3, #1
  401a9a:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  401a9e:	428c      	cmp	r4, r1
  401aa0:	d8f2      	bhi.n	401a88 <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  401aa2:	0412      	lsls	r2, r2, #16
  401aa4:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  401aa8:	431a      	orrs	r2, r3
  401aaa:	6202      	str	r2, [r0, #32]

	return 0;
  401aac:	2000      	movs	r0, #0
}
  401aae:	f85d 4b04 	ldr.w	r4, [sp], #4
  401ab2:	4770      	bx	lr

00401ab4 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  401ab4:	4b08      	ldr	r3, [pc, #32]	; (401ad8 <usart_reset+0x24>)
  401ab6:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  401aba:	2300      	movs	r3, #0
  401abc:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  401abe:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  401ac0:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  401ac2:	2388      	movs	r3, #136	; 0x88
  401ac4:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  401ac6:	2324      	movs	r3, #36	; 0x24
  401ac8:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  401aca:	f44f 7380 	mov.w	r3, #256	; 0x100
  401ace:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  401ad0:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  401ad4:	6003      	str	r3, [r0, #0]
  401ad6:	4770      	bx	lr
  401ad8:	55534100 	.word	0x55534100

00401adc <usart_init_rs232>:
{
  401adc:	b570      	push	{r4, r5, r6, lr}
  401ade:	4605      	mov	r5, r0
  401ae0:	460c      	mov	r4, r1
  401ae2:	4616      	mov	r6, r2
	usart_reset(p_usart);
  401ae4:	4b0f      	ldr	r3, [pc, #60]	; (401b24 <usart_init_rs232+0x48>)
  401ae6:	4798      	blx	r3
	ul_reg_val = 0;
  401ae8:	2200      	movs	r2, #0
  401aea:	4b0f      	ldr	r3, [pc, #60]	; (401b28 <usart_init_rs232+0x4c>)
  401aec:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  401aee:	b1a4      	cbz	r4, 401b1a <usart_init_rs232+0x3e>
  401af0:	4632      	mov	r2, r6
  401af2:	6821      	ldr	r1, [r4, #0]
  401af4:	4628      	mov	r0, r5
  401af6:	4b0d      	ldr	r3, [pc, #52]	; (401b2c <usart_init_rs232+0x50>)
  401af8:	4798      	blx	r3
  401afa:	4602      	mov	r2, r0
  401afc:	b978      	cbnz	r0, 401b1e <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  401afe:	6863      	ldr	r3, [r4, #4]
  401b00:	68a1      	ldr	r1, [r4, #8]
  401b02:	430b      	orrs	r3, r1
  401b04:	6921      	ldr	r1, [r4, #16]
  401b06:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  401b08:	68e1      	ldr	r1, [r4, #12]
  401b0a:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  401b0c:	4906      	ldr	r1, [pc, #24]	; (401b28 <usart_init_rs232+0x4c>)
  401b0e:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  401b10:	6869      	ldr	r1, [r5, #4]
  401b12:	430b      	orrs	r3, r1
  401b14:	606b      	str	r3, [r5, #4]
}
  401b16:	4610      	mov	r0, r2
  401b18:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  401b1a:	2201      	movs	r2, #1
  401b1c:	e7fb      	b.n	401b16 <usart_init_rs232+0x3a>
  401b1e:	2201      	movs	r2, #1
  401b20:	e7f9      	b.n	401b16 <usart_init_rs232+0x3a>
  401b22:	bf00      	nop
  401b24:	00401ab5 	.word	0x00401ab5
  401b28:	20400e0c 	.word	0x20400e0c
  401b2c:	00401a5b 	.word	0x00401a5b

00401b30 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  401b30:	2340      	movs	r3, #64	; 0x40
  401b32:	6003      	str	r3, [r0, #0]
  401b34:	4770      	bx	lr

00401b36 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  401b36:	2310      	movs	r3, #16
  401b38:	6003      	str	r3, [r0, #0]
  401b3a:	4770      	bx	lr

00401b3c <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  401b3c:	6943      	ldr	r3, [r0, #20]
  401b3e:	f013 0f02 	tst.w	r3, #2
  401b42:	d004      	beq.n	401b4e <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  401b44:	f3c1 0108 	ubfx	r1, r1, #0, #9
  401b48:	61c1      	str	r1, [r0, #28]
	return 0;
  401b4a:	2000      	movs	r0, #0
  401b4c:	4770      	bx	lr
		return 1;
  401b4e:	2001      	movs	r0, #1
}
  401b50:	4770      	bx	lr

00401b52 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  401b52:	6943      	ldr	r3, [r0, #20]
  401b54:	f013 0f01 	tst.w	r3, #1
  401b58:	d005      	beq.n	401b66 <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  401b5a:	6983      	ldr	r3, [r0, #24]
  401b5c:	f3c3 0308 	ubfx	r3, r3, #0, #9
  401b60:	600b      	str	r3, [r1, #0]
	return 0;
  401b62:	2000      	movs	r0, #0
  401b64:	4770      	bx	lr
		return 1;
  401b66:	2001      	movs	r0, #1
}
  401b68:	4770      	bx	lr

00401b6a <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401b6a:	e7fe      	b.n	401b6a <Dummy_Handler>

00401b6c <Reset_Handler>:
{
  401b6c:	b500      	push	{lr}
  401b6e:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401b70:	4b25      	ldr	r3, [pc, #148]	; (401c08 <Reset_Handler+0x9c>)
  401b72:	4a26      	ldr	r2, [pc, #152]	; (401c0c <Reset_Handler+0xa0>)
  401b74:	429a      	cmp	r2, r3
  401b76:	d010      	beq.n	401b9a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401b78:	4b25      	ldr	r3, [pc, #148]	; (401c10 <Reset_Handler+0xa4>)
  401b7a:	4a23      	ldr	r2, [pc, #140]	; (401c08 <Reset_Handler+0x9c>)
  401b7c:	429a      	cmp	r2, r3
  401b7e:	d20c      	bcs.n	401b9a <Reset_Handler+0x2e>
  401b80:	3b01      	subs	r3, #1
  401b82:	1a9b      	subs	r3, r3, r2
  401b84:	f023 0303 	bic.w	r3, r3, #3
  401b88:	3304      	adds	r3, #4
  401b8a:	4413      	add	r3, r2
  401b8c:	491f      	ldr	r1, [pc, #124]	; (401c0c <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  401b8e:	f851 0b04 	ldr.w	r0, [r1], #4
  401b92:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401b96:	429a      	cmp	r2, r3
  401b98:	d1f9      	bne.n	401b8e <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  401b9a:	4b1e      	ldr	r3, [pc, #120]	; (401c14 <Reset_Handler+0xa8>)
  401b9c:	4a1e      	ldr	r2, [pc, #120]	; (401c18 <Reset_Handler+0xac>)
  401b9e:	429a      	cmp	r2, r3
  401ba0:	d20a      	bcs.n	401bb8 <Reset_Handler+0x4c>
  401ba2:	3b01      	subs	r3, #1
  401ba4:	1a9b      	subs	r3, r3, r2
  401ba6:	f023 0303 	bic.w	r3, r3, #3
  401baa:	3304      	adds	r3, #4
  401bac:	4413      	add	r3, r2
                *pDest++ = 0;
  401bae:	2100      	movs	r1, #0
  401bb0:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401bb4:	4293      	cmp	r3, r2
  401bb6:	d1fb      	bne.n	401bb0 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401bb8:	4a18      	ldr	r2, [pc, #96]	; (401c1c <Reset_Handler+0xb0>)
  401bba:	4b19      	ldr	r3, [pc, #100]	; (401c20 <Reset_Handler+0xb4>)
  401bbc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401bc0:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401bc2:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401bc6:	fab3 f383 	clz	r3, r3
  401bca:	095b      	lsrs	r3, r3, #5
  401bcc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401bce:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401bd0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401bd4:	2200      	movs	r2, #0
  401bd6:	4b13      	ldr	r3, [pc, #76]	; (401c24 <Reset_Handler+0xb8>)
  401bd8:	701a      	strb	r2, [r3, #0]
	return flags;
  401bda:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401bdc:	4a12      	ldr	r2, [pc, #72]	; (401c28 <Reset_Handler+0xbc>)
  401bde:	6813      	ldr	r3, [r2, #0]
  401be0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401be4:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401be6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401bea:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401bee:	b129      	cbz	r1, 401bfc <Reset_Handler+0x90>
		cpu_irq_enable();
  401bf0:	2201      	movs	r2, #1
  401bf2:	4b0c      	ldr	r3, [pc, #48]	; (401c24 <Reset_Handler+0xb8>)
  401bf4:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401bf6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401bfa:	b662      	cpsie	i
        __libc_init_array();
  401bfc:	4b0b      	ldr	r3, [pc, #44]	; (401c2c <Reset_Handler+0xc0>)
  401bfe:	4798      	blx	r3
        main();
  401c00:	4b0b      	ldr	r3, [pc, #44]	; (401c30 <Reset_Handler+0xc4>)
  401c02:	4798      	blx	r3
  401c04:	e7fe      	b.n	401c04 <Reset_Handler+0x98>
  401c06:	bf00      	nop
  401c08:	20400000 	.word	0x20400000
  401c0c:	00408c8c 	.word	0x00408c8c
  401c10:	204009c0 	.word	0x204009c0
  401c14:	20400e8c 	.word	0x20400e8c
  401c18:	204009c0 	.word	0x204009c0
  401c1c:	e000ed00 	.word	0xe000ed00
  401c20:	00400000 	.word	0x00400000
  401c24:	2040000a 	.word	0x2040000a
  401c28:	e000ed88 	.word	0xe000ed88
  401c2c:	004023c9 	.word	0x004023c9
  401c30:	0040217d 	.word	0x0040217d

00401c34 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401c34:	4b3b      	ldr	r3, [pc, #236]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401c36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401c38:	f003 0303 	and.w	r3, r3, #3
  401c3c:	2b01      	cmp	r3, #1
  401c3e:	d01d      	beq.n	401c7c <SystemCoreClockUpdate+0x48>
  401c40:	b183      	cbz	r3, 401c64 <SystemCoreClockUpdate+0x30>
  401c42:	2b02      	cmp	r3, #2
  401c44:	d036      	beq.n	401cb4 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401c46:	4b37      	ldr	r3, [pc, #220]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401c48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401c4a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401c4e:	2b70      	cmp	r3, #112	; 0x70
  401c50:	d05f      	beq.n	401d12 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401c52:	4b34      	ldr	r3, [pc, #208]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401c54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401c56:	4934      	ldr	r1, [pc, #208]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401c58:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401c5c:	680b      	ldr	r3, [r1, #0]
  401c5e:	40d3      	lsrs	r3, r2
  401c60:	600b      	str	r3, [r1, #0]
  401c62:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401c64:	4b31      	ldr	r3, [pc, #196]	; (401d2c <SystemCoreClockUpdate+0xf8>)
  401c66:	695b      	ldr	r3, [r3, #20]
  401c68:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401c6c:	bf14      	ite	ne
  401c6e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401c72:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401c76:	4b2c      	ldr	r3, [pc, #176]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401c78:	601a      	str	r2, [r3, #0]
  401c7a:	e7e4      	b.n	401c46 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401c7c:	4b29      	ldr	r3, [pc, #164]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401c7e:	6a1b      	ldr	r3, [r3, #32]
  401c80:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401c84:	d003      	beq.n	401c8e <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401c86:	4a2a      	ldr	r2, [pc, #168]	; (401d30 <SystemCoreClockUpdate+0xfc>)
  401c88:	4b27      	ldr	r3, [pc, #156]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401c8a:	601a      	str	r2, [r3, #0]
  401c8c:	e7db      	b.n	401c46 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401c8e:	4a29      	ldr	r2, [pc, #164]	; (401d34 <SystemCoreClockUpdate+0x100>)
  401c90:	4b25      	ldr	r3, [pc, #148]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401c92:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401c94:	4b23      	ldr	r3, [pc, #140]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401c96:	6a1b      	ldr	r3, [r3, #32]
  401c98:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401c9c:	2b10      	cmp	r3, #16
  401c9e:	d005      	beq.n	401cac <SystemCoreClockUpdate+0x78>
  401ca0:	2b20      	cmp	r3, #32
  401ca2:	d1d0      	bne.n	401c46 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401ca4:	4a22      	ldr	r2, [pc, #136]	; (401d30 <SystemCoreClockUpdate+0xfc>)
  401ca6:	4b20      	ldr	r3, [pc, #128]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401ca8:	601a      	str	r2, [r3, #0]
          break;
  401caa:	e7cc      	b.n	401c46 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401cac:	4a22      	ldr	r2, [pc, #136]	; (401d38 <SystemCoreClockUpdate+0x104>)
  401cae:	4b1e      	ldr	r3, [pc, #120]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401cb0:	601a      	str	r2, [r3, #0]
          break;
  401cb2:	e7c8      	b.n	401c46 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401cb4:	4b1b      	ldr	r3, [pc, #108]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401cb6:	6a1b      	ldr	r3, [r3, #32]
  401cb8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401cbc:	d016      	beq.n	401cec <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  401cbe:	4a1c      	ldr	r2, [pc, #112]	; (401d30 <SystemCoreClockUpdate+0xfc>)
  401cc0:	4b19      	ldr	r3, [pc, #100]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401cc2:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401cc4:	4b17      	ldr	r3, [pc, #92]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401cc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401cc8:	f003 0303 	and.w	r3, r3, #3
  401ccc:	2b02      	cmp	r3, #2
  401cce:	d1ba      	bne.n	401c46 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401cd0:	4a14      	ldr	r2, [pc, #80]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401cd2:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401cd4:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401cd6:	4814      	ldr	r0, [pc, #80]	; (401d28 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401cd8:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401cdc:	6803      	ldr	r3, [r0, #0]
  401cde:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401ce2:	b2d2      	uxtb	r2, r2
  401ce4:	fbb3 f3f2 	udiv	r3, r3, r2
  401ce8:	6003      	str	r3, [r0, #0]
  401cea:	e7ac      	b.n	401c46 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401cec:	4a11      	ldr	r2, [pc, #68]	; (401d34 <SystemCoreClockUpdate+0x100>)
  401cee:	4b0e      	ldr	r3, [pc, #56]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401cf0:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401cf2:	4b0c      	ldr	r3, [pc, #48]	; (401d24 <SystemCoreClockUpdate+0xf0>)
  401cf4:	6a1b      	ldr	r3, [r3, #32]
  401cf6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401cfa:	2b10      	cmp	r3, #16
  401cfc:	d005      	beq.n	401d0a <SystemCoreClockUpdate+0xd6>
  401cfe:	2b20      	cmp	r3, #32
  401d00:	d1e0      	bne.n	401cc4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401d02:	4a0b      	ldr	r2, [pc, #44]	; (401d30 <SystemCoreClockUpdate+0xfc>)
  401d04:	4b08      	ldr	r3, [pc, #32]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401d06:	601a      	str	r2, [r3, #0]
          break;
  401d08:	e7dc      	b.n	401cc4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401d0a:	4a0b      	ldr	r2, [pc, #44]	; (401d38 <SystemCoreClockUpdate+0x104>)
  401d0c:	4b06      	ldr	r3, [pc, #24]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401d0e:	601a      	str	r2, [r3, #0]
          break;
  401d10:	e7d8      	b.n	401cc4 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401d12:	4a05      	ldr	r2, [pc, #20]	; (401d28 <SystemCoreClockUpdate+0xf4>)
  401d14:	6813      	ldr	r3, [r2, #0]
  401d16:	4909      	ldr	r1, [pc, #36]	; (401d3c <SystemCoreClockUpdate+0x108>)
  401d18:	fba1 1303 	umull	r1, r3, r1, r3
  401d1c:	085b      	lsrs	r3, r3, #1
  401d1e:	6013      	str	r3, [r2, #0]
  401d20:	4770      	bx	lr
  401d22:	bf00      	nop
  401d24:	400e0600 	.word	0x400e0600
  401d28:	2040000c 	.word	0x2040000c
  401d2c:	400e1810 	.word	0x400e1810
  401d30:	00b71b00 	.word	0x00b71b00
  401d34:	003d0900 	.word	0x003d0900
  401d38:	007a1200 	.word	0x007a1200
  401d3c:	aaaaaaab 	.word	0xaaaaaaab

00401d40 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401d40:	4b16      	ldr	r3, [pc, #88]	; (401d9c <system_init_flash+0x5c>)
  401d42:	4298      	cmp	r0, r3
  401d44:	d913      	bls.n	401d6e <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401d46:	4b16      	ldr	r3, [pc, #88]	; (401da0 <system_init_flash+0x60>)
  401d48:	4298      	cmp	r0, r3
  401d4a:	d915      	bls.n	401d78 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401d4c:	4b15      	ldr	r3, [pc, #84]	; (401da4 <system_init_flash+0x64>)
  401d4e:	4298      	cmp	r0, r3
  401d50:	d916      	bls.n	401d80 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401d52:	4b15      	ldr	r3, [pc, #84]	; (401da8 <system_init_flash+0x68>)
  401d54:	4298      	cmp	r0, r3
  401d56:	d917      	bls.n	401d88 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401d58:	4b14      	ldr	r3, [pc, #80]	; (401dac <system_init_flash+0x6c>)
  401d5a:	4298      	cmp	r0, r3
  401d5c:	d918      	bls.n	401d90 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  401d5e:	4b14      	ldr	r3, [pc, #80]	; (401db0 <system_init_flash+0x70>)
  401d60:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401d62:	bf94      	ite	ls
  401d64:	4a13      	ldrls	r2, [pc, #76]	; (401db4 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401d66:	4a14      	ldrhi	r2, [pc, #80]	; (401db8 <system_init_flash+0x78>)
  401d68:	4b14      	ldr	r3, [pc, #80]	; (401dbc <system_init_flash+0x7c>)
  401d6a:	601a      	str	r2, [r3, #0]
  401d6c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401d6e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401d72:	4b12      	ldr	r3, [pc, #72]	; (401dbc <system_init_flash+0x7c>)
  401d74:	601a      	str	r2, [r3, #0]
  401d76:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401d78:	4a11      	ldr	r2, [pc, #68]	; (401dc0 <system_init_flash+0x80>)
  401d7a:	4b10      	ldr	r3, [pc, #64]	; (401dbc <system_init_flash+0x7c>)
  401d7c:	601a      	str	r2, [r3, #0]
  401d7e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401d80:	4a10      	ldr	r2, [pc, #64]	; (401dc4 <system_init_flash+0x84>)
  401d82:	4b0e      	ldr	r3, [pc, #56]	; (401dbc <system_init_flash+0x7c>)
  401d84:	601a      	str	r2, [r3, #0]
  401d86:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401d88:	4a0f      	ldr	r2, [pc, #60]	; (401dc8 <system_init_flash+0x88>)
  401d8a:	4b0c      	ldr	r3, [pc, #48]	; (401dbc <system_init_flash+0x7c>)
  401d8c:	601a      	str	r2, [r3, #0]
  401d8e:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401d90:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401d94:	4b09      	ldr	r3, [pc, #36]	; (401dbc <system_init_flash+0x7c>)
  401d96:	601a      	str	r2, [r3, #0]
  401d98:	4770      	bx	lr
  401d9a:	bf00      	nop
  401d9c:	015ef3bf 	.word	0x015ef3bf
  401da0:	02bde77f 	.word	0x02bde77f
  401da4:	041cdb3f 	.word	0x041cdb3f
  401da8:	057bceff 	.word	0x057bceff
  401dac:	06dac2bf 	.word	0x06dac2bf
  401db0:	0839b67f 	.word	0x0839b67f
  401db4:	04000500 	.word	0x04000500
  401db8:	04000600 	.word	0x04000600
  401dbc:	400e0c00 	.word	0x400e0c00
  401dc0:	04000100 	.word	0x04000100
  401dc4:	04000200 	.word	0x04000200
  401dc8:	04000300 	.word	0x04000300

00401dcc <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401dcc:	4b0a      	ldr	r3, [pc, #40]	; (401df8 <_sbrk+0x2c>)
  401dce:	681b      	ldr	r3, [r3, #0]
  401dd0:	b153      	cbz	r3, 401de8 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401dd2:	4b09      	ldr	r3, [pc, #36]	; (401df8 <_sbrk+0x2c>)
  401dd4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401dd6:	181a      	adds	r2, r3, r0
  401dd8:	4908      	ldr	r1, [pc, #32]	; (401dfc <_sbrk+0x30>)
  401dda:	4291      	cmp	r1, r2
  401ddc:	db08      	blt.n	401df0 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401dde:	4610      	mov	r0, r2
  401de0:	4a05      	ldr	r2, [pc, #20]	; (401df8 <_sbrk+0x2c>)
  401de2:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401de4:	4618      	mov	r0, r3
  401de6:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401de8:	4a05      	ldr	r2, [pc, #20]	; (401e00 <_sbrk+0x34>)
  401dea:	4b03      	ldr	r3, [pc, #12]	; (401df8 <_sbrk+0x2c>)
  401dec:	601a      	str	r2, [r3, #0]
  401dee:	e7f0      	b.n	401dd2 <_sbrk+0x6>
		return (caddr_t) -1;	
  401df0:	f04f 30ff 	mov.w	r0, #4294967295
}
  401df4:	4770      	bx	lr
  401df6:	bf00      	nop
  401df8:	20400e10 	.word	0x20400e10
  401dfc:	2045fffc 	.word	0x2045fffc
  401e00:	20403090 	.word	0x20403090

00401e04 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  401e04:	f04f 30ff 	mov.w	r0, #4294967295
  401e08:	4770      	bx	lr

00401e0a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  401e0a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  401e0e:	604b      	str	r3, [r1, #4]

	return 0;
}
  401e10:	2000      	movs	r0, #0
  401e12:	4770      	bx	lr

00401e14 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  401e14:	2001      	movs	r0, #1
  401e16:	4770      	bx	lr

00401e18 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  401e18:	2000      	movs	r0, #0
  401e1a:	4770      	bx	lr

00401e1c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  401e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
  401e1e:	b083      	sub	sp, #12
  401e20:	4605      	mov	r5, r0
  401e22:	460c      	mov	r4, r1
	uint32_t val = 0;
  401e24:	2300      	movs	r3, #0
  401e26:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  401e28:	4b2a      	ldr	r3, [pc, #168]	; (401ed4 <usart_serial_getchar+0xb8>)
  401e2a:	4298      	cmp	r0, r3
  401e2c:	d013      	beq.n	401e56 <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  401e2e:	4b2a      	ldr	r3, [pc, #168]	; (401ed8 <usart_serial_getchar+0xbc>)
  401e30:	4298      	cmp	r0, r3
  401e32:	d018      	beq.n	401e66 <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  401e34:	4b29      	ldr	r3, [pc, #164]	; (401edc <usart_serial_getchar+0xc0>)
  401e36:	4298      	cmp	r0, r3
  401e38:	d01d      	beq.n	401e76 <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  401e3a:	4b29      	ldr	r3, [pc, #164]	; (401ee0 <usart_serial_getchar+0xc4>)
  401e3c:	429d      	cmp	r5, r3
  401e3e:	d022      	beq.n	401e86 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  401e40:	4b28      	ldr	r3, [pc, #160]	; (401ee4 <usart_serial_getchar+0xc8>)
  401e42:	429d      	cmp	r5, r3
  401e44:	d027      	beq.n	401e96 <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  401e46:	4b28      	ldr	r3, [pc, #160]	; (401ee8 <usart_serial_getchar+0xcc>)
  401e48:	429d      	cmp	r5, r3
  401e4a:	d02e      	beq.n	401eaa <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  401e4c:	4b27      	ldr	r3, [pc, #156]	; (401eec <usart_serial_getchar+0xd0>)
  401e4e:	429d      	cmp	r5, r3
  401e50:	d035      	beq.n	401ebe <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  401e52:	b003      	add	sp, #12
  401e54:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  401e56:	461f      	mov	r7, r3
  401e58:	4e25      	ldr	r6, [pc, #148]	; (401ef0 <usart_serial_getchar+0xd4>)
  401e5a:	4621      	mov	r1, r4
  401e5c:	4638      	mov	r0, r7
  401e5e:	47b0      	blx	r6
  401e60:	2800      	cmp	r0, #0
  401e62:	d1fa      	bne.n	401e5a <usart_serial_getchar+0x3e>
  401e64:	e7e9      	b.n	401e3a <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  401e66:	461f      	mov	r7, r3
  401e68:	4e21      	ldr	r6, [pc, #132]	; (401ef0 <usart_serial_getchar+0xd4>)
  401e6a:	4621      	mov	r1, r4
  401e6c:	4638      	mov	r0, r7
  401e6e:	47b0      	blx	r6
  401e70:	2800      	cmp	r0, #0
  401e72:	d1fa      	bne.n	401e6a <usart_serial_getchar+0x4e>
  401e74:	e7e4      	b.n	401e40 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  401e76:	461f      	mov	r7, r3
  401e78:	4e1d      	ldr	r6, [pc, #116]	; (401ef0 <usart_serial_getchar+0xd4>)
  401e7a:	4621      	mov	r1, r4
  401e7c:	4638      	mov	r0, r7
  401e7e:	47b0      	blx	r6
  401e80:	2800      	cmp	r0, #0
  401e82:	d1fa      	bne.n	401e7a <usart_serial_getchar+0x5e>
  401e84:	e7df      	b.n	401e46 <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  401e86:	461f      	mov	r7, r3
  401e88:	4e19      	ldr	r6, [pc, #100]	; (401ef0 <usart_serial_getchar+0xd4>)
  401e8a:	4621      	mov	r1, r4
  401e8c:	4638      	mov	r0, r7
  401e8e:	47b0      	blx	r6
  401e90:	2800      	cmp	r0, #0
  401e92:	d1fa      	bne.n	401e8a <usart_serial_getchar+0x6e>
  401e94:	e7da      	b.n	401e4c <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  401e96:	461e      	mov	r6, r3
  401e98:	4d16      	ldr	r5, [pc, #88]	; (401ef4 <usart_serial_getchar+0xd8>)
  401e9a:	a901      	add	r1, sp, #4
  401e9c:	4630      	mov	r0, r6
  401e9e:	47a8      	blx	r5
  401ea0:	2800      	cmp	r0, #0
  401ea2:	d1fa      	bne.n	401e9a <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  401ea4:	9b01      	ldr	r3, [sp, #4]
  401ea6:	7023      	strb	r3, [r4, #0]
  401ea8:	e7d3      	b.n	401e52 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  401eaa:	461e      	mov	r6, r3
  401eac:	4d11      	ldr	r5, [pc, #68]	; (401ef4 <usart_serial_getchar+0xd8>)
  401eae:	a901      	add	r1, sp, #4
  401eb0:	4630      	mov	r0, r6
  401eb2:	47a8      	blx	r5
  401eb4:	2800      	cmp	r0, #0
  401eb6:	d1fa      	bne.n	401eae <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  401eb8:	9b01      	ldr	r3, [sp, #4]
  401eba:	7023      	strb	r3, [r4, #0]
  401ebc:	e7c9      	b.n	401e52 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  401ebe:	461e      	mov	r6, r3
  401ec0:	4d0c      	ldr	r5, [pc, #48]	; (401ef4 <usart_serial_getchar+0xd8>)
  401ec2:	a901      	add	r1, sp, #4
  401ec4:	4630      	mov	r0, r6
  401ec6:	47a8      	blx	r5
  401ec8:	2800      	cmp	r0, #0
  401eca:	d1fa      	bne.n	401ec2 <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  401ecc:	9b01      	ldr	r3, [sp, #4]
  401ece:	7023      	strb	r3, [r4, #0]
}
  401ed0:	e7bf      	b.n	401e52 <usart_serial_getchar+0x36>
  401ed2:	bf00      	nop
  401ed4:	400e0800 	.word	0x400e0800
  401ed8:	400e0a00 	.word	0x400e0a00
  401edc:	400e1a00 	.word	0x400e1a00
  401ee0:	400e1c00 	.word	0x400e1c00
  401ee4:	40024000 	.word	0x40024000
  401ee8:	40028000 	.word	0x40028000
  401eec:	4002c000 	.word	0x4002c000
  401ef0:	00401a47 	.word	0x00401a47
  401ef4:	00401b53 	.word	0x00401b53

00401ef8 <usart_serial_putchar>:
{
  401ef8:	b570      	push	{r4, r5, r6, lr}
  401efa:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  401efc:	4b2a      	ldr	r3, [pc, #168]	; (401fa8 <usart_serial_putchar+0xb0>)
  401efe:	4298      	cmp	r0, r3
  401f00:	d013      	beq.n	401f2a <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  401f02:	4b2a      	ldr	r3, [pc, #168]	; (401fac <usart_serial_putchar+0xb4>)
  401f04:	4298      	cmp	r0, r3
  401f06:	d019      	beq.n	401f3c <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  401f08:	4b29      	ldr	r3, [pc, #164]	; (401fb0 <usart_serial_putchar+0xb8>)
  401f0a:	4298      	cmp	r0, r3
  401f0c:	d01f      	beq.n	401f4e <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  401f0e:	4b29      	ldr	r3, [pc, #164]	; (401fb4 <usart_serial_putchar+0xbc>)
  401f10:	4298      	cmp	r0, r3
  401f12:	d025      	beq.n	401f60 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  401f14:	4b28      	ldr	r3, [pc, #160]	; (401fb8 <usart_serial_putchar+0xc0>)
  401f16:	4298      	cmp	r0, r3
  401f18:	d02b      	beq.n	401f72 <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  401f1a:	4b28      	ldr	r3, [pc, #160]	; (401fbc <usart_serial_putchar+0xc4>)
  401f1c:	4298      	cmp	r0, r3
  401f1e:	d031      	beq.n	401f84 <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  401f20:	4b27      	ldr	r3, [pc, #156]	; (401fc0 <usart_serial_putchar+0xc8>)
  401f22:	4298      	cmp	r0, r3
  401f24:	d037      	beq.n	401f96 <usart_serial_putchar+0x9e>
	return 0;
  401f26:	2000      	movs	r0, #0
}
  401f28:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  401f2a:	461e      	mov	r6, r3
  401f2c:	4d25      	ldr	r5, [pc, #148]	; (401fc4 <usart_serial_putchar+0xcc>)
  401f2e:	4621      	mov	r1, r4
  401f30:	4630      	mov	r0, r6
  401f32:	47a8      	blx	r5
  401f34:	2800      	cmp	r0, #0
  401f36:	d1fa      	bne.n	401f2e <usart_serial_putchar+0x36>
		return 1;
  401f38:	2001      	movs	r0, #1
  401f3a:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  401f3c:	461e      	mov	r6, r3
  401f3e:	4d21      	ldr	r5, [pc, #132]	; (401fc4 <usart_serial_putchar+0xcc>)
  401f40:	4621      	mov	r1, r4
  401f42:	4630      	mov	r0, r6
  401f44:	47a8      	blx	r5
  401f46:	2800      	cmp	r0, #0
  401f48:	d1fa      	bne.n	401f40 <usart_serial_putchar+0x48>
		return 1;
  401f4a:	2001      	movs	r0, #1
  401f4c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  401f4e:	461e      	mov	r6, r3
  401f50:	4d1c      	ldr	r5, [pc, #112]	; (401fc4 <usart_serial_putchar+0xcc>)
  401f52:	4621      	mov	r1, r4
  401f54:	4630      	mov	r0, r6
  401f56:	47a8      	blx	r5
  401f58:	2800      	cmp	r0, #0
  401f5a:	d1fa      	bne.n	401f52 <usart_serial_putchar+0x5a>
		return 1;
  401f5c:	2001      	movs	r0, #1
  401f5e:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  401f60:	461e      	mov	r6, r3
  401f62:	4d18      	ldr	r5, [pc, #96]	; (401fc4 <usart_serial_putchar+0xcc>)
  401f64:	4621      	mov	r1, r4
  401f66:	4630      	mov	r0, r6
  401f68:	47a8      	blx	r5
  401f6a:	2800      	cmp	r0, #0
  401f6c:	d1fa      	bne.n	401f64 <usart_serial_putchar+0x6c>
		return 1;
  401f6e:	2001      	movs	r0, #1
  401f70:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  401f72:	461e      	mov	r6, r3
  401f74:	4d14      	ldr	r5, [pc, #80]	; (401fc8 <usart_serial_putchar+0xd0>)
  401f76:	4621      	mov	r1, r4
  401f78:	4630      	mov	r0, r6
  401f7a:	47a8      	blx	r5
  401f7c:	2800      	cmp	r0, #0
  401f7e:	d1fa      	bne.n	401f76 <usart_serial_putchar+0x7e>
		return 1;
  401f80:	2001      	movs	r0, #1
  401f82:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  401f84:	461e      	mov	r6, r3
  401f86:	4d10      	ldr	r5, [pc, #64]	; (401fc8 <usart_serial_putchar+0xd0>)
  401f88:	4621      	mov	r1, r4
  401f8a:	4630      	mov	r0, r6
  401f8c:	47a8      	blx	r5
  401f8e:	2800      	cmp	r0, #0
  401f90:	d1fa      	bne.n	401f88 <usart_serial_putchar+0x90>
		return 1;
  401f92:	2001      	movs	r0, #1
  401f94:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  401f96:	461e      	mov	r6, r3
  401f98:	4d0b      	ldr	r5, [pc, #44]	; (401fc8 <usart_serial_putchar+0xd0>)
  401f9a:	4621      	mov	r1, r4
  401f9c:	4630      	mov	r0, r6
  401f9e:	47a8      	blx	r5
  401fa0:	2800      	cmp	r0, #0
  401fa2:	d1fa      	bne.n	401f9a <usart_serial_putchar+0xa2>
		return 1;
  401fa4:	2001      	movs	r0, #1
  401fa6:	bd70      	pop	{r4, r5, r6, pc}
  401fa8:	400e0800 	.word	0x400e0800
  401fac:	400e0a00 	.word	0x400e0a00
  401fb0:	400e1a00 	.word	0x400e1a00
  401fb4:	400e1c00 	.word	0x400e1c00
  401fb8:	40024000 	.word	0x40024000
  401fbc:	40028000 	.word	0x40028000
  401fc0:	4002c000 	.word	0x4002c000
  401fc4:	00401a35 	.word	0x00401a35
  401fc8:	00401b3d 	.word	0x00401b3d

00401fcc <draw_screen>:
	mxt_write_config_reg(device, mxt_get_object_address(device,
			MXT_GEN_COMMANDPROCESSOR_T6, 0)
			+ MXT_GEN_COMMANDPROCESSOR_CALIBRATE, 0x01);
}

void draw_screen(void) {
  401fcc:	b510      	push	{r4, lr}
	ili9488_set_foreground_color(COLOR_CONVERT(COLOR_WHITE));
  401fce:	4806      	ldr	r0, [pc, #24]	; (401fe8 <draw_screen+0x1c>)
  401fd0:	4b06      	ldr	r3, [pc, #24]	; (401fec <draw_screen+0x20>)
  401fd2:	4798      	blx	r3
	ili9488_draw_filled_rectangle(0, 0, ILI9488_LCD_WIDTH-1, ILI9488_LCD_HEIGHT-1);
  401fd4:	f240 13df 	movw	r3, #479	; 0x1df
  401fd8:	f240 123f 	movw	r2, #319	; 0x13f
  401fdc:	2100      	movs	r1, #0
  401fde:	4608      	mov	r0, r1
  401fe0:	4c03      	ldr	r4, [pc, #12]	; (401ff0 <draw_screen+0x24>)
  401fe2:	47a0      	blx	r4
  401fe4:	bd10      	pop	{r4, pc}
  401fe6:	bf00      	nop
  401fe8:	00fcfcfc 	.word	0x00fcfcfc
  401fec:	00400e95 	.word	0x00400e95
  401ff0:	004010e5 	.word	0x004010e5

00401ff4 <draw_lines>:
}

void draw_lines(void){
  401ff4:	b538      	push	{r3, r4, r5, lr}
	ili9488_set_foreground_color(COLOR_CONVERT(COLOR_BLACK));
  401ff6:	2000      	movs	r0, #0
  401ff8:	4d09      	ldr	r5, [pc, #36]	; (402020 <draw_lines+0x2c>)
  401ffa:	47a8      	blx	r5
	ili9488_draw_filled_rectangle(0,160,320,163);
  401ffc:	23a3      	movs	r3, #163	; 0xa3
  401ffe:	f44f 72a0 	mov.w	r2, #320	; 0x140
  402002:	21a0      	movs	r1, #160	; 0xa0
  402004:	2000      	movs	r0, #0
  402006:	4c07      	ldr	r4, [pc, #28]	; (402024 <draw_lines+0x30>)
  402008:	47a0      	blx	r4
	ili9488_set_foreground_color(COLOR_CONVERT(COLOR_BLACK));
  40200a:	2000      	movs	r0, #0
  40200c:	47a8      	blx	r5
	ili9488_draw_filled_rectangle(0,320,320,323);
  40200e:	f240 1343 	movw	r3, #323	; 0x143
  402012:	f44f 72a0 	mov.w	r2, #320	; 0x140
  402016:	4611      	mov	r1, r2
  402018:	2000      	movs	r0, #0
  40201a:	47a0      	blx	r4
  40201c:	bd38      	pop	{r3, r4, r5, pc}
  40201e:	bf00      	nop
  402020:	00400e95 	.word	0x00400e95
  402024:	004010e5 	.word	0x004010e5

00402028 <draw_button>:
	
	
}

void draw_button(uint32_t clicked) {
  402028:	b538      	push	{r3, r4, r5, lr}
	static uint32_t last_state = 255; // undefined
	if(clicked == last_state) return;
  40202a:	4b13      	ldr	r3, [pc, #76]	; (402078 <draw_button+0x50>)
  40202c:	681b      	ldr	r3, [r3, #0]
  40202e:	4283      	cmp	r3, r0
  402030:	d016      	beq.n	402060 <draw_button+0x38>
  402032:	4604      	mov	r4, r0
	
	ili9488_set_foreground_color(COLOR_CONVERT(COLOR_BLACK));
  402034:	2000      	movs	r0, #0
  402036:	4b11      	ldr	r3, [pc, #68]	; (40207c <draw_button+0x54>)
  402038:	4798      	blx	r3
	ili9488_draw_filled_rectangle(BUTTON_X-BUTTON_W/2, BUTTON_Y-BUTTON_H/2, BUTTON_X+BUTTON_W/2, BUTTON_Y+BUTTON_H/2);
  40203a:	f240 133b 	movw	r3, #315	; 0x13b
  40203e:	22dc      	movs	r2, #220	; 0xdc
  402040:	21a5      	movs	r1, #165	; 0xa5
  402042:	2064      	movs	r0, #100	; 0x64
  402044:	4d0e      	ldr	r5, [pc, #56]	; (402080 <draw_button+0x58>)
  402046:	47a8      	blx	r5
	if(clicked) {
  402048:	b15c      	cbz	r4, 402062 <draw_button+0x3a>
		ili9488_set_foreground_color(COLOR_CONVERT(COLOR_TOMATO));
  40204a:	480e      	ldr	r0, [pc, #56]	; (402084 <draw_button+0x5c>)
  40204c:	4b0b      	ldr	r3, [pc, #44]	; (40207c <draw_button+0x54>)
  40204e:	4798      	blx	r3
		ili9488_draw_filled_rectangle(BUTTON_X-BUTTON_W/2+BUTTON_BORDER, BUTTON_Y+BUTTON_BORDER, BUTTON_X+BUTTON_W/2-BUTTON_BORDER, BUTTON_Y+BUTTON_H/2-BUTTON_BORDER);
  402050:	f240 1339 	movw	r3, #313	; 0x139
  402054:	22da      	movs	r2, #218	; 0xda
  402056:	21f2      	movs	r1, #242	; 0xf2
  402058:	2066      	movs	r0, #102	; 0x66
  40205a:	47a8      	blx	r5
	} else {
		ili9488_set_foreground_color(COLOR_CONVERT(COLOR_GREEN));
		ili9488_draw_filled_rectangle(BUTTON_X-BUTTON_W/2+BUTTON_BORDER, BUTTON_Y-BUTTON_H/2+BUTTON_BORDER, BUTTON_X+BUTTON_W/2-BUTTON_BORDER, BUTTON_Y-BUTTON_BORDER);
	}
	last_state = clicked;
  40205c:	4b06      	ldr	r3, [pc, #24]	; (402078 <draw_button+0x50>)
  40205e:	601c      	str	r4, [r3, #0]
  402060:	bd38      	pop	{r3, r4, r5, pc}
		ili9488_set_foreground_color(COLOR_CONVERT(COLOR_GREEN));
  402062:	f44f 407c 	mov.w	r0, #64512	; 0xfc00
  402066:	4b05      	ldr	r3, [pc, #20]	; (40207c <draw_button+0x54>)
  402068:	4798      	blx	r3
		ili9488_draw_filled_rectangle(BUTTON_X-BUTTON_W/2+BUTTON_BORDER, BUTTON_Y-BUTTON_H/2+BUTTON_BORDER, BUTTON_X+BUTTON_W/2-BUTTON_BORDER, BUTTON_Y-BUTTON_BORDER);
  40206a:	23ee      	movs	r3, #238	; 0xee
  40206c:	22da      	movs	r2, #218	; 0xda
  40206e:	21a7      	movs	r1, #167	; 0xa7
  402070:	2066      	movs	r0, #102	; 0x66
  402072:	4d03      	ldr	r5, [pc, #12]	; (402080 <draw_button+0x58>)
  402074:	47a8      	blx	r5
  402076:	e7f1      	b.n	40205c <draw_button+0x34>
  402078:	20400010 	.word	0x20400010
  40207c:	00400e95 	.word	0x00400e95
  402080:	004010e5 	.word	0x004010e5
  402084:	00fc6044 	.word	0x00fc6044

00402088 <update_screen>:
	// saida: 0 - 320
	return ILI9488_LCD_HEIGHT*touch_x/4096;
}

void update_screen(uint32_t tx, uint32_t ty) {
	if(tx >= BUTTON_X-BUTTON_W/2 && tx <= BUTTON_X + BUTTON_W/2) {
  402088:	3864      	subs	r0, #100	; 0x64
  40208a:	2878      	cmp	r0, #120	; 0x78
  40208c:	d810      	bhi.n	4020b0 <update_screen+0x28>
void update_screen(uint32_t tx, uint32_t ty) {
  40208e:	b508      	push	{r3, lr}
		if(ty >= BUTTON_Y-BUTTON_H/2 && ty <= BUTTON_Y) {
  402090:	f1a1 03a5 	sub.w	r3, r1, #165	; 0xa5
  402094:	2b4b      	cmp	r3, #75	; 0x4b
  402096:	d903      	bls.n	4020a0 <update_screen+0x18>
			draw_button(1);
		} else if(ty > BUTTON_Y && ty < BUTTON_Y + BUTTON_H/2) {
  402098:	39f1      	subs	r1, #241	; 0xf1
  40209a:	2949      	cmp	r1, #73	; 0x49
  40209c:	d904      	bls.n	4020a8 <update_screen+0x20>
  40209e:	bd08      	pop	{r3, pc}
			draw_button(1);
  4020a0:	2001      	movs	r0, #1
  4020a2:	4b04      	ldr	r3, [pc, #16]	; (4020b4 <update_screen+0x2c>)
  4020a4:	4798      	blx	r3
  4020a6:	bd08      	pop	{r3, pc}
			draw_button(0);
  4020a8:	2000      	movs	r0, #0
  4020aa:	4b02      	ldr	r3, [pc, #8]	; (4020b4 <update_screen+0x2c>)
  4020ac:	4798      	blx	r3
		}
	}
}
  4020ae:	e7f6      	b.n	40209e <update_screen+0x16>
  4020b0:	4770      	bx	lr
  4020b2:	bf00      	nop
  4020b4:	00402029 	.word	0x00402029

004020b8 <mxt_handler>:

void mxt_handler(struct mxt_device *device)
{
  4020b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4020bc:	b0ce      	sub	sp, #312	; 0x138
  4020be:	4605      	mov	r5, r0
	/* USART tx buffer initialized to 0 */
	char tx_buf[STRING_LENGTH * MAX_ENTRIES] = {0};
  4020c0:	22d2      	movs	r2, #210	; 0xd2
  4020c2:	2100      	movs	r1, #0
  4020c4:	a819      	add	r0, sp, #100	; 0x64
  4020c6:	4b23      	ldr	r3, [pc, #140]	; (402154 <mxt_handler+0x9c>)
  4020c8:	4798      	blx	r3
	uint8_t i = 0; /* Iterator */
  4020ca:	2400      	movs	r4, #0
	do {
		/* Temporary buffer for each new touch event line */
		char buf[STRING_LENGTH];
	
		/* Read next next touch event in the queue, discard if read fails */
		if (mxt_read_touch_event(device, &touch_event) != STATUS_OK) {
  4020cc:	4f22      	ldr	r7, [pc, #136]	; (402158 <mxt_handler+0xa0>)
		 // eixos trocados (quando na vertical LCD)
		uint32_t conv_x = convert_axis_system_x(touch_event.y);
		uint32_t conv_y = convert_axis_system_y(touch_event.x);
		
		/* Format a new entry in the data string that will be sent over USART */
		sprintf(buf, "Nr: %1d, X:%4d, Y:%4d, Status:0x%2x conv X:%3d Y:%3d\n\r",
  4020ce:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 402174 <mxt_handler+0xbc>
  4020d2:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 402178 <mxt_handler+0xc0>
  4020d6:	e005      	b.n	4020e4 <mxt_handler+0x2c>
		strcat(tx_buf, buf);
		i++;

		/* Check if there is still messages in the queue and
		 * if we have reached the maximum numbers of events */
	} while ((mxt_is_message_pending(device)) & (i < MAX_ENTRIES));
  4020d8:	4628      	mov	r0, r5
  4020da:	4b20      	ldr	r3, [pc, #128]	; (40215c <mxt_handler+0xa4>)
  4020dc:	4798      	blx	r3
  4020de:	2c02      	cmp	r4, #2
  4020e0:	d82a      	bhi.n	402138 <mxt_handler+0x80>
  4020e2:	b348      	cbz	r0, 402138 <mxt_handler+0x80>
		if (mxt_read_touch_event(device, &touch_event) != STATUS_OK) {
  4020e4:	a916      	add	r1, sp, #88	; 0x58
  4020e6:	4628      	mov	r0, r5
  4020e8:	47b8      	blx	r7
  4020ea:	2800      	cmp	r0, #0
  4020ec:	d1f4      	bne.n	4020d8 <mxt_handler+0x20>
		uint32_t conv_x = convert_axis_system_x(touch_event.y);
  4020ee:	f8bd 105c 	ldrh.w	r1, [sp, #92]	; 0x5c
	return ILI9488_LCD_WIDTH - ILI9488_LCD_WIDTH*touch_y/4096;
  4020f2:	eb01 0681 	add.w	r6, r1, r1, lsl #2
  4020f6:	f3c6 1693 	ubfx	r6, r6, #6, #20
  4020fa:	f5c6 76a0 	rsb	r6, r6, #320	; 0x140
		uint32_t conv_y = convert_axis_system_y(touch_event.x);
  4020fe:	f8bd 305a 	ldrh.w	r3, [sp, #90]	; 0x5a
	return ILI9488_LCD_HEIGHT*touch_x/4096;
  402102:	ebc3 1a03 	rsb	sl, r3, r3, lsl #4
  402106:	f3ca 1ad3 	ubfx	sl, sl, #7, #20
		sprintf(buf, "Nr: %1d, X:%4d, Y:%4d, Status:0x%2x conv X:%3d Y:%3d\n\r",
  40210a:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
  40210e:	f8cd a00c 	str.w	sl, [sp, #12]
  402112:	9602      	str	r6, [sp, #8]
  402114:	f89d 0059 	ldrb.w	r0, [sp, #89]	; 0x59
  402118:	9001      	str	r0, [sp, #4]
  40211a:	9100      	str	r1, [sp, #0]
  40211c:	4649      	mov	r1, r9
  40211e:	a804      	add	r0, sp, #16
  402120:	47c0      	blx	r8
		update_screen(conv_x, conv_y);
  402122:	4651      	mov	r1, sl
  402124:	4630      	mov	r0, r6
  402126:	4b0e      	ldr	r3, [pc, #56]	; (402160 <mxt_handler+0xa8>)
  402128:	4798      	blx	r3
		strcat(tx_buf, buf);
  40212a:	a904      	add	r1, sp, #16
  40212c:	a819      	add	r0, sp, #100	; 0x64
  40212e:	4b0d      	ldr	r3, [pc, #52]	; (402164 <mxt_handler+0xac>)
  402130:	4798      	blx	r3
		i++;
  402132:	3401      	adds	r4, #1
  402134:	b2e4      	uxtb	r4, r4
  402136:	e7cf      	b.n	4020d8 <mxt_handler+0x20>

	/* If there is any entries in the buffer, send them over USART */
	if (i > 0) {
  402138:	b914      	cbnz	r4, 402140 <mxt_handler+0x88>
		usart_serial_write_packet(USART_SERIAL_EXAMPLE, (uint8_t *)tx_buf, strlen(tx_buf));
	}
}
  40213a:	b04e      	add	sp, #312	; 0x138
  40213c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		usart_serial_write_packet(USART_SERIAL_EXAMPLE, (uint8_t *)tx_buf, strlen(tx_buf));
  402140:	a819      	add	r0, sp, #100	; 0x64
  402142:	4b09      	ldr	r3, [pc, #36]	; (402168 <mxt_handler+0xb0>)
  402144:	4798      	blx	r3
  402146:	4602      	mov	r2, r0
  402148:	a919      	add	r1, sp, #100	; 0x64
  40214a:	4808      	ldr	r0, [pc, #32]	; (40216c <mxt_handler+0xb4>)
  40214c:	4b08      	ldr	r3, [pc, #32]	; (402170 <mxt_handler+0xb8>)
  40214e:	4798      	blx	r3
}
  402150:	e7f3      	b.n	40213a <mxt_handler+0x82>
  402152:	bf00      	nop
  402154:	004029b1 	.word	0x004029b1
  402158:	004005dd 	.word	0x004005dd
  40215c:	0040056d 	.word	0x0040056d
  402160:	00402089 	.word	0x00402089
  402164:	00402c75 	.word	0x00402c75
  402168:	00402d81 	.word	0x00402d81
  40216c:	40028000 	.word	0x40028000
  402170:	004006c1 	.word	0x004006c1
  402174:	00408980 	.word	0x00408980
  402178:	00402c29 	.word	0x00402c29

0040217c <main>:

int main(void)
{
  40217c:	b580      	push	{r7, lr}
  40217e:	b0a4      	sub	sp, #144	; 0x90
		.charlength   = USART_SERIAL_CHAR_LENGTH,
		.paritytype   = USART_SERIAL_PARITY,
		.stopbits     = USART_SERIAL_STOP_BIT
	};

	sysclk_init(); /* Initialize system clocks */
  402180:	4b6e      	ldr	r3, [pc, #440]	; (40233c <main+0x1c0>)
  402182:	4798      	blx	r3
	board_init();  /* Initialize board */
  402184:	4b6e      	ldr	r3, [pc, #440]	; (402340 <main+0x1c4>)
  402186:	4798      	blx	r3
	g_ili9488_display_opt.ul_width = ILI9488_LCD_WIDTH;
  402188:	486e      	ldr	r0, [pc, #440]	; (402344 <main+0x1c8>)
  40218a:	f44f 73a0 	mov.w	r3, #320	; 0x140
  40218e:	6003      	str	r3, [r0, #0]
	g_ili9488_display_opt.ul_height = ILI9488_LCD_HEIGHT;
  402190:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  402194:	6043      	str	r3, [r0, #4]
	g_ili9488_display_opt.foreground_color = COLOR_CONVERT(COLOR_WHITE);
  402196:	4b6c      	ldr	r3, [pc, #432]	; (402348 <main+0x1cc>)
  402198:	6083      	str	r3, [r0, #8]
	g_ili9488_display_opt.background_color = COLOR_CONVERT(COLOR_WHITE);
  40219a:	60c3      	str	r3, [r0, #12]
	ili9488_init(&g_ili9488_display_opt);
  40219c:	4b6b      	ldr	r3, [pc, #428]	; (40234c <main+0x1d0>)
  40219e:	4798      	blx	r3
	configure_lcd();
	draw_screen();
  4021a0:	4b6b      	ldr	r3, [pc, #428]	; (402350 <main+0x1d4>)
  4021a2:	4798      	blx	r3
	draw_lines();
  4021a4:	4b6b      	ldr	r3, [pc, #428]	; (402354 <main+0x1d8>)
  4021a6:	4798      	blx	r3
	draw_button(0);
  4021a8:	2000      	movs	r0, #0
  4021aa:	4b6b      	ldr	r3, [pc, #428]	; (402358 <main+0x1dc>)
  4021ac:	4798      	blx	r3
	uint8_t t8_object[] = {
  4021ae:	4c6b      	ldr	r4, [pc, #428]	; (40235c <main+0x1e0>)
  4021b0:	ab04      	add	r3, sp, #16
  4021b2:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
  4021b6:	c303      	stmia	r3!, {r0, r1}
  4021b8:	801a      	strh	r2, [r3, #0]
	uint8_t t9_object[] = {
  4021ba:	ad13      	add	r5, sp, #76	; 0x4c
  4021bc:	f104 060c 	add.w	r6, r4, #12
  4021c0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
  4021c2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  4021c4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
  4021c6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  4021c8:	6833      	ldr	r3, [r6, #0]
  4021ca:	602b      	str	r3, [r5, #0]
	uint8_t t46_object[] = {
  4021cc:	ab01      	add	r3, sp, #4
  4021ce:	f104 0230 	add.w	r2, r4, #48	; 0x30
  4021d2:	ca07      	ldmia	r2, {r0, r1, r2}
  4021d4:	c303      	stmia	r3!, {r0, r1}
  4021d6:	701a      	strb	r2, [r3, #0]
	uint8_t t56_object[] = {
  4021d8:	ad0a      	add	r5, sp, #40	; 0x28
  4021da:	343c      	adds	r4, #60	; 0x3c
  4021dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  4021de:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  4021e0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  4021e2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
  4021e4:	6823      	ldr	r3, [r4, #0]
  4021e6:	702b      	strb	r3, [r5, #0]
	twihs_master_options_t twi_opt = {
  4021e8:	2400      	movs	r4, #0
  4021ea:	9409      	str	r4, [sp, #36]	; 0x24
  4021ec:	4b5c      	ldr	r3, [pc, #368]	; (402360 <main+0x1e4>)
  4021ee:	9308      	str	r3, [sp, #32]
  4021f0:	264a      	movs	r6, #74	; 0x4a
  4021f2:	f88d 6024 	strb.w	r6, [sp, #36]	; 0x24
typedef twihs_packet_t twihs_package_t;

static inline uint32_t twihs_master_setup(twihs_master_t p_twihs,
		twihs_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_peripheral_hz();
  4021f6:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 4023c0 <main+0x244>
  4021fa:	f8cd 801c 	str.w	r8, [sp, #28]
  4021fe:	2013      	movs	r0, #19
  402200:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 4023c4 <main+0x248>
  402204:	47c8      	blx	r9
#endif		
	} else {
		// Do Nothing
	}
#endif
	return (twihs_master_init(p_twihs, p_opt));
  402206:	4d57      	ldr	r5, [pc, #348]	; (402364 <main+0x1e8>)
  402208:	a907      	add	r1, sp, #28
  40220a:	4628      	mov	r0, r5
  40220c:	4b56      	ldr	r3, [pc, #344]	; (402368 <main+0x1ec>)
  40220e:	4798      	blx	r3
	status = mxt_init_device(device, MAXTOUCH_TWI_INTERFACE,
  402210:	2302      	movs	r3, #2
  402212:	4632      	mov	r2, r6
  402214:	4629      	mov	r1, r5
  402216:	a81c      	add	r0, sp, #112	; 0x70
  402218:	4d54      	ldr	r5, [pc, #336]	; (40236c <main+0x1f0>)
  40221a:	47a8      	blx	r5
	mxt_write_config_reg(device, mxt_get_object_address(device,
  40221c:	4622      	mov	r2, r4
  40221e:	2106      	movs	r1, #6
  402220:	a81c      	add	r0, sp, #112	; 0x70
  402222:	4d53      	ldr	r5, [pc, #332]	; (402370 <main+0x1f4>)
  402224:	47a8      	blx	r5
  402226:	2201      	movs	r2, #1
  402228:	4601      	mov	r1, r0
  40222a:	a81c      	add	r0, sp, #112	; 0x70
  40222c:	4e51      	ldr	r6, [pc, #324]	; (402374 <main+0x1f8>)
  40222e:	47b0      	blx	r6
	delay_ms(MXT_RESET_TIME);
  402230:	4851      	ldr	r0, [pc, #324]	; (402378 <main+0x1fc>)
  402232:	4b52      	ldr	r3, [pc, #328]	; (40237c <main+0x200>)
  402234:	4798      	blx	r3
	mxt_write_config_reg(device, mxt_get_object_address(device,
  402236:	4622      	mov	r2, r4
  402238:	2107      	movs	r1, #7
  40223a:	a81c      	add	r0, sp, #112	; 0x70
  40223c:	47a8      	blx	r5
  40223e:	2220      	movs	r2, #32
  402240:	4601      	mov	r1, r0
  402242:	a81c      	add	r0, sp, #112	; 0x70
  402244:	47b0      	blx	r6
	mxt_write_config_reg(device, mxt_get_object_address(device,
  402246:	4622      	mov	r2, r4
  402248:	2107      	movs	r1, #7
  40224a:	a81c      	add	r0, sp, #112	; 0x70
  40224c:	47a8      	blx	r5
  40224e:	1c41      	adds	r1, r0, #1
  402250:	2210      	movs	r2, #16
  402252:	b289      	uxth	r1, r1
  402254:	a81c      	add	r0, sp, #112	; 0x70
  402256:	47b0      	blx	r6
	mxt_write_config_reg(device, mxt_get_object_address(device,
  402258:	4622      	mov	r2, r4
  40225a:	2107      	movs	r1, #7
  40225c:	a81c      	add	r0, sp, #112	; 0x70
  40225e:	47a8      	blx	r5
  402260:	1c81      	adds	r1, r0, #2
  402262:	224b      	movs	r2, #75	; 0x4b
  402264:	b289      	uxth	r1, r1
  402266:	a81c      	add	r0, sp, #112	; 0x70
  402268:	47b0      	blx	r6
	mxt_write_config_reg(device, mxt_get_object_address(device,
  40226a:	4622      	mov	r2, r4
  40226c:	2107      	movs	r1, #7
  40226e:	a81c      	add	r0, sp, #112	; 0x70
  402270:	47a8      	blx	r5
  402272:	1cc1      	adds	r1, r0, #3
  402274:	2284      	movs	r2, #132	; 0x84
  402276:	b289      	uxth	r1, r1
  402278:	a81c      	add	r0, sp, #112	; 0x70
  40227a:	47b0      	blx	r6
	mxt_write_config_object(device, mxt_get_object_address(device,
  40227c:	4622      	mov	r2, r4
  40227e:	2108      	movs	r1, #8
  402280:	a81c      	add	r0, sp, #112	; 0x70
  402282:	47a8      	blx	r5
  402284:	aa04      	add	r2, sp, #16
  402286:	4601      	mov	r1, r0
  402288:	a81c      	add	r0, sp, #112	; 0x70
  40228a:	4f3d      	ldr	r7, [pc, #244]	; (402380 <main+0x204>)
  40228c:	47b8      	blx	r7
	mxt_write_config_object(device, mxt_get_object_address(device,
  40228e:	4622      	mov	r2, r4
  402290:	2109      	movs	r1, #9
  402292:	a81c      	add	r0, sp, #112	; 0x70
  402294:	47a8      	blx	r5
  402296:	aa13      	add	r2, sp, #76	; 0x4c
  402298:	4601      	mov	r1, r0
  40229a:	a81c      	add	r0, sp, #112	; 0x70
  40229c:	47b8      	blx	r7
	mxt_write_config_object(device, mxt_get_object_address(device,
  40229e:	4622      	mov	r2, r4
  4022a0:	212e      	movs	r1, #46	; 0x2e
  4022a2:	a81c      	add	r0, sp, #112	; 0x70
  4022a4:	47a8      	blx	r5
  4022a6:	aa01      	add	r2, sp, #4
  4022a8:	4601      	mov	r1, r0
  4022aa:	a81c      	add	r0, sp, #112	; 0x70
  4022ac:	47b8      	blx	r7
	mxt_write_config_object(device, mxt_get_object_address(device,
  4022ae:	4622      	mov	r2, r4
  4022b0:	2138      	movs	r1, #56	; 0x38
  4022b2:	a81c      	add	r0, sp, #112	; 0x70
  4022b4:	47a8      	blx	r5
  4022b6:	aa0a      	add	r2, sp, #40	; 0x28
  4022b8:	4601      	mov	r1, r0
  4022ba:	a81c      	add	r0, sp, #112	; 0x70
  4022bc:	47b8      	blx	r7
	mxt_write_config_reg(device, mxt_get_object_address(device,
  4022be:	4622      	mov	r2, r4
  4022c0:	2106      	movs	r1, #6
  4022c2:	a81c      	add	r0, sp, #112	; 0x70
  4022c4:	47a8      	blx	r5
  4022c6:	1c81      	adds	r1, r0, #2
  4022c8:	2201      	movs	r2, #1
  4022ca:	b289      	uxth	r1, r1
  4022cc:	a81c      	add	r0, sp, #112	; 0x70
  4022ce:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4022d0:	4d2c      	ldr	r5, [pc, #176]	; (402384 <main+0x208>)
  4022d2:	4b2d      	ldr	r3, [pc, #180]	; (402388 <main+0x20c>)
  4022d4:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4022d6:	4a2d      	ldr	r2, [pc, #180]	; (40238c <main+0x210>)
  4022d8:	4b2d      	ldr	r3, [pc, #180]	; (402390 <main+0x214>)
  4022da:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4022dc:	4a2d      	ldr	r2, [pc, #180]	; (402394 <main+0x218>)
  4022de:	4b2e      	ldr	r3, [pc, #184]	; (402398 <main+0x21c>)
  4022e0:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  4022e2:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  4022e6:	9313      	str	r3, [sp, #76]	; 0x4c
	usart_settings.char_length = opt->charlength;
  4022e8:	23c0      	movs	r3, #192	; 0xc0
  4022ea:	9314      	str	r3, [sp, #80]	; 0x50
	usart_settings.parity_type = opt->paritytype;
  4022ec:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4022f0:	9315      	str	r3, [sp, #84]	; 0x54
	usart_settings.stop_bits= opt->stopbits;
  4022f2:	9416      	str	r4, [sp, #88]	; 0x58
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  4022f4:	9417      	str	r4, [sp, #92]	; 0x5c
  4022f6:	200e      	movs	r0, #14
  4022f8:	47c8      	blx	r9
		usart_init_rs232(p_usart, &usart_settings,
  4022fa:	4642      	mov	r2, r8
  4022fc:	a913      	add	r1, sp, #76	; 0x4c
  4022fe:	4628      	mov	r0, r5
  402300:	4b26      	ldr	r3, [pc, #152]	; (40239c <main+0x220>)
  402302:	4798      	blx	r3
		usart_enable_tx(p_usart);
  402304:	4628      	mov	r0, r5
  402306:	4b26      	ldr	r3, [pc, #152]	; (4023a0 <main+0x224>)
  402308:	4798      	blx	r3
		usart_enable_rx(p_usart);
  40230a:	4628      	mov	r0, r5
  40230c:	4b25      	ldr	r3, [pc, #148]	; (4023a4 <main+0x228>)
  40230e:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  402310:	4e25      	ldr	r6, [pc, #148]	; (4023a8 <main+0x22c>)
  402312:	6833      	ldr	r3, [r6, #0]
  402314:	4621      	mov	r1, r4
  402316:	6898      	ldr	r0, [r3, #8]
  402318:	4d24      	ldr	r5, [pc, #144]	; (4023ac <main+0x230>)
  40231a:	47a8      	blx	r5
	setbuf(stdin, NULL);
  40231c:	6833      	ldr	r3, [r6, #0]
  40231e:	4621      	mov	r1, r4
  402320:	6858      	ldr	r0, [r3, #4]
  402322:	47a8      	blx	r5
	mxt_init(&device);
	
	/* Initialize stdio on USART */
	stdio_serial_init(USART_SERIAL_EXAMPLE, &usart_serial_options);

	printf("\n\rmaXTouch data USART transmitter\n\r");
  402324:	4822      	ldr	r0, [pc, #136]	; (4023b0 <main+0x234>)
  402326:	4b23      	ldr	r3, [pc, #140]	; (4023b4 <main+0x238>)
  402328:	4798      	blx	r3
		

	while (true) {
		/* Check for any pending messages and run message handler if any
		 * message is found in the queue */
		if (mxt_is_message_pending(&device)) {
  40232a:	4c23      	ldr	r4, [pc, #140]	; (4023b8 <main+0x23c>)
			mxt_handler(&device);
  40232c:	4d23      	ldr	r5, [pc, #140]	; (4023bc <main+0x240>)
		if (mxt_is_message_pending(&device)) {
  40232e:	a81c      	add	r0, sp, #112	; 0x70
  402330:	47a0      	blx	r4
  402332:	2800      	cmp	r0, #0
  402334:	d0fb      	beq.n	40232e <main+0x1b2>
			mxt_handler(&device);
  402336:	a81c      	add	r0, sp, #112	; 0x70
  402338:	47a8      	blx	r5
  40233a:	e7f8      	b.n	40232e <main+0x1b2>
  40233c:	0040064d 	.word	0x0040064d
  402340:	004009b5 	.word	0x004009b5
  402344:	20400e54 	.word	0x20400e54
  402348:	00fcfcfc 	.word	0x00fcfcfc
  40234c:	00400f21 	.word	0x00400f21
  402350:	00401fcd 	.word	0x00401fcd
  402354:	00401ff5 	.word	0x00401ff5
  402358:	00402029 	.word	0x00402029
  40235c:	004088fc 	.word	0x004088fc
  402360:	00061a80 	.word	0x00061a80
  402364:	40018000 	.word	0x40018000
  402368:	004018b5 	.word	0x004018b5
  40236c:	004001d5 	.word	0x004001d5
  402370:	0040046d 	.word	0x0040046d
  402374:	00400525 	.word	0x00400525
  402378:	003228d8 	.word	0x003228d8
  40237c:	20400001 	.word	0x20400001
  402380:	004004ad 	.word	0x004004ad
  402384:	40028000 	.word	0x40028000
  402388:	20400e50 	.word	0x20400e50
  40238c:	00401ef9 	.word	0x00401ef9
  402390:	20400e4c 	.word	0x20400e4c
  402394:	00401e1d 	.word	0x00401e1d
  402398:	20400e48 	.word	0x20400e48
  40239c:	00401add 	.word	0x00401add
  4023a0:	00401b31 	.word	0x00401b31
  4023a4:	00401b37 	.word	0x00401b37
  4023a8:	20400014 	.word	0x20400014
  4023ac:	00402a89 	.word	0x00402a89
  4023b0:	0040895c 	.word	0x0040895c
  4023b4:	00402419 	.word	0x00402419
  4023b8:	0040056d 	.word	0x0040056d
  4023bc:	004020b9 	.word	0x004020b9
  4023c0:	08f0d180 	.word	0x08f0d180
  4023c4:	00401669 	.word	0x00401669

004023c8 <__libc_init_array>:
  4023c8:	b570      	push	{r4, r5, r6, lr}
  4023ca:	4e0f      	ldr	r6, [pc, #60]	; (402408 <__libc_init_array+0x40>)
  4023cc:	4d0f      	ldr	r5, [pc, #60]	; (40240c <__libc_init_array+0x44>)
  4023ce:	1b76      	subs	r6, r6, r5
  4023d0:	10b6      	asrs	r6, r6, #2
  4023d2:	bf18      	it	ne
  4023d4:	2400      	movne	r4, #0
  4023d6:	d005      	beq.n	4023e4 <__libc_init_array+0x1c>
  4023d8:	3401      	adds	r4, #1
  4023da:	f855 3b04 	ldr.w	r3, [r5], #4
  4023de:	4798      	blx	r3
  4023e0:	42a6      	cmp	r6, r4
  4023e2:	d1f9      	bne.n	4023d8 <__libc_init_array+0x10>
  4023e4:	4e0a      	ldr	r6, [pc, #40]	; (402410 <__libc_init_array+0x48>)
  4023e6:	4d0b      	ldr	r5, [pc, #44]	; (402414 <__libc_init_array+0x4c>)
  4023e8:	1b76      	subs	r6, r6, r5
  4023ea:	f006 fc39 	bl	408c60 <_init>
  4023ee:	10b6      	asrs	r6, r6, #2
  4023f0:	bf18      	it	ne
  4023f2:	2400      	movne	r4, #0
  4023f4:	d006      	beq.n	402404 <__libc_init_array+0x3c>
  4023f6:	3401      	adds	r4, #1
  4023f8:	f855 3b04 	ldr.w	r3, [r5], #4
  4023fc:	4798      	blx	r3
  4023fe:	42a6      	cmp	r6, r4
  402400:	d1f9      	bne.n	4023f6 <__libc_init_array+0x2e>
  402402:	bd70      	pop	{r4, r5, r6, pc}
  402404:	bd70      	pop	{r4, r5, r6, pc}
  402406:	bf00      	nop
  402408:	00408c6c 	.word	0x00408c6c
  40240c:	00408c6c 	.word	0x00408c6c
  402410:	00408c74 	.word	0x00408c74
  402414:	00408c6c 	.word	0x00408c6c

00402418 <iprintf>:
  402418:	b40f      	push	{r0, r1, r2, r3}
  40241a:	b500      	push	{lr}
  40241c:	4907      	ldr	r1, [pc, #28]	; (40243c <iprintf+0x24>)
  40241e:	b083      	sub	sp, #12
  402420:	ab04      	add	r3, sp, #16
  402422:	6808      	ldr	r0, [r1, #0]
  402424:	f853 2b04 	ldr.w	r2, [r3], #4
  402428:	6881      	ldr	r1, [r0, #8]
  40242a:	9301      	str	r3, [sp, #4]
  40242c:	f001 ff84 	bl	404338 <_vfiprintf_r>
  402430:	b003      	add	sp, #12
  402432:	f85d eb04 	ldr.w	lr, [sp], #4
  402436:	b004      	add	sp, #16
  402438:	4770      	bx	lr
  40243a:	bf00      	nop
  40243c:	20400014 	.word	0x20400014

00402440 <malloc>:
  402440:	4b02      	ldr	r3, [pc, #8]	; (40244c <malloc+0xc>)
  402442:	4601      	mov	r1, r0
  402444:	6818      	ldr	r0, [r3, #0]
  402446:	f000 b803 	b.w	402450 <_malloc_r>
  40244a:	bf00      	nop
  40244c:	20400014 	.word	0x20400014

00402450 <_malloc_r>:
  402450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402454:	f101 060b 	add.w	r6, r1, #11
  402458:	2e16      	cmp	r6, #22
  40245a:	b083      	sub	sp, #12
  40245c:	4605      	mov	r5, r0
  40245e:	f240 809e 	bls.w	40259e <_malloc_r+0x14e>
  402462:	f036 0607 	bics.w	r6, r6, #7
  402466:	f100 80bd 	bmi.w	4025e4 <_malloc_r+0x194>
  40246a:	42b1      	cmp	r1, r6
  40246c:	f200 80ba 	bhi.w	4025e4 <_malloc_r+0x194>
  402470:	f000 faec 	bl	402a4c <__malloc_lock>
  402474:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  402478:	f0c0 8293 	bcc.w	4029a2 <_malloc_r+0x552>
  40247c:	0a73      	lsrs	r3, r6, #9
  40247e:	f000 80b8 	beq.w	4025f2 <_malloc_r+0x1a2>
  402482:	2b04      	cmp	r3, #4
  402484:	f200 8179 	bhi.w	40277a <_malloc_r+0x32a>
  402488:	09b3      	lsrs	r3, r6, #6
  40248a:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40248e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  402492:	00c3      	lsls	r3, r0, #3
  402494:	4fbf      	ldr	r7, [pc, #764]	; (402794 <_malloc_r+0x344>)
  402496:	443b      	add	r3, r7
  402498:	f1a3 0108 	sub.w	r1, r3, #8
  40249c:	685c      	ldr	r4, [r3, #4]
  40249e:	42a1      	cmp	r1, r4
  4024a0:	d106      	bne.n	4024b0 <_malloc_r+0x60>
  4024a2:	e00c      	b.n	4024be <_malloc_r+0x6e>
  4024a4:	2a00      	cmp	r2, #0
  4024a6:	f280 80aa 	bge.w	4025fe <_malloc_r+0x1ae>
  4024aa:	68e4      	ldr	r4, [r4, #12]
  4024ac:	42a1      	cmp	r1, r4
  4024ae:	d006      	beq.n	4024be <_malloc_r+0x6e>
  4024b0:	6863      	ldr	r3, [r4, #4]
  4024b2:	f023 0303 	bic.w	r3, r3, #3
  4024b6:	1b9a      	subs	r2, r3, r6
  4024b8:	2a0f      	cmp	r2, #15
  4024ba:	ddf3      	ble.n	4024a4 <_malloc_r+0x54>
  4024bc:	4670      	mov	r0, lr
  4024be:	693c      	ldr	r4, [r7, #16]
  4024c0:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4027a8 <_malloc_r+0x358>
  4024c4:	4574      	cmp	r4, lr
  4024c6:	f000 81ab 	beq.w	402820 <_malloc_r+0x3d0>
  4024ca:	6863      	ldr	r3, [r4, #4]
  4024cc:	f023 0303 	bic.w	r3, r3, #3
  4024d0:	1b9a      	subs	r2, r3, r6
  4024d2:	2a0f      	cmp	r2, #15
  4024d4:	f300 8190 	bgt.w	4027f8 <_malloc_r+0x3a8>
  4024d8:	2a00      	cmp	r2, #0
  4024da:	f8c7 e014 	str.w	lr, [r7, #20]
  4024de:	f8c7 e010 	str.w	lr, [r7, #16]
  4024e2:	f280 809d 	bge.w	402620 <_malloc_r+0x1d0>
  4024e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4024ea:	f080 8161 	bcs.w	4027b0 <_malloc_r+0x360>
  4024ee:	08db      	lsrs	r3, r3, #3
  4024f0:	f103 0c01 	add.w	ip, r3, #1
  4024f4:	1099      	asrs	r1, r3, #2
  4024f6:	687a      	ldr	r2, [r7, #4]
  4024f8:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4024fc:	f8c4 8008 	str.w	r8, [r4, #8]
  402500:	2301      	movs	r3, #1
  402502:	408b      	lsls	r3, r1
  402504:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  402508:	4313      	orrs	r3, r2
  40250a:	3908      	subs	r1, #8
  40250c:	60e1      	str	r1, [r4, #12]
  40250e:	607b      	str	r3, [r7, #4]
  402510:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  402514:	f8c8 400c 	str.w	r4, [r8, #12]
  402518:	1082      	asrs	r2, r0, #2
  40251a:	2401      	movs	r4, #1
  40251c:	4094      	lsls	r4, r2
  40251e:	429c      	cmp	r4, r3
  402520:	f200 808b 	bhi.w	40263a <_malloc_r+0x1ea>
  402524:	421c      	tst	r4, r3
  402526:	d106      	bne.n	402536 <_malloc_r+0xe6>
  402528:	f020 0003 	bic.w	r0, r0, #3
  40252c:	0064      	lsls	r4, r4, #1
  40252e:	421c      	tst	r4, r3
  402530:	f100 0004 	add.w	r0, r0, #4
  402534:	d0fa      	beq.n	40252c <_malloc_r+0xdc>
  402536:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40253a:	46cc      	mov	ip, r9
  40253c:	4680      	mov	r8, r0
  40253e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  402542:	459c      	cmp	ip, r3
  402544:	d107      	bne.n	402556 <_malloc_r+0x106>
  402546:	e16d      	b.n	402824 <_malloc_r+0x3d4>
  402548:	2a00      	cmp	r2, #0
  40254a:	f280 817b 	bge.w	402844 <_malloc_r+0x3f4>
  40254e:	68db      	ldr	r3, [r3, #12]
  402550:	459c      	cmp	ip, r3
  402552:	f000 8167 	beq.w	402824 <_malloc_r+0x3d4>
  402556:	6859      	ldr	r1, [r3, #4]
  402558:	f021 0103 	bic.w	r1, r1, #3
  40255c:	1b8a      	subs	r2, r1, r6
  40255e:	2a0f      	cmp	r2, #15
  402560:	ddf2      	ble.n	402548 <_malloc_r+0xf8>
  402562:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  402566:	f8d3 8008 	ldr.w	r8, [r3, #8]
  40256a:	9300      	str	r3, [sp, #0]
  40256c:	199c      	adds	r4, r3, r6
  40256e:	4628      	mov	r0, r5
  402570:	f046 0601 	orr.w	r6, r6, #1
  402574:	f042 0501 	orr.w	r5, r2, #1
  402578:	605e      	str	r6, [r3, #4]
  40257a:	f8c8 c00c 	str.w	ip, [r8, #12]
  40257e:	f8cc 8008 	str.w	r8, [ip, #8]
  402582:	617c      	str	r4, [r7, #20]
  402584:	613c      	str	r4, [r7, #16]
  402586:	f8c4 e00c 	str.w	lr, [r4, #12]
  40258a:	f8c4 e008 	str.w	lr, [r4, #8]
  40258e:	6065      	str	r5, [r4, #4]
  402590:	505a      	str	r2, [r3, r1]
  402592:	f000 fa61 	bl	402a58 <__malloc_unlock>
  402596:	9b00      	ldr	r3, [sp, #0]
  402598:	f103 0408 	add.w	r4, r3, #8
  40259c:	e01e      	b.n	4025dc <_malloc_r+0x18c>
  40259e:	2910      	cmp	r1, #16
  4025a0:	d820      	bhi.n	4025e4 <_malloc_r+0x194>
  4025a2:	f000 fa53 	bl	402a4c <__malloc_lock>
  4025a6:	2610      	movs	r6, #16
  4025a8:	2318      	movs	r3, #24
  4025aa:	2002      	movs	r0, #2
  4025ac:	4f79      	ldr	r7, [pc, #484]	; (402794 <_malloc_r+0x344>)
  4025ae:	443b      	add	r3, r7
  4025b0:	f1a3 0208 	sub.w	r2, r3, #8
  4025b4:	685c      	ldr	r4, [r3, #4]
  4025b6:	4294      	cmp	r4, r2
  4025b8:	f000 813d 	beq.w	402836 <_malloc_r+0x3e6>
  4025bc:	6863      	ldr	r3, [r4, #4]
  4025be:	68e1      	ldr	r1, [r4, #12]
  4025c0:	68a6      	ldr	r6, [r4, #8]
  4025c2:	f023 0303 	bic.w	r3, r3, #3
  4025c6:	4423      	add	r3, r4
  4025c8:	4628      	mov	r0, r5
  4025ca:	685a      	ldr	r2, [r3, #4]
  4025cc:	60f1      	str	r1, [r6, #12]
  4025ce:	f042 0201 	orr.w	r2, r2, #1
  4025d2:	608e      	str	r6, [r1, #8]
  4025d4:	605a      	str	r2, [r3, #4]
  4025d6:	f000 fa3f 	bl	402a58 <__malloc_unlock>
  4025da:	3408      	adds	r4, #8
  4025dc:	4620      	mov	r0, r4
  4025de:	b003      	add	sp, #12
  4025e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025e4:	2400      	movs	r4, #0
  4025e6:	230c      	movs	r3, #12
  4025e8:	4620      	mov	r0, r4
  4025ea:	602b      	str	r3, [r5, #0]
  4025ec:	b003      	add	sp, #12
  4025ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025f2:	2040      	movs	r0, #64	; 0x40
  4025f4:	f44f 7300 	mov.w	r3, #512	; 0x200
  4025f8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4025fc:	e74a      	b.n	402494 <_malloc_r+0x44>
  4025fe:	4423      	add	r3, r4
  402600:	68e1      	ldr	r1, [r4, #12]
  402602:	685a      	ldr	r2, [r3, #4]
  402604:	68a6      	ldr	r6, [r4, #8]
  402606:	f042 0201 	orr.w	r2, r2, #1
  40260a:	60f1      	str	r1, [r6, #12]
  40260c:	4628      	mov	r0, r5
  40260e:	608e      	str	r6, [r1, #8]
  402610:	605a      	str	r2, [r3, #4]
  402612:	f000 fa21 	bl	402a58 <__malloc_unlock>
  402616:	3408      	adds	r4, #8
  402618:	4620      	mov	r0, r4
  40261a:	b003      	add	sp, #12
  40261c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402620:	4423      	add	r3, r4
  402622:	4628      	mov	r0, r5
  402624:	685a      	ldr	r2, [r3, #4]
  402626:	f042 0201 	orr.w	r2, r2, #1
  40262a:	605a      	str	r2, [r3, #4]
  40262c:	f000 fa14 	bl	402a58 <__malloc_unlock>
  402630:	3408      	adds	r4, #8
  402632:	4620      	mov	r0, r4
  402634:	b003      	add	sp, #12
  402636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40263a:	68bc      	ldr	r4, [r7, #8]
  40263c:	6863      	ldr	r3, [r4, #4]
  40263e:	f023 0803 	bic.w	r8, r3, #3
  402642:	45b0      	cmp	r8, r6
  402644:	d304      	bcc.n	402650 <_malloc_r+0x200>
  402646:	eba8 0306 	sub.w	r3, r8, r6
  40264a:	2b0f      	cmp	r3, #15
  40264c:	f300 8085 	bgt.w	40275a <_malloc_r+0x30a>
  402650:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4027ac <_malloc_r+0x35c>
  402654:	4b50      	ldr	r3, [pc, #320]	; (402798 <_malloc_r+0x348>)
  402656:	f8d9 2000 	ldr.w	r2, [r9]
  40265a:	681b      	ldr	r3, [r3, #0]
  40265c:	3201      	adds	r2, #1
  40265e:	4433      	add	r3, r6
  402660:	eb04 0a08 	add.w	sl, r4, r8
  402664:	f000 8155 	beq.w	402912 <_malloc_r+0x4c2>
  402668:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  40266c:	330f      	adds	r3, #15
  40266e:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  402672:	f02b 0b0f 	bic.w	fp, fp, #15
  402676:	4659      	mov	r1, fp
  402678:	4628      	mov	r0, r5
  40267a:	f000 f9f3 	bl	402a64 <_sbrk_r>
  40267e:	1c41      	adds	r1, r0, #1
  402680:	4602      	mov	r2, r0
  402682:	f000 80fc 	beq.w	40287e <_malloc_r+0x42e>
  402686:	4582      	cmp	sl, r0
  402688:	f200 80f7 	bhi.w	40287a <_malloc_r+0x42a>
  40268c:	4b43      	ldr	r3, [pc, #268]	; (40279c <_malloc_r+0x34c>)
  40268e:	6819      	ldr	r1, [r3, #0]
  402690:	4459      	add	r1, fp
  402692:	6019      	str	r1, [r3, #0]
  402694:	f000 814d 	beq.w	402932 <_malloc_r+0x4e2>
  402698:	f8d9 0000 	ldr.w	r0, [r9]
  40269c:	3001      	adds	r0, #1
  40269e:	bf1b      	ittet	ne
  4026a0:	eba2 0a0a 	subne.w	sl, r2, sl
  4026a4:	4451      	addne	r1, sl
  4026a6:	f8c9 2000 	streq.w	r2, [r9]
  4026aa:	6019      	strne	r1, [r3, #0]
  4026ac:	f012 0107 	ands.w	r1, r2, #7
  4026b0:	f000 8115 	beq.w	4028de <_malloc_r+0x48e>
  4026b4:	f1c1 0008 	rsb	r0, r1, #8
  4026b8:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4026bc:	4402      	add	r2, r0
  4026be:	3108      	adds	r1, #8
  4026c0:	eb02 090b 	add.w	r9, r2, fp
  4026c4:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4026c8:	eba1 0909 	sub.w	r9, r1, r9
  4026cc:	4649      	mov	r1, r9
  4026ce:	4628      	mov	r0, r5
  4026d0:	9301      	str	r3, [sp, #4]
  4026d2:	9200      	str	r2, [sp, #0]
  4026d4:	f000 f9c6 	bl	402a64 <_sbrk_r>
  4026d8:	1c43      	adds	r3, r0, #1
  4026da:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4026de:	f000 8143 	beq.w	402968 <_malloc_r+0x518>
  4026e2:	1a80      	subs	r0, r0, r2
  4026e4:	4448      	add	r0, r9
  4026e6:	f040 0001 	orr.w	r0, r0, #1
  4026ea:	6819      	ldr	r1, [r3, #0]
  4026ec:	60ba      	str	r2, [r7, #8]
  4026ee:	4449      	add	r1, r9
  4026f0:	42bc      	cmp	r4, r7
  4026f2:	6050      	str	r0, [r2, #4]
  4026f4:	6019      	str	r1, [r3, #0]
  4026f6:	d017      	beq.n	402728 <_malloc_r+0x2d8>
  4026f8:	f1b8 0f0f 	cmp.w	r8, #15
  4026fc:	f240 80fb 	bls.w	4028f6 <_malloc_r+0x4a6>
  402700:	6860      	ldr	r0, [r4, #4]
  402702:	f1a8 020c 	sub.w	r2, r8, #12
  402706:	f022 0207 	bic.w	r2, r2, #7
  40270a:	eb04 0e02 	add.w	lr, r4, r2
  40270e:	f000 0001 	and.w	r0, r0, #1
  402712:	f04f 0c05 	mov.w	ip, #5
  402716:	4310      	orrs	r0, r2
  402718:	2a0f      	cmp	r2, #15
  40271a:	6060      	str	r0, [r4, #4]
  40271c:	f8ce c004 	str.w	ip, [lr, #4]
  402720:	f8ce c008 	str.w	ip, [lr, #8]
  402724:	f200 8117 	bhi.w	402956 <_malloc_r+0x506>
  402728:	4b1d      	ldr	r3, [pc, #116]	; (4027a0 <_malloc_r+0x350>)
  40272a:	68bc      	ldr	r4, [r7, #8]
  40272c:	681a      	ldr	r2, [r3, #0]
  40272e:	4291      	cmp	r1, r2
  402730:	bf88      	it	hi
  402732:	6019      	strhi	r1, [r3, #0]
  402734:	4b1b      	ldr	r3, [pc, #108]	; (4027a4 <_malloc_r+0x354>)
  402736:	681a      	ldr	r2, [r3, #0]
  402738:	4291      	cmp	r1, r2
  40273a:	6862      	ldr	r2, [r4, #4]
  40273c:	bf88      	it	hi
  40273e:	6019      	strhi	r1, [r3, #0]
  402740:	f022 0203 	bic.w	r2, r2, #3
  402744:	4296      	cmp	r6, r2
  402746:	eba2 0306 	sub.w	r3, r2, r6
  40274a:	d801      	bhi.n	402750 <_malloc_r+0x300>
  40274c:	2b0f      	cmp	r3, #15
  40274e:	dc04      	bgt.n	40275a <_malloc_r+0x30a>
  402750:	4628      	mov	r0, r5
  402752:	f000 f981 	bl	402a58 <__malloc_unlock>
  402756:	2400      	movs	r4, #0
  402758:	e740      	b.n	4025dc <_malloc_r+0x18c>
  40275a:	19a2      	adds	r2, r4, r6
  40275c:	f043 0301 	orr.w	r3, r3, #1
  402760:	f046 0601 	orr.w	r6, r6, #1
  402764:	6066      	str	r6, [r4, #4]
  402766:	4628      	mov	r0, r5
  402768:	60ba      	str	r2, [r7, #8]
  40276a:	6053      	str	r3, [r2, #4]
  40276c:	f000 f974 	bl	402a58 <__malloc_unlock>
  402770:	3408      	adds	r4, #8
  402772:	4620      	mov	r0, r4
  402774:	b003      	add	sp, #12
  402776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40277a:	2b14      	cmp	r3, #20
  40277c:	d971      	bls.n	402862 <_malloc_r+0x412>
  40277e:	2b54      	cmp	r3, #84	; 0x54
  402780:	f200 80a3 	bhi.w	4028ca <_malloc_r+0x47a>
  402784:	0b33      	lsrs	r3, r6, #12
  402786:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40278a:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40278e:	00c3      	lsls	r3, r0, #3
  402790:	e680      	b.n	402494 <_malloc_r+0x44>
  402792:	bf00      	nop
  402794:	20400440 	.word	0x20400440
  402798:	20400e44 	.word	0x20400e44
  40279c:	20400e14 	.word	0x20400e14
  4027a0:	20400e3c 	.word	0x20400e3c
  4027a4:	20400e40 	.word	0x20400e40
  4027a8:	20400448 	.word	0x20400448
  4027ac:	20400848 	.word	0x20400848
  4027b0:	0a5a      	lsrs	r2, r3, #9
  4027b2:	2a04      	cmp	r2, #4
  4027b4:	d95b      	bls.n	40286e <_malloc_r+0x41e>
  4027b6:	2a14      	cmp	r2, #20
  4027b8:	f200 80ae 	bhi.w	402918 <_malloc_r+0x4c8>
  4027bc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4027c0:	00c9      	lsls	r1, r1, #3
  4027c2:	325b      	adds	r2, #91	; 0x5b
  4027c4:	eb07 0c01 	add.w	ip, r7, r1
  4027c8:	5879      	ldr	r1, [r7, r1]
  4027ca:	f1ac 0c08 	sub.w	ip, ip, #8
  4027ce:	458c      	cmp	ip, r1
  4027d0:	f000 8088 	beq.w	4028e4 <_malloc_r+0x494>
  4027d4:	684a      	ldr	r2, [r1, #4]
  4027d6:	f022 0203 	bic.w	r2, r2, #3
  4027da:	4293      	cmp	r3, r2
  4027dc:	d273      	bcs.n	4028c6 <_malloc_r+0x476>
  4027de:	6889      	ldr	r1, [r1, #8]
  4027e0:	458c      	cmp	ip, r1
  4027e2:	d1f7      	bne.n	4027d4 <_malloc_r+0x384>
  4027e4:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4027e8:	687b      	ldr	r3, [r7, #4]
  4027ea:	60e2      	str	r2, [r4, #12]
  4027ec:	f8c4 c008 	str.w	ip, [r4, #8]
  4027f0:	6094      	str	r4, [r2, #8]
  4027f2:	f8cc 400c 	str.w	r4, [ip, #12]
  4027f6:	e68f      	b.n	402518 <_malloc_r+0xc8>
  4027f8:	19a1      	adds	r1, r4, r6
  4027fa:	f046 0c01 	orr.w	ip, r6, #1
  4027fe:	f042 0601 	orr.w	r6, r2, #1
  402802:	f8c4 c004 	str.w	ip, [r4, #4]
  402806:	4628      	mov	r0, r5
  402808:	6179      	str	r1, [r7, #20]
  40280a:	6139      	str	r1, [r7, #16]
  40280c:	f8c1 e00c 	str.w	lr, [r1, #12]
  402810:	f8c1 e008 	str.w	lr, [r1, #8]
  402814:	604e      	str	r6, [r1, #4]
  402816:	50e2      	str	r2, [r4, r3]
  402818:	f000 f91e 	bl	402a58 <__malloc_unlock>
  40281c:	3408      	adds	r4, #8
  40281e:	e6dd      	b.n	4025dc <_malloc_r+0x18c>
  402820:	687b      	ldr	r3, [r7, #4]
  402822:	e679      	b.n	402518 <_malloc_r+0xc8>
  402824:	f108 0801 	add.w	r8, r8, #1
  402828:	f018 0f03 	tst.w	r8, #3
  40282c:	f10c 0c08 	add.w	ip, ip, #8
  402830:	f47f ae85 	bne.w	40253e <_malloc_r+0xee>
  402834:	e02d      	b.n	402892 <_malloc_r+0x442>
  402836:	68dc      	ldr	r4, [r3, #12]
  402838:	42a3      	cmp	r3, r4
  40283a:	bf08      	it	eq
  40283c:	3002      	addeq	r0, #2
  40283e:	f43f ae3e 	beq.w	4024be <_malloc_r+0x6e>
  402842:	e6bb      	b.n	4025bc <_malloc_r+0x16c>
  402844:	4419      	add	r1, r3
  402846:	461c      	mov	r4, r3
  402848:	684a      	ldr	r2, [r1, #4]
  40284a:	68db      	ldr	r3, [r3, #12]
  40284c:	f854 6f08 	ldr.w	r6, [r4, #8]!
  402850:	f042 0201 	orr.w	r2, r2, #1
  402854:	604a      	str	r2, [r1, #4]
  402856:	4628      	mov	r0, r5
  402858:	60f3      	str	r3, [r6, #12]
  40285a:	609e      	str	r6, [r3, #8]
  40285c:	f000 f8fc 	bl	402a58 <__malloc_unlock>
  402860:	e6bc      	b.n	4025dc <_malloc_r+0x18c>
  402862:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  402866:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40286a:	00c3      	lsls	r3, r0, #3
  40286c:	e612      	b.n	402494 <_malloc_r+0x44>
  40286e:	099a      	lsrs	r2, r3, #6
  402870:	f102 0139 	add.w	r1, r2, #57	; 0x39
  402874:	00c9      	lsls	r1, r1, #3
  402876:	3238      	adds	r2, #56	; 0x38
  402878:	e7a4      	b.n	4027c4 <_malloc_r+0x374>
  40287a:	42bc      	cmp	r4, r7
  40287c:	d054      	beq.n	402928 <_malloc_r+0x4d8>
  40287e:	68bc      	ldr	r4, [r7, #8]
  402880:	6862      	ldr	r2, [r4, #4]
  402882:	f022 0203 	bic.w	r2, r2, #3
  402886:	e75d      	b.n	402744 <_malloc_r+0x2f4>
  402888:	f859 3908 	ldr.w	r3, [r9], #-8
  40288c:	4599      	cmp	r9, r3
  40288e:	f040 8086 	bne.w	40299e <_malloc_r+0x54e>
  402892:	f010 0f03 	tst.w	r0, #3
  402896:	f100 30ff 	add.w	r0, r0, #4294967295
  40289a:	d1f5      	bne.n	402888 <_malloc_r+0x438>
  40289c:	687b      	ldr	r3, [r7, #4]
  40289e:	ea23 0304 	bic.w	r3, r3, r4
  4028a2:	607b      	str	r3, [r7, #4]
  4028a4:	0064      	lsls	r4, r4, #1
  4028a6:	429c      	cmp	r4, r3
  4028a8:	f63f aec7 	bhi.w	40263a <_malloc_r+0x1ea>
  4028ac:	2c00      	cmp	r4, #0
  4028ae:	f43f aec4 	beq.w	40263a <_malloc_r+0x1ea>
  4028b2:	421c      	tst	r4, r3
  4028b4:	4640      	mov	r0, r8
  4028b6:	f47f ae3e 	bne.w	402536 <_malloc_r+0xe6>
  4028ba:	0064      	lsls	r4, r4, #1
  4028bc:	421c      	tst	r4, r3
  4028be:	f100 0004 	add.w	r0, r0, #4
  4028c2:	d0fa      	beq.n	4028ba <_malloc_r+0x46a>
  4028c4:	e637      	b.n	402536 <_malloc_r+0xe6>
  4028c6:	468c      	mov	ip, r1
  4028c8:	e78c      	b.n	4027e4 <_malloc_r+0x394>
  4028ca:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4028ce:	d815      	bhi.n	4028fc <_malloc_r+0x4ac>
  4028d0:	0bf3      	lsrs	r3, r6, #15
  4028d2:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4028d6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4028da:	00c3      	lsls	r3, r0, #3
  4028dc:	e5da      	b.n	402494 <_malloc_r+0x44>
  4028de:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4028e2:	e6ed      	b.n	4026c0 <_malloc_r+0x270>
  4028e4:	687b      	ldr	r3, [r7, #4]
  4028e6:	1092      	asrs	r2, r2, #2
  4028e8:	2101      	movs	r1, #1
  4028ea:	fa01 f202 	lsl.w	r2, r1, r2
  4028ee:	4313      	orrs	r3, r2
  4028f0:	607b      	str	r3, [r7, #4]
  4028f2:	4662      	mov	r2, ip
  4028f4:	e779      	b.n	4027ea <_malloc_r+0x39a>
  4028f6:	2301      	movs	r3, #1
  4028f8:	6053      	str	r3, [r2, #4]
  4028fa:	e729      	b.n	402750 <_malloc_r+0x300>
  4028fc:	f240 5254 	movw	r2, #1364	; 0x554
  402900:	4293      	cmp	r3, r2
  402902:	d822      	bhi.n	40294a <_malloc_r+0x4fa>
  402904:	0cb3      	lsrs	r3, r6, #18
  402906:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40290a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40290e:	00c3      	lsls	r3, r0, #3
  402910:	e5c0      	b.n	402494 <_malloc_r+0x44>
  402912:	f103 0b10 	add.w	fp, r3, #16
  402916:	e6ae      	b.n	402676 <_malloc_r+0x226>
  402918:	2a54      	cmp	r2, #84	; 0x54
  40291a:	d829      	bhi.n	402970 <_malloc_r+0x520>
  40291c:	0b1a      	lsrs	r2, r3, #12
  40291e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  402922:	00c9      	lsls	r1, r1, #3
  402924:	326e      	adds	r2, #110	; 0x6e
  402926:	e74d      	b.n	4027c4 <_malloc_r+0x374>
  402928:	4b20      	ldr	r3, [pc, #128]	; (4029ac <_malloc_r+0x55c>)
  40292a:	6819      	ldr	r1, [r3, #0]
  40292c:	4459      	add	r1, fp
  40292e:	6019      	str	r1, [r3, #0]
  402930:	e6b2      	b.n	402698 <_malloc_r+0x248>
  402932:	f3ca 000b 	ubfx	r0, sl, #0, #12
  402936:	2800      	cmp	r0, #0
  402938:	f47f aeae 	bne.w	402698 <_malloc_r+0x248>
  40293c:	eb08 030b 	add.w	r3, r8, fp
  402940:	68ba      	ldr	r2, [r7, #8]
  402942:	f043 0301 	orr.w	r3, r3, #1
  402946:	6053      	str	r3, [r2, #4]
  402948:	e6ee      	b.n	402728 <_malloc_r+0x2d8>
  40294a:	207f      	movs	r0, #127	; 0x7f
  40294c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  402950:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  402954:	e59e      	b.n	402494 <_malloc_r+0x44>
  402956:	f104 0108 	add.w	r1, r4, #8
  40295a:	4628      	mov	r0, r5
  40295c:	9300      	str	r3, [sp, #0]
  40295e:	f003 fdc7 	bl	4064f0 <_free_r>
  402962:	9b00      	ldr	r3, [sp, #0]
  402964:	6819      	ldr	r1, [r3, #0]
  402966:	e6df      	b.n	402728 <_malloc_r+0x2d8>
  402968:	2001      	movs	r0, #1
  40296a:	f04f 0900 	mov.w	r9, #0
  40296e:	e6bc      	b.n	4026ea <_malloc_r+0x29a>
  402970:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402974:	d805      	bhi.n	402982 <_malloc_r+0x532>
  402976:	0bda      	lsrs	r2, r3, #15
  402978:	f102 0178 	add.w	r1, r2, #120	; 0x78
  40297c:	00c9      	lsls	r1, r1, #3
  40297e:	3277      	adds	r2, #119	; 0x77
  402980:	e720      	b.n	4027c4 <_malloc_r+0x374>
  402982:	f240 5154 	movw	r1, #1364	; 0x554
  402986:	428a      	cmp	r2, r1
  402988:	d805      	bhi.n	402996 <_malloc_r+0x546>
  40298a:	0c9a      	lsrs	r2, r3, #18
  40298c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  402990:	00c9      	lsls	r1, r1, #3
  402992:	327c      	adds	r2, #124	; 0x7c
  402994:	e716      	b.n	4027c4 <_malloc_r+0x374>
  402996:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40299a:	227e      	movs	r2, #126	; 0x7e
  40299c:	e712      	b.n	4027c4 <_malloc_r+0x374>
  40299e:	687b      	ldr	r3, [r7, #4]
  4029a0:	e780      	b.n	4028a4 <_malloc_r+0x454>
  4029a2:	08f0      	lsrs	r0, r6, #3
  4029a4:	f106 0308 	add.w	r3, r6, #8
  4029a8:	e600      	b.n	4025ac <_malloc_r+0x15c>
  4029aa:	bf00      	nop
  4029ac:	20400e14 	.word	0x20400e14

004029b0 <memset>:
  4029b0:	b470      	push	{r4, r5, r6}
  4029b2:	0786      	lsls	r6, r0, #30
  4029b4:	d046      	beq.n	402a44 <memset+0x94>
  4029b6:	1e54      	subs	r4, r2, #1
  4029b8:	2a00      	cmp	r2, #0
  4029ba:	d041      	beq.n	402a40 <memset+0x90>
  4029bc:	b2ca      	uxtb	r2, r1
  4029be:	4603      	mov	r3, r0
  4029c0:	e002      	b.n	4029c8 <memset+0x18>
  4029c2:	f114 34ff 	adds.w	r4, r4, #4294967295
  4029c6:	d33b      	bcc.n	402a40 <memset+0x90>
  4029c8:	f803 2b01 	strb.w	r2, [r3], #1
  4029cc:	079d      	lsls	r5, r3, #30
  4029ce:	d1f8      	bne.n	4029c2 <memset+0x12>
  4029d0:	2c03      	cmp	r4, #3
  4029d2:	d92e      	bls.n	402a32 <memset+0x82>
  4029d4:	b2cd      	uxtb	r5, r1
  4029d6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4029da:	2c0f      	cmp	r4, #15
  4029dc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4029e0:	d919      	bls.n	402a16 <memset+0x66>
  4029e2:	f103 0210 	add.w	r2, r3, #16
  4029e6:	4626      	mov	r6, r4
  4029e8:	3e10      	subs	r6, #16
  4029ea:	2e0f      	cmp	r6, #15
  4029ec:	f842 5c10 	str.w	r5, [r2, #-16]
  4029f0:	f842 5c0c 	str.w	r5, [r2, #-12]
  4029f4:	f842 5c08 	str.w	r5, [r2, #-8]
  4029f8:	f842 5c04 	str.w	r5, [r2, #-4]
  4029fc:	f102 0210 	add.w	r2, r2, #16
  402a00:	d8f2      	bhi.n	4029e8 <memset+0x38>
  402a02:	f1a4 0210 	sub.w	r2, r4, #16
  402a06:	f022 020f 	bic.w	r2, r2, #15
  402a0a:	f004 040f 	and.w	r4, r4, #15
  402a0e:	3210      	adds	r2, #16
  402a10:	2c03      	cmp	r4, #3
  402a12:	4413      	add	r3, r2
  402a14:	d90d      	bls.n	402a32 <memset+0x82>
  402a16:	461e      	mov	r6, r3
  402a18:	4622      	mov	r2, r4
  402a1a:	3a04      	subs	r2, #4
  402a1c:	2a03      	cmp	r2, #3
  402a1e:	f846 5b04 	str.w	r5, [r6], #4
  402a22:	d8fa      	bhi.n	402a1a <memset+0x6a>
  402a24:	1f22      	subs	r2, r4, #4
  402a26:	f022 0203 	bic.w	r2, r2, #3
  402a2a:	3204      	adds	r2, #4
  402a2c:	4413      	add	r3, r2
  402a2e:	f004 0403 	and.w	r4, r4, #3
  402a32:	b12c      	cbz	r4, 402a40 <memset+0x90>
  402a34:	b2c9      	uxtb	r1, r1
  402a36:	441c      	add	r4, r3
  402a38:	f803 1b01 	strb.w	r1, [r3], #1
  402a3c:	429c      	cmp	r4, r3
  402a3e:	d1fb      	bne.n	402a38 <memset+0x88>
  402a40:	bc70      	pop	{r4, r5, r6}
  402a42:	4770      	bx	lr
  402a44:	4614      	mov	r4, r2
  402a46:	4603      	mov	r3, r0
  402a48:	e7c2      	b.n	4029d0 <memset+0x20>
  402a4a:	bf00      	nop

00402a4c <__malloc_lock>:
  402a4c:	4801      	ldr	r0, [pc, #4]	; (402a54 <__malloc_lock+0x8>)
  402a4e:	f003 bff7 	b.w	406a40 <__retarget_lock_acquire_recursive>
  402a52:	bf00      	nop
  402a54:	20400e74 	.word	0x20400e74

00402a58 <__malloc_unlock>:
  402a58:	4801      	ldr	r0, [pc, #4]	; (402a60 <__malloc_unlock+0x8>)
  402a5a:	f003 bff3 	b.w	406a44 <__retarget_lock_release_recursive>
  402a5e:	bf00      	nop
  402a60:	20400e74 	.word	0x20400e74

00402a64 <_sbrk_r>:
  402a64:	b538      	push	{r3, r4, r5, lr}
  402a66:	4c07      	ldr	r4, [pc, #28]	; (402a84 <_sbrk_r+0x20>)
  402a68:	2300      	movs	r3, #0
  402a6a:	4605      	mov	r5, r0
  402a6c:	4608      	mov	r0, r1
  402a6e:	6023      	str	r3, [r4, #0]
  402a70:	f7ff f9ac 	bl	401dcc <_sbrk>
  402a74:	1c43      	adds	r3, r0, #1
  402a76:	d000      	beq.n	402a7a <_sbrk_r+0x16>
  402a78:	bd38      	pop	{r3, r4, r5, pc}
  402a7a:	6823      	ldr	r3, [r4, #0]
  402a7c:	2b00      	cmp	r3, #0
  402a7e:	d0fb      	beq.n	402a78 <_sbrk_r+0x14>
  402a80:	602b      	str	r3, [r5, #0]
  402a82:	bd38      	pop	{r3, r4, r5, pc}
  402a84:	20400e88 	.word	0x20400e88

00402a88 <setbuf>:
  402a88:	2900      	cmp	r1, #0
  402a8a:	bf0c      	ite	eq
  402a8c:	2202      	moveq	r2, #2
  402a8e:	2200      	movne	r2, #0
  402a90:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402a94:	f000 b800 	b.w	402a98 <setvbuf>

00402a98 <setvbuf>:
  402a98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402a9c:	4c61      	ldr	r4, [pc, #388]	; (402c24 <setvbuf+0x18c>)
  402a9e:	6825      	ldr	r5, [r4, #0]
  402aa0:	b083      	sub	sp, #12
  402aa2:	4604      	mov	r4, r0
  402aa4:	460f      	mov	r7, r1
  402aa6:	4690      	mov	r8, r2
  402aa8:	461e      	mov	r6, r3
  402aaa:	b115      	cbz	r5, 402ab2 <setvbuf+0x1a>
  402aac:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402aae:	2b00      	cmp	r3, #0
  402ab0:	d064      	beq.n	402b7c <setvbuf+0xe4>
  402ab2:	f1b8 0f02 	cmp.w	r8, #2
  402ab6:	d006      	beq.n	402ac6 <setvbuf+0x2e>
  402ab8:	f1b8 0f01 	cmp.w	r8, #1
  402abc:	f200 809f 	bhi.w	402bfe <setvbuf+0x166>
  402ac0:	2e00      	cmp	r6, #0
  402ac2:	f2c0 809c 	blt.w	402bfe <setvbuf+0x166>
  402ac6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402ac8:	07d8      	lsls	r0, r3, #31
  402aca:	d534      	bpl.n	402b36 <setvbuf+0x9e>
  402acc:	4621      	mov	r1, r4
  402ace:	4628      	mov	r0, r5
  402ad0:	f003 fb90 	bl	4061f4 <_fflush_r>
  402ad4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402ad6:	b141      	cbz	r1, 402aea <setvbuf+0x52>
  402ad8:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402adc:	4299      	cmp	r1, r3
  402ade:	d002      	beq.n	402ae6 <setvbuf+0x4e>
  402ae0:	4628      	mov	r0, r5
  402ae2:	f003 fd05 	bl	4064f0 <_free_r>
  402ae6:	2300      	movs	r3, #0
  402ae8:	6323      	str	r3, [r4, #48]	; 0x30
  402aea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402aee:	2200      	movs	r2, #0
  402af0:	61a2      	str	r2, [r4, #24]
  402af2:	6062      	str	r2, [r4, #4]
  402af4:	061a      	lsls	r2, r3, #24
  402af6:	d43a      	bmi.n	402b6e <setvbuf+0xd6>
  402af8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  402afc:	f023 0303 	bic.w	r3, r3, #3
  402b00:	f1b8 0f02 	cmp.w	r8, #2
  402b04:	81a3      	strh	r3, [r4, #12]
  402b06:	d01d      	beq.n	402b44 <setvbuf+0xac>
  402b08:	ab01      	add	r3, sp, #4
  402b0a:	466a      	mov	r2, sp
  402b0c:	4621      	mov	r1, r4
  402b0e:	4628      	mov	r0, r5
  402b10:	f003 ff9a 	bl	406a48 <__swhatbuf_r>
  402b14:	89a3      	ldrh	r3, [r4, #12]
  402b16:	4318      	orrs	r0, r3
  402b18:	81a0      	strh	r0, [r4, #12]
  402b1a:	2e00      	cmp	r6, #0
  402b1c:	d132      	bne.n	402b84 <setvbuf+0xec>
  402b1e:	9e00      	ldr	r6, [sp, #0]
  402b20:	4630      	mov	r0, r6
  402b22:	f7ff fc8d 	bl	402440 <malloc>
  402b26:	4607      	mov	r7, r0
  402b28:	2800      	cmp	r0, #0
  402b2a:	d06b      	beq.n	402c04 <setvbuf+0x16c>
  402b2c:	89a3      	ldrh	r3, [r4, #12]
  402b2e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402b32:	81a3      	strh	r3, [r4, #12]
  402b34:	e028      	b.n	402b88 <setvbuf+0xf0>
  402b36:	89a3      	ldrh	r3, [r4, #12]
  402b38:	0599      	lsls	r1, r3, #22
  402b3a:	d4c7      	bmi.n	402acc <setvbuf+0x34>
  402b3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402b3e:	f003 ff7f 	bl	406a40 <__retarget_lock_acquire_recursive>
  402b42:	e7c3      	b.n	402acc <setvbuf+0x34>
  402b44:	2500      	movs	r5, #0
  402b46:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402b48:	2600      	movs	r6, #0
  402b4a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402b4e:	f043 0302 	orr.w	r3, r3, #2
  402b52:	2001      	movs	r0, #1
  402b54:	60a6      	str	r6, [r4, #8]
  402b56:	07ce      	lsls	r6, r1, #31
  402b58:	81a3      	strh	r3, [r4, #12]
  402b5a:	6022      	str	r2, [r4, #0]
  402b5c:	6122      	str	r2, [r4, #16]
  402b5e:	6160      	str	r0, [r4, #20]
  402b60:	d401      	bmi.n	402b66 <setvbuf+0xce>
  402b62:	0598      	lsls	r0, r3, #22
  402b64:	d53e      	bpl.n	402be4 <setvbuf+0x14c>
  402b66:	4628      	mov	r0, r5
  402b68:	b003      	add	sp, #12
  402b6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402b6e:	6921      	ldr	r1, [r4, #16]
  402b70:	4628      	mov	r0, r5
  402b72:	f003 fcbd 	bl	4064f0 <_free_r>
  402b76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402b7a:	e7bd      	b.n	402af8 <setvbuf+0x60>
  402b7c:	4628      	mov	r0, r5
  402b7e:	f003 fb91 	bl	4062a4 <__sinit>
  402b82:	e796      	b.n	402ab2 <setvbuf+0x1a>
  402b84:	2f00      	cmp	r7, #0
  402b86:	d0cb      	beq.n	402b20 <setvbuf+0x88>
  402b88:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402b8a:	2b00      	cmp	r3, #0
  402b8c:	d033      	beq.n	402bf6 <setvbuf+0x15e>
  402b8e:	9b00      	ldr	r3, [sp, #0]
  402b90:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402b94:	6027      	str	r7, [r4, #0]
  402b96:	429e      	cmp	r6, r3
  402b98:	bf1c      	itt	ne
  402b9a:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  402b9e:	81a2      	strhne	r2, [r4, #12]
  402ba0:	f1b8 0f01 	cmp.w	r8, #1
  402ba4:	bf04      	itt	eq
  402ba6:	f042 0201 	orreq.w	r2, r2, #1
  402baa:	81a2      	strheq	r2, [r4, #12]
  402bac:	b292      	uxth	r2, r2
  402bae:	f012 0308 	ands.w	r3, r2, #8
  402bb2:	6127      	str	r7, [r4, #16]
  402bb4:	6166      	str	r6, [r4, #20]
  402bb6:	d00e      	beq.n	402bd6 <setvbuf+0x13e>
  402bb8:	07d1      	lsls	r1, r2, #31
  402bba:	d51a      	bpl.n	402bf2 <setvbuf+0x15a>
  402bbc:	6e65      	ldr	r5, [r4, #100]	; 0x64
  402bbe:	4276      	negs	r6, r6
  402bc0:	2300      	movs	r3, #0
  402bc2:	f015 0501 	ands.w	r5, r5, #1
  402bc6:	61a6      	str	r6, [r4, #24]
  402bc8:	60a3      	str	r3, [r4, #8]
  402bca:	d009      	beq.n	402be0 <setvbuf+0x148>
  402bcc:	2500      	movs	r5, #0
  402bce:	4628      	mov	r0, r5
  402bd0:	b003      	add	sp, #12
  402bd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402bd6:	60a3      	str	r3, [r4, #8]
  402bd8:	6e65      	ldr	r5, [r4, #100]	; 0x64
  402bda:	f015 0501 	ands.w	r5, r5, #1
  402bde:	d1f5      	bne.n	402bcc <setvbuf+0x134>
  402be0:	0593      	lsls	r3, r2, #22
  402be2:	d4c0      	bmi.n	402b66 <setvbuf+0xce>
  402be4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402be6:	f003 ff2d 	bl	406a44 <__retarget_lock_release_recursive>
  402bea:	4628      	mov	r0, r5
  402bec:	b003      	add	sp, #12
  402bee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402bf2:	60a6      	str	r6, [r4, #8]
  402bf4:	e7f0      	b.n	402bd8 <setvbuf+0x140>
  402bf6:	4628      	mov	r0, r5
  402bf8:	f003 fb54 	bl	4062a4 <__sinit>
  402bfc:	e7c7      	b.n	402b8e <setvbuf+0xf6>
  402bfe:	f04f 35ff 	mov.w	r5, #4294967295
  402c02:	e7b0      	b.n	402b66 <setvbuf+0xce>
  402c04:	f8dd 9000 	ldr.w	r9, [sp]
  402c08:	45b1      	cmp	r9, r6
  402c0a:	d004      	beq.n	402c16 <setvbuf+0x17e>
  402c0c:	4648      	mov	r0, r9
  402c0e:	f7ff fc17 	bl	402440 <malloc>
  402c12:	4607      	mov	r7, r0
  402c14:	b920      	cbnz	r0, 402c20 <setvbuf+0x188>
  402c16:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402c1a:	f04f 35ff 	mov.w	r5, #4294967295
  402c1e:	e792      	b.n	402b46 <setvbuf+0xae>
  402c20:	464e      	mov	r6, r9
  402c22:	e783      	b.n	402b2c <setvbuf+0x94>
  402c24:	20400014 	.word	0x20400014

00402c28 <sprintf>:
  402c28:	b40e      	push	{r1, r2, r3}
  402c2a:	b5f0      	push	{r4, r5, r6, r7, lr}
  402c2c:	b09c      	sub	sp, #112	; 0x70
  402c2e:	ab21      	add	r3, sp, #132	; 0x84
  402c30:	490f      	ldr	r1, [pc, #60]	; (402c70 <sprintf+0x48>)
  402c32:	f853 2b04 	ldr.w	r2, [r3], #4
  402c36:	9301      	str	r3, [sp, #4]
  402c38:	4605      	mov	r5, r0
  402c3a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  402c3e:	6808      	ldr	r0, [r1, #0]
  402c40:	9502      	str	r5, [sp, #8]
  402c42:	f44f 7702 	mov.w	r7, #520	; 0x208
  402c46:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402c4a:	a902      	add	r1, sp, #8
  402c4c:	9506      	str	r5, [sp, #24]
  402c4e:	f8ad 7014 	strh.w	r7, [sp, #20]
  402c52:	9404      	str	r4, [sp, #16]
  402c54:	9407      	str	r4, [sp, #28]
  402c56:	f8ad 6016 	strh.w	r6, [sp, #22]
  402c5a:	f000 f8ff 	bl	402e5c <_svfprintf_r>
  402c5e:	9b02      	ldr	r3, [sp, #8]
  402c60:	2200      	movs	r2, #0
  402c62:	701a      	strb	r2, [r3, #0]
  402c64:	b01c      	add	sp, #112	; 0x70
  402c66:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  402c6a:	b003      	add	sp, #12
  402c6c:	4770      	bx	lr
  402c6e:	bf00      	nop
  402c70:	20400014 	.word	0x20400014

00402c74 <strcat>:
  402c74:	0783      	lsls	r3, r0, #30
  402c76:	b510      	push	{r4, lr}
  402c78:	4604      	mov	r4, r0
  402c7a:	d110      	bne.n	402c9e <strcat+0x2a>
  402c7c:	6802      	ldr	r2, [r0, #0]
  402c7e:	f1a2 3301 	sub.w	r3, r2, #16843009	; 0x1010101
  402c82:	ea23 0302 	bic.w	r3, r3, r2
  402c86:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  402c8a:	d108      	bne.n	402c9e <strcat+0x2a>
  402c8c:	f850 2f04 	ldr.w	r2, [r0, #4]!
  402c90:	f1a2 3301 	sub.w	r3, r2, #16843009	; 0x1010101
  402c94:	ea23 0302 	bic.w	r3, r3, r2
  402c98:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  402c9c:	d0f6      	beq.n	402c8c <strcat+0x18>
  402c9e:	7803      	ldrb	r3, [r0, #0]
  402ca0:	b11b      	cbz	r3, 402caa <strcat+0x36>
  402ca2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  402ca6:	2b00      	cmp	r3, #0
  402ca8:	d1fb      	bne.n	402ca2 <strcat+0x2e>
  402caa:	f000 f803 	bl	402cb4 <strcpy>
  402cae:	4620      	mov	r0, r4
  402cb0:	bd10      	pop	{r4, pc}
  402cb2:	bf00      	nop

00402cb4 <strcpy>:
  402cb4:	ea80 0201 	eor.w	r2, r0, r1
  402cb8:	4684      	mov	ip, r0
  402cba:	f012 0f03 	tst.w	r2, #3
  402cbe:	d14f      	bne.n	402d60 <strcpy+0xac>
  402cc0:	f011 0f03 	tst.w	r1, #3
  402cc4:	d132      	bne.n	402d2c <strcpy+0x78>
  402cc6:	f84d 4d04 	str.w	r4, [sp, #-4]!
  402cca:	f011 0f04 	tst.w	r1, #4
  402cce:	f851 3b04 	ldr.w	r3, [r1], #4
  402cd2:	d00b      	beq.n	402cec <strcpy+0x38>
  402cd4:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  402cd8:	439a      	bics	r2, r3
  402cda:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402cde:	bf04      	itt	eq
  402ce0:	f84c 3b04 	streq.w	r3, [ip], #4
  402ce4:	f851 3b04 	ldreq.w	r3, [r1], #4
  402ce8:	d116      	bne.n	402d18 <strcpy+0x64>
  402cea:	bf00      	nop
  402cec:	f851 4b04 	ldr.w	r4, [r1], #4
  402cf0:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  402cf4:	439a      	bics	r2, r3
  402cf6:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402cfa:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
  402cfe:	d10b      	bne.n	402d18 <strcpy+0x64>
  402d00:	f84c 3b04 	str.w	r3, [ip], #4
  402d04:	43a2      	bics	r2, r4
  402d06:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402d0a:	bf04      	itt	eq
  402d0c:	f851 3b04 	ldreq.w	r3, [r1], #4
  402d10:	f84c 4b04 	streq.w	r4, [ip], #4
  402d14:	d0ea      	beq.n	402cec <strcpy+0x38>
  402d16:	4623      	mov	r3, r4
  402d18:	f80c 3b01 	strb.w	r3, [ip], #1
  402d1c:	f013 0fff 	tst.w	r3, #255	; 0xff
  402d20:	ea4f 2333 	mov.w	r3, r3, ror #8
  402d24:	d1f8      	bne.n	402d18 <strcpy+0x64>
  402d26:	f85d 4b04 	ldr.w	r4, [sp], #4
  402d2a:	4770      	bx	lr
  402d2c:	f011 0f01 	tst.w	r1, #1
  402d30:	d006      	beq.n	402d40 <strcpy+0x8c>
  402d32:	f811 2b01 	ldrb.w	r2, [r1], #1
  402d36:	f80c 2b01 	strb.w	r2, [ip], #1
  402d3a:	2a00      	cmp	r2, #0
  402d3c:	bf08      	it	eq
  402d3e:	4770      	bxeq	lr
  402d40:	f011 0f02 	tst.w	r1, #2
  402d44:	d0bf      	beq.n	402cc6 <strcpy+0x12>
  402d46:	f831 2b02 	ldrh.w	r2, [r1], #2
  402d4a:	f012 0fff 	tst.w	r2, #255	; 0xff
  402d4e:	bf16      	itet	ne
  402d50:	f82c 2b02 	strhne.w	r2, [ip], #2
  402d54:	f88c 2000 	strbeq.w	r2, [ip]
  402d58:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
  402d5c:	d1b3      	bne.n	402cc6 <strcpy+0x12>
  402d5e:	4770      	bx	lr
  402d60:	f811 2b01 	ldrb.w	r2, [r1], #1
  402d64:	f80c 2b01 	strb.w	r2, [ip], #1
  402d68:	2a00      	cmp	r2, #0
  402d6a:	d1f9      	bne.n	402d60 <strcpy+0xac>
  402d6c:	4770      	bx	lr
  402d6e:	bf00      	nop
	...

00402d80 <strlen>:
  402d80:	f890 f000 	pld	[r0]
  402d84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402d88:	f020 0107 	bic.w	r1, r0, #7
  402d8c:	f06f 0c00 	mvn.w	ip, #0
  402d90:	f010 0407 	ands.w	r4, r0, #7
  402d94:	f891 f020 	pld	[r1, #32]
  402d98:	f040 8049 	bne.w	402e2e <strlen+0xae>
  402d9c:	f04f 0400 	mov.w	r4, #0
  402da0:	f06f 0007 	mvn.w	r0, #7
  402da4:	e9d1 2300 	ldrd	r2, r3, [r1]
  402da8:	f891 f040 	pld	[r1, #64]	; 0x40
  402dac:	f100 0008 	add.w	r0, r0, #8
  402db0:	fa82 f24c 	uadd8	r2, r2, ip
  402db4:	faa4 f28c 	sel	r2, r4, ip
  402db8:	fa83 f34c 	uadd8	r3, r3, ip
  402dbc:	faa2 f38c 	sel	r3, r2, ip
  402dc0:	bb4b      	cbnz	r3, 402e16 <strlen+0x96>
  402dc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402dc6:	fa82 f24c 	uadd8	r2, r2, ip
  402dca:	f100 0008 	add.w	r0, r0, #8
  402dce:	faa4 f28c 	sel	r2, r4, ip
  402dd2:	fa83 f34c 	uadd8	r3, r3, ip
  402dd6:	faa2 f38c 	sel	r3, r2, ip
  402dda:	b9e3      	cbnz	r3, 402e16 <strlen+0x96>
  402ddc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  402de0:	fa82 f24c 	uadd8	r2, r2, ip
  402de4:	f100 0008 	add.w	r0, r0, #8
  402de8:	faa4 f28c 	sel	r2, r4, ip
  402dec:	fa83 f34c 	uadd8	r3, r3, ip
  402df0:	faa2 f38c 	sel	r3, r2, ip
  402df4:	b97b      	cbnz	r3, 402e16 <strlen+0x96>
  402df6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  402dfa:	f101 0120 	add.w	r1, r1, #32
  402dfe:	fa82 f24c 	uadd8	r2, r2, ip
  402e02:	f100 0008 	add.w	r0, r0, #8
  402e06:	faa4 f28c 	sel	r2, r4, ip
  402e0a:	fa83 f34c 	uadd8	r3, r3, ip
  402e0e:	faa2 f38c 	sel	r3, r2, ip
  402e12:	2b00      	cmp	r3, #0
  402e14:	d0c6      	beq.n	402da4 <strlen+0x24>
  402e16:	2a00      	cmp	r2, #0
  402e18:	bf04      	itt	eq
  402e1a:	3004      	addeq	r0, #4
  402e1c:	461a      	moveq	r2, r3
  402e1e:	ba12      	rev	r2, r2
  402e20:	fab2 f282 	clz	r2, r2
  402e24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  402e28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  402e2c:	4770      	bx	lr
  402e2e:	e9d1 2300 	ldrd	r2, r3, [r1]
  402e32:	f004 0503 	and.w	r5, r4, #3
  402e36:	f1c4 0000 	rsb	r0, r4, #0
  402e3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  402e3e:	f014 0f04 	tst.w	r4, #4
  402e42:	f891 f040 	pld	[r1, #64]	; 0x40
  402e46:	fa0c f505 	lsl.w	r5, ip, r5
  402e4a:	ea62 0205 	orn	r2, r2, r5
  402e4e:	bf1c      	itt	ne
  402e50:	ea63 0305 	ornne	r3, r3, r5
  402e54:	4662      	movne	r2, ip
  402e56:	f04f 0400 	mov.w	r4, #0
  402e5a:	e7a9      	b.n	402db0 <strlen+0x30>

00402e5c <_svfprintf_r>:
  402e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402e60:	b0c3      	sub	sp, #268	; 0x10c
  402e62:	460c      	mov	r4, r1
  402e64:	910b      	str	r1, [sp, #44]	; 0x2c
  402e66:	4692      	mov	sl, r2
  402e68:	930f      	str	r3, [sp, #60]	; 0x3c
  402e6a:	900c      	str	r0, [sp, #48]	; 0x30
  402e6c:	f003 fdd6 	bl	406a1c <_localeconv_r>
  402e70:	6803      	ldr	r3, [r0, #0]
  402e72:	931a      	str	r3, [sp, #104]	; 0x68
  402e74:	4618      	mov	r0, r3
  402e76:	f7ff ff83 	bl	402d80 <strlen>
  402e7a:	89a3      	ldrh	r3, [r4, #12]
  402e7c:	9019      	str	r0, [sp, #100]	; 0x64
  402e7e:	0619      	lsls	r1, r3, #24
  402e80:	d503      	bpl.n	402e8a <_svfprintf_r+0x2e>
  402e82:	6923      	ldr	r3, [r4, #16]
  402e84:	2b00      	cmp	r3, #0
  402e86:	f001 8003 	beq.w	403e90 <_svfprintf_r+0x1034>
  402e8a:	2300      	movs	r3, #0
  402e8c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  402e90:	9313      	str	r3, [sp, #76]	; 0x4c
  402e92:	9315      	str	r3, [sp, #84]	; 0x54
  402e94:	9314      	str	r3, [sp, #80]	; 0x50
  402e96:	9327      	str	r3, [sp, #156]	; 0x9c
  402e98:	9326      	str	r3, [sp, #152]	; 0x98
  402e9a:	9318      	str	r3, [sp, #96]	; 0x60
  402e9c:	931b      	str	r3, [sp, #108]	; 0x6c
  402e9e:	9309      	str	r3, [sp, #36]	; 0x24
  402ea0:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402ea4:	46c8      	mov	r8, r9
  402ea6:	9316      	str	r3, [sp, #88]	; 0x58
  402ea8:	9317      	str	r3, [sp, #92]	; 0x5c
  402eaa:	f89a 3000 	ldrb.w	r3, [sl]
  402eae:	4654      	mov	r4, sl
  402eb0:	b1e3      	cbz	r3, 402eec <_svfprintf_r+0x90>
  402eb2:	2b25      	cmp	r3, #37	; 0x25
  402eb4:	d102      	bne.n	402ebc <_svfprintf_r+0x60>
  402eb6:	e019      	b.n	402eec <_svfprintf_r+0x90>
  402eb8:	2b25      	cmp	r3, #37	; 0x25
  402eba:	d003      	beq.n	402ec4 <_svfprintf_r+0x68>
  402ebc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402ec0:	2b00      	cmp	r3, #0
  402ec2:	d1f9      	bne.n	402eb8 <_svfprintf_r+0x5c>
  402ec4:	eba4 050a 	sub.w	r5, r4, sl
  402ec8:	b185      	cbz	r5, 402eec <_svfprintf_r+0x90>
  402eca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ecc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402ece:	f8c8 a000 	str.w	sl, [r8]
  402ed2:	3301      	adds	r3, #1
  402ed4:	442a      	add	r2, r5
  402ed6:	2b07      	cmp	r3, #7
  402ed8:	f8c8 5004 	str.w	r5, [r8, #4]
  402edc:	9227      	str	r2, [sp, #156]	; 0x9c
  402ede:	9326      	str	r3, [sp, #152]	; 0x98
  402ee0:	dc7f      	bgt.n	402fe2 <_svfprintf_r+0x186>
  402ee2:	f108 0808 	add.w	r8, r8, #8
  402ee6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402ee8:	442b      	add	r3, r5
  402eea:	9309      	str	r3, [sp, #36]	; 0x24
  402eec:	7823      	ldrb	r3, [r4, #0]
  402eee:	2b00      	cmp	r3, #0
  402ef0:	d07f      	beq.n	402ff2 <_svfprintf_r+0x196>
  402ef2:	2300      	movs	r3, #0
  402ef4:	461a      	mov	r2, r3
  402ef6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402efa:	4619      	mov	r1, r3
  402efc:	930d      	str	r3, [sp, #52]	; 0x34
  402efe:	469b      	mov	fp, r3
  402f00:	f04f 30ff 	mov.w	r0, #4294967295
  402f04:	7863      	ldrb	r3, [r4, #1]
  402f06:	900a      	str	r0, [sp, #40]	; 0x28
  402f08:	f104 0a01 	add.w	sl, r4, #1
  402f0c:	f10a 0a01 	add.w	sl, sl, #1
  402f10:	f1a3 0020 	sub.w	r0, r3, #32
  402f14:	2858      	cmp	r0, #88	; 0x58
  402f16:	f200 83c1 	bhi.w	40369c <_svfprintf_r+0x840>
  402f1a:	e8df f010 	tbh	[pc, r0, lsl #1]
  402f1e:	0238      	.short	0x0238
  402f20:	03bf03bf 	.word	0x03bf03bf
  402f24:	03bf0240 	.word	0x03bf0240
  402f28:	03bf03bf 	.word	0x03bf03bf
  402f2c:	03bf03bf 	.word	0x03bf03bf
  402f30:	024503bf 	.word	0x024503bf
  402f34:	03bf0203 	.word	0x03bf0203
  402f38:	026b005d 	.word	0x026b005d
  402f3c:	028603bf 	.word	0x028603bf
  402f40:	039d039d 	.word	0x039d039d
  402f44:	039d039d 	.word	0x039d039d
  402f48:	039d039d 	.word	0x039d039d
  402f4c:	039d039d 	.word	0x039d039d
  402f50:	03bf039d 	.word	0x03bf039d
  402f54:	03bf03bf 	.word	0x03bf03bf
  402f58:	03bf03bf 	.word	0x03bf03bf
  402f5c:	03bf03bf 	.word	0x03bf03bf
  402f60:	03bf03bf 	.word	0x03bf03bf
  402f64:	033703bf 	.word	0x033703bf
  402f68:	03bf0357 	.word	0x03bf0357
  402f6c:	03bf0357 	.word	0x03bf0357
  402f70:	03bf03bf 	.word	0x03bf03bf
  402f74:	039803bf 	.word	0x039803bf
  402f78:	03bf03bf 	.word	0x03bf03bf
  402f7c:	03bf03ad 	.word	0x03bf03ad
  402f80:	03bf03bf 	.word	0x03bf03bf
  402f84:	03bf03bf 	.word	0x03bf03bf
  402f88:	03bf0259 	.word	0x03bf0259
  402f8c:	031e03bf 	.word	0x031e03bf
  402f90:	03bf03bf 	.word	0x03bf03bf
  402f94:	03bf03bf 	.word	0x03bf03bf
  402f98:	03bf03bf 	.word	0x03bf03bf
  402f9c:	03bf03bf 	.word	0x03bf03bf
  402fa0:	03bf03bf 	.word	0x03bf03bf
  402fa4:	02db02c6 	.word	0x02db02c6
  402fa8:	03570357 	.word	0x03570357
  402fac:	028b0357 	.word	0x028b0357
  402fb0:	03bf02db 	.word	0x03bf02db
  402fb4:	029003bf 	.word	0x029003bf
  402fb8:	029d03bf 	.word	0x029d03bf
  402fbc:	02b401cc 	.word	0x02b401cc
  402fc0:	03bf0208 	.word	0x03bf0208
  402fc4:	03bf01e1 	.word	0x03bf01e1
  402fc8:	03bf007e 	.word	0x03bf007e
  402fcc:	020d03bf 	.word	0x020d03bf
  402fd0:	980d      	ldr	r0, [sp, #52]	; 0x34
  402fd2:	930f      	str	r3, [sp, #60]	; 0x3c
  402fd4:	4240      	negs	r0, r0
  402fd6:	900d      	str	r0, [sp, #52]	; 0x34
  402fd8:	f04b 0b04 	orr.w	fp, fp, #4
  402fdc:	f89a 3000 	ldrb.w	r3, [sl]
  402fe0:	e794      	b.n	402f0c <_svfprintf_r+0xb0>
  402fe2:	aa25      	add	r2, sp, #148	; 0x94
  402fe4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fe6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fe8:	f004 fbf4 	bl	4077d4 <__ssprint_r>
  402fec:	b940      	cbnz	r0, 403000 <_svfprintf_r+0x1a4>
  402fee:	46c8      	mov	r8, r9
  402ff0:	e779      	b.n	402ee6 <_svfprintf_r+0x8a>
  402ff2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402ff4:	b123      	cbz	r3, 403000 <_svfprintf_r+0x1a4>
  402ff6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ff8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ffa:	aa25      	add	r2, sp, #148	; 0x94
  402ffc:	f004 fbea 	bl	4077d4 <__ssprint_r>
  403000:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403002:	899b      	ldrh	r3, [r3, #12]
  403004:	f013 0f40 	tst.w	r3, #64	; 0x40
  403008:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40300a:	bf18      	it	ne
  40300c:	f04f 33ff 	movne.w	r3, #4294967295
  403010:	9309      	str	r3, [sp, #36]	; 0x24
  403012:	9809      	ldr	r0, [sp, #36]	; 0x24
  403014:	b043      	add	sp, #268	; 0x10c
  403016:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40301a:	f01b 0f20 	tst.w	fp, #32
  40301e:	9311      	str	r3, [sp, #68]	; 0x44
  403020:	f040 81dd 	bne.w	4033de <_svfprintf_r+0x582>
  403024:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403026:	f01b 0f10 	tst.w	fp, #16
  40302a:	4613      	mov	r3, r2
  40302c:	f040 856e 	bne.w	403b0c <_svfprintf_r+0xcb0>
  403030:	f01b 0f40 	tst.w	fp, #64	; 0x40
  403034:	f000 856a 	beq.w	403b0c <_svfprintf_r+0xcb0>
  403038:	8814      	ldrh	r4, [r2, #0]
  40303a:	3204      	adds	r2, #4
  40303c:	2500      	movs	r5, #0
  40303e:	2301      	movs	r3, #1
  403040:	920f      	str	r2, [sp, #60]	; 0x3c
  403042:	2700      	movs	r7, #0
  403044:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403048:	990a      	ldr	r1, [sp, #40]	; 0x28
  40304a:	1c4a      	adds	r2, r1, #1
  40304c:	f000 8265 	beq.w	40351a <_svfprintf_r+0x6be>
  403050:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  403054:	9207      	str	r2, [sp, #28]
  403056:	ea54 0205 	orrs.w	r2, r4, r5
  40305a:	f040 8264 	bne.w	403526 <_svfprintf_r+0x6ca>
  40305e:	2900      	cmp	r1, #0
  403060:	f040 843c 	bne.w	4038dc <_svfprintf_r+0xa80>
  403064:	2b00      	cmp	r3, #0
  403066:	f040 84d7 	bne.w	403a18 <_svfprintf_r+0xbbc>
  40306a:	f01b 0301 	ands.w	r3, fp, #1
  40306e:	930e      	str	r3, [sp, #56]	; 0x38
  403070:	f000 8604 	beq.w	403c7c <_svfprintf_r+0xe20>
  403074:	ae42      	add	r6, sp, #264	; 0x108
  403076:	2330      	movs	r3, #48	; 0x30
  403078:	f806 3d41 	strb.w	r3, [r6, #-65]!
  40307c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40307e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403080:	4293      	cmp	r3, r2
  403082:	bfb8      	it	lt
  403084:	4613      	movlt	r3, r2
  403086:	9308      	str	r3, [sp, #32]
  403088:	2300      	movs	r3, #0
  40308a:	9312      	str	r3, [sp, #72]	; 0x48
  40308c:	b117      	cbz	r7, 403094 <_svfprintf_r+0x238>
  40308e:	9b08      	ldr	r3, [sp, #32]
  403090:	3301      	adds	r3, #1
  403092:	9308      	str	r3, [sp, #32]
  403094:	9b07      	ldr	r3, [sp, #28]
  403096:	f013 0302 	ands.w	r3, r3, #2
  40309a:	9310      	str	r3, [sp, #64]	; 0x40
  40309c:	d002      	beq.n	4030a4 <_svfprintf_r+0x248>
  40309e:	9b08      	ldr	r3, [sp, #32]
  4030a0:	3302      	adds	r3, #2
  4030a2:	9308      	str	r3, [sp, #32]
  4030a4:	9b07      	ldr	r3, [sp, #28]
  4030a6:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4030aa:	f040 830e 	bne.w	4036ca <_svfprintf_r+0x86e>
  4030ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4030b0:	9a08      	ldr	r2, [sp, #32]
  4030b2:	eba3 0b02 	sub.w	fp, r3, r2
  4030b6:	f1bb 0f00 	cmp.w	fp, #0
  4030ba:	f340 8306 	ble.w	4036ca <_svfprintf_r+0x86e>
  4030be:	f1bb 0f10 	cmp.w	fp, #16
  4030c2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4030c6:	dd29      	ble.n	40311c <_svfprintf_r+0x2c0>
  4030c8:	4643      	mov	r3, r8
  4030ca:	4621      	mov	r1, r4
  4030cc:	46a8      	mov	r8, r5
  4030ce:	2710      	movs	r7, #16
  4030d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4030d2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4030d4:	e006      	b.n	4030e4 <_svfprintf_r+0x288>
  4030d6:	f1ab 0b10 	sub.w	fp, fp, #16
  4030da:	f1bb 0f10 	cmp.w	fp, #16
  4030de:	f103 0308 	add.w	r3, r3, #8
  4030e2:	dd18      	ble.n	403116 <_svfprintf_r+0x2ba>
  4030e4:	3201      	adds	r2, #1
  4030e6:	48b7      	ldr	r0, [pc, #732]	; (4033c4 <_svfprintf_r+0x568>)
  4030e8:	9226      	str	r2, [sp, #152]	; 0x98
  4030ea:	3110      	adds	r1, #16
  4030ec:	2a07      	cmp	r2, #7
  4030ee:	9127      	str	r1, [sp, #156]	; 0x9c
  4030f0:	e883 0081 	stmia.w	r3, {r0, r7}
  4030f4:	ddef      	ble.n	4030d6 <_svfprintf_r+0x27a>
  4030f6:	aa25      	add	r2, sp, #148	; 0x94
  4030f8:	4629      	mov	r1, r5
  4030fa:	4620      	mov	r0, r4
  4030fc:	f004 fb6a 	bl	4077d4 <__ssprint_r>
  403100:	2800      	cmp	r0, #0
  403102:	f47f af7d 	bne.w	403000 <_svfprintf_r+0x1a4>
  403106:	f1ab 0b10 	sub.w	fp, fp, #16
  40310a:	f1bb 0f10 	cmp.w	fp, #16
  40310e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403110:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403112:	464b      	mov	r3, r9
  403114:	dce6      	bgt.n	4030e4 <_svfprintf_r+0x288>
  403116:	4645      	mov	r5, r8
  403118:	460c      	mov	r4, r1
  40311a:	4698      	mov	r8, r3
  40311c:	3201      	adds	r2, #1
  40311e:	4ba9      	ldr	r3, [pc, #676]	; (4033c4 <_svfprintf_r+0x568>)
  403120:	9226      	str	r2, [sp, #152]	; 0x98
  403122:	445c      	add	r4, fp
  403124:	2a07      	cmp	r2, #7
  403126:	9427      	str	r4, [sp, #156]	; 0x9c
  403128:	e888 0808 	stmia.w	r8, {r3, fp}
  40312c:	f300 8498 	bgt.w	403a60 <_svfprintf_r+0xc04>
  403130:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403134:	f108 0808 	add.w	r8, r8, #8
  403138:	b177      	cbz	r7, 403158 <_svfprintf_r+0x2fc>
  40313a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40313c:	3301      	adds	r3, #1
  40313e:	3401      	adds	r4, #1
  403140:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  403144:	2201      	movs	r2, #1
  403146:	2b07      	cmp	r3, #7
  403148:	9427      	str	r4, [sp, #156]	; 0x9c
  40314a:	9326      	str	r3, [sp, #152]	; 0x98
  40314c:	e888 0006 	stmia.w	r8, {r1, r2}
  403150:	f300 83db 	bgt.w	40390a <_svfprintf_r+0xaae>
  403154:	f108 0808 	add.w	r8, r8, #8
  403158:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40315a:	b16b      	cbz	r3, 403178 <_svfprintf_r+0x31c>
  40315c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40315e:	3301      	adds	r3, #1
  403160:	3402      	adds	r4, #2
  403162:	a91e      	add	r1, sp, #120	; 0x78
  403164:	2202      	movs	r2, #2
  403166:	2b07      	cmp	r3, #7
  403168:	9427      	str	r4, [sp, #156]	; 0x9c
  40316a:	9326      	str	r3, [sp, #152]	; 0x98
  40316c:	e888 0006 	stmia.w	r8, {r1, r2}
  403170:	f300 83d6 	bgt.w	403920 <_svfprintf_r+0xac4>
  403174:	f108 0808 	add.w	r8, r8, #8
  403178:	2d80      	cmp	r5, #128	; 0x80
  40317a:	f000 8315 	beq.w	4037a8 <_svfprintf_r+0x94c>
  40317e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403180:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403182:	1a9f      	subs	r7, r3, r2
  403184:	2f00      	cmp	r7, #0
  403186:	dd36      	ble.n	4031f6 <_svfprintf_r+0x39a>
  403188:	2f10      	cmp	r7, #16
  40318a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40318c:	4d8e      	ldr	r5, [pc, #568]	; (4033c8 <_svfprintf_r+0x56c>)
  40318e:	dd27      	ble.n	4031e0 <_svfprintf_r+0x384>
  403190:	4642      	mov	r2, r8
  403192:	4621      	mov	r1, r4
  403194:	46b0      	mov	r8, r6
  403196:	f04f 0b10 	mov.w	fp, #16
  40319a:	462e      	mov	r6, r5
  40319c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40319e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4031a0:	e004      	b.n	4031ac <_svfprintf_r+0x350>
  4031a2:	3f10      	subs	r7, #16
  4031a4:	2f10      	cmp	r7, #16
  4031a6:	f102 0208 	add.w	r2, r2, #8
  4031aa:	dd15      	ble.n	4031d8 <_svfprintf_r+0x37c>
  4031ac:	3301      	adds	r3, #1
  4031ae:	3110      	adds	r1, #16
  4031b0:	2b07      	cmp	r3, #7
  4031b2:	9127      	str	r1, [sp, #156]	; 0x9c
  4031b4:	9326      	str	r3, [sp, #152]	; 0x98
  4031b6:	e882 0840 	stmia.w	r2, {r6, fp}
  4031ba:	ddf2      	ble.n	4031a2 <_svfprintf_r+0x346>
  4031bc:	aa25      	add	r2, sp, #148	; 0x94
  4031be:	4629      	mov	r1, r5
  4031c0:	4620      	mov	r0, r4
  4031c2:	f004 fb07 	bl	4077d4 <__ssprint_r>
  4031c6:	2800      	cmp	r0, #0
  4031c8:	f47f af1a 	bne.w	403000 <_svfprintf_r+0x1a4>
  4031cc:	3f10      	subs	r7, #16
  4031ce:	2f10      	cmp	r7, #16
  4031d0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4031d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4031d4:	464a      	mov	r2, r9
  4031d6:	dce9      	bgt.n	4031ac <_svfprintf_r+0x350>
  4031d8:	4635      	mov	r5, r6
  4031da:	460c      	mov	r4, r1
  4031dc:	4646      	mov	r6, r8
  4031de:	4690      	mov	r8, r2
  4031e0:	3301      	adds	r3, #1
  4031e2:	443c      	add	r4, r7
  4031e4:	2b07      	cmp	r3, #7
  4031e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4031e8:	9326      	str	r3, [sp, #152]	; 0x98
  4031ea:	e888 00a0 	stmia.w	r8, {r5, r7}
  4031ee:	f300 8381 	bgt.w	4038f4 <_svfprintf_r+0xa98>
  4031f2:	f108 0808 	add.w	r8, r8, #8
  4031f6:	9b07      	ldr	r3, [sp, #28]
  4031f8:	05df      	lsls	r7, r3, #23
  4031fa:	f100 8268 	bmi.w	4036ce <_svfprintf_r+0x872>
  4031fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403200:	990e      	ldr	r1, [sp, #56]	; 0x38
  403202:	f8c8 6000 	str.w	r6, [r8]
  403206:	3301      	adds	r3, #1
  403208:	440c      	add	r4, r1
  40320a:	2b07      	cmp	r3, #7
  40320c:	9427      	str	r4, [sp, #156]	; 0x9c
  40320e:	f8c8 1004 	str.w	r1, [r8, #4]
  403212:	9326      	str	r3, [sp, #152]	; 0x98
  403214:	f300 834d 	bgt.w	4038b2 <_svfprintf_r+0xa56>
  403218:	f108 0808 	add.w	r8, r8, #8
  40321c:	9b07      	ldr	r3, [sp, #28]
  40321e:	075b      	lsls	r3, r3, #29
  403220:	d53a      	bpl.n	403298 <_svfprintf_r+0x43c>
  403222:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403224:	9a08      	ldr	r2, [sp, #32]
  403226:	1a9d      	subs	r5, r3, r2
  403228:	2d00      	cmp	r5, #0
  40322a:	dd35      	ble.n	403298 <_svfprintf_r+0x43c>
  40322c:	2d10      	cmp	r5, #16
  40322e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403230:	dd20      	ble.n	403274 <_svfprintf_r+0x418>
  403232:	2610      	movs	r6, #16
  403234:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403236:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40323a:	e004      	b.n	403246 <_svfprintf_r+0x3ea>
  40323c:	3d10      	subs	r5, #16
  40323e:	2d10      	cmp	r5, #16
  403240:	f108 0808 	add.w	r8, r8, #8
  403244:	dd16      	ble.n	403274 <_svfprintf_r+0x418>
  403246:	3301      	adds	r3, #1
  403248:	4a5e      	ldr	r2, [pc, #376]	; (4033c4 <_svfprintf_r+0x568>)
  40324a:	9326      	str	r3, [sp, #152]	; 0x98
  40324c:	3410      	adds	r4, #16
  40324e:	2b07      	cmp	r3, #7
  403250:	9427      	str	r4, [sp, #156]	; 0x9c
  403252:	e888 0044 	stmia.w	r8, {r2, r6}
  403256:	ddf1      	ble.n	40323c <_svfprintf_r+0x3e0>
  403258:	aa25      	add	r2, sp, #148	; 0x94
  40325a:	4659      	mov	r1, fp
  40325c:	4638      	mov	r0, r7
  40325e:	f004 fab9 	bl	4077d4 <__ssprint_r>
  403262:	2800      	cmp	r0, #0
  403264:	f47f aecc 	bne.w	403000 <_svfprintf_r+0x1a4>
  403268:	3d10      	subs	r5, #16
  40326a:	2d10      	cmp	r5, #16
  40326c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40326e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403270:	46c8      	mov	r8, r9
  403272:	dce8      	bgt.n	403246 <_svfprintf_r+0x3ea>
  403274:	3301      	adds	r3, #1
  403276:	4a53      	ldr	r2, [pc, #332]	; (4033c4 <_svfprintf_r+0x568>)
  403278:	9326      	str	r3, [sp, #152]	; 0x98
  40327a:	442c      	add	r4, r5
  40327c:	2b07      	cmp	r3, #7
  40327e:	9427      	str	r4, [sp, #156]	; 0x9c
  403280:	e888 0024 	stmia.w	r8, {r2, r5}
  403284:	dd08      	ble.n	403298 <_svfprintf_r+0x43c>
  403286:	aa25      	add	r2, sp, #148	; 0x94
  403288:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40328a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40328c:	f004 faa2 	bl	4077d4 <__ssprint_r>
  403290:	2800      	cmp	r0, #0
  403292:	f47f aeb5 	bne.w	403000 <_svfprintf_r+0x1a4>
  403296:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403298:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40329a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40329c:	9908      	ldr	r1, [sp, #32]
  40329e:	428a      	cmp	r2, r1
  4032a0:	bfac      	ite	ge
  4032a2:	189b      	addge	r3, r3, r2
  4032a4:	185b      	addlt	r3, r3, r1
  4032a6:	9309      	str	r3, [sp, #36]	; 0x24
  4032a8:	2c00      	cmp	r4, #0
  4032aa:	f040 830d 	bne.w	4038c8 <_svfprintf_r+0xa6c>
  4032ae:	2300      	movs	r3, #0
  4032b0:	9326      	str	r3, [sp, #152]	; 0x98
  4032b2:	46c8      	mov	r8, r9
  4032b4:	e5f9      	b.n	402eaa <_svfprintf_r+0x4e>
  4032b6:	9311      	str	r3, [sp, #68]	; 0x44
  4032b8:	f01b 0320 	ands.w	r3, fp, #32
  4032bc:	f040 81e3 	bne.w	403686 <_svfprintf_r+0x82a>
  4032c0:	f01b 0210 	ands.w	r2, fp, #16
  4032c4:	f040 842e 	bne.w	403b24 <_svfprintf_r+0xcc8>
  4032c8:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4032cc:	f000 842a 	beq.w	403b24 <_svfprintf_r+0xcc8>
  4032d0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4032d2:	4613      	mov	r3, r2
  4032d4:	460a      	mov	r2, r1
  4032d6:	3204      	adds	r2, #4
  4032d8:	880c      	ldrh	r4, [r1, #0]
  4032da:	920f      	str	r2, [sp, #60]	; 0x3c
  4032dc:	2500      	movs	r5, #0
  4032de:	e6b0      	b.n	403042 <_svfprintf_r+0x1e6>
  4032e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4032e2:	9311      	str	r3, [sp, #68]	; 0x44
  4032e4:	6816      	ldr	r6, [r2, #0]
  4032e6:	2400      	movs	r4, #0
  4032e8:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4032ec:	1d15      	adds	r5, r2, #4
  4032ee:	2e00      	cmp	r6, #0
  4032f0:	f000 86a7 	beq.w	404042 <_svfprintf_r+0x11e6>
  4032f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4032f6:	1c53      	adds	r3, r2, #1
  4032f8:	f000 8609 	beq.w	403f0e <_svfprintf_r+0x10b2>
  4032fc:	4621      	mov	r1, r4
  4032fe:	4630      	mov	r0, r6
  403300:	f003 fc36 	bl	406b70 <memchr>
  403304:	2800      	cmp	r0, #0
  403306:	f000 86e1 	beq.w	4040cc <_svfprintf_r+0x1270>
  40330a:	1b83      	subs	r3, r0, r6
  40330c:	930e      	str	r3, [sp, #56]	; 0x38
  40330e:	940a      	str	r4, [sp, #40]	; 0x28
  403310:	950f      	str	r5, [sp, #60]	; 0x3c
  403312:	f8cd b01c 	str.w	fp, [sp, #28]
  403316:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40331a:	9308      	str	r3, [sp, #32]
  40331c:	9412      	str	r4, [sp, #72]	; 0x48
  40331e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403322:	e6b3      	b.n	40308c <_svfprintf_r+0x230>
  403324:	f89a 3000 	ldrb.w	r3, [sl]
  403328:	2201      	movs	r2, #1
  40332a:	212b      	movs	r1, #43	; 0x2b
  40332c:	e5ee      	b.n	402f0c <_svfprintf_r+0xb0>
  40332e:	f04b 0b20 	orr.w	fp, fp, #32
  403332:	f89a 3000 	ldrb.w	r3, [sl]
  403336:	e5e9      	b.n	402f0c <_svfprintf_r+0xb0>
  403338:	9311      	str	r3, [sp, #68]	; 0x44
  40333a:	2a00      	cmp	r2, #0
  40333c:	f040 8795 	bne.w	40426a <_svfprintf_r+0x140e>
  403340:	4b22      	ldr	r3, [pc, #136]	; (4033cc <_svfprintf_r+0x570>)
  403342:	9318      	str	r3, [sp, #96]	; 0x60
  403344:	f01b 0f20 	tst.w	fp, #32
  403348:	f040 8111 	bne.w	40356e <_svfprintf_r+0x712>
  40334c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40334e:	f01b 0f10 	tst.w	fp, #16
  403352:	4613      	mov	r3, r2
  403354:	f040 83e1 	bne.w	403b1a <_svfprintf_r+0xcbe>
  403358:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40335c:	f000 83dd 	beq.w	403b1a <_svfprintf_r+0xcbe>
  403360:	3304      	adds	r3, #4
  403362:	8814      	ldrh	r4, [r2, #0]
  403364:	930f      	str	r3, [sp, #60]	; 0x3c
  403366:	2500      	movs	r5, #0
  403368:	f01b 0f01 	tst.w	fp, #1
  40336c:	f000 810c 	beq.w	403588 <_svfprintf_r+0x72c>
  403370:	ea54 0305 	orrs.w	r3, r4, r5
  403374:	f000 8108 	beq.w	403588 <_svfprintf_r+0x72c>
  403378:	2330      	movs	r3, #48	; 0x30
  40337a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40337e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  403382:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  403386:	f04b 0b02 	orr.w	fp, fp, #2
  40338a:	2302      	movs	r3, #2
  40338c:	e659      	b.n	403042 <_svfprintf_r+0x1e6>
  40338e:	f89a 3000 	ldrb.w	r3, [sl]
  403392:	2900      	cmp	r1, #0
  403394:	f47f adba 	bne.w	402f0c <_svfprintf_r+0xb0>
  403398:	2201      	movs	r2, #1
  40339a:	2120      	movs	r1, #32
  40339c:	e5b6      	b.n	402f0c <_svfprintf_r+0xb0>
  40339e:	f04b 0b01 	orr.w	fp, fp, #1
  4033a2:	f89a 3000 	ldrb.w	r3, [sl]
  4033a6:	e5b1      	b.n	402f0c <_svfprintf_r+0xb0>
  4033a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4033aa:	6823      	ldr	r3, [r4, #0]
  4033ac:	930d      	str	r3, [sp, #52]	; 0x34
  4033ae:	4618      	mov	r0, r3
  4033b0:	2800      	cmp	r0, #0
  4033b2:	4623      	mov	r3, r4
  4033b4:	f103 0304 	add.w	r3, r3, #4
  4033b8:	f6ff ae0a 	blt.w	402fd0 <_svfprintf_r+0x174>
  4033bc:	930f      	str	r3, [sp, #60]	; 0x3c
  4033be:	f89a 3000 	ldrb.w	r3, [sl]
  4033c2:	e5a3      	b.n	402f0c <_svfprintf_r+0xb0>
  4033c4:	00408a00 	.word	0x00408a00
  4033c8:	00408a10 	.word	0x00408a10
  4033cc:	004089e0 	.word	0x004089e0
  4033d0:	f04b 0b10 	orr.w	fp, fp, #16
  4033d4:	f01b 0f20 	tst.w	fp, #32
  4033d8:	9311      	str	r3, [sp, #68]	; 0x44
  4033da:	f43f ae23 	beq.w	403024 <_svfprintf_r+0x1c8>
  4033de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4033e0:	3507      	adds	r5, #7
  4033e2:	f025 0307 	bic.w	r3, r5, #7
  4033e6:	f103 0208 	add.w	r2, r3, #8
  4033ea:	e9d3 4500 	ldrd	r4, r5, [r3]
  4033ee:	920f      	str	r2, [sp, #60]	; 0x3c
  4033f0:	2301      	movs	r3, #1
  4033f2:	e626      	b.n	403042 <_svfprintf_r+0x1e6>
  4033f4:	f89a 3000 	ldrb.w	r3, [sl]
  4033f8:	2b2a      	cmp	r3, #42	; 0x2a
  4033fa:	f10a 0401 	add.w	r4, sl, #1
  4033fe:	f000 8727 	beq.w	404250 <_svfprintf_r+0x13f4>
  403402:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403406:	2809      	cmp	r0, #9
  403408:	46a2      	mov	sl, r4
  40340a:	f200 86ad 	bhi.w	404168 <_svfprintf_r+0x130c>
  40340e:	2300      	movs	r3, #0
  403410:	461c      	mov	r4, r3
  403412:	f81a 3b01 	ldrb.w	r3, [sl], #1
  403416:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40341a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40341e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403422:	2809      	cmp	r0, #9
  403424:	d9f5      	bls.n	403412 <_svfprintf_r+0x5b6>
  403426:	940a      	str	r4, [sp, #40]	; 0x28
  403428:	e572      	b.n	402f10 <_svfprintf_r+0xb4>
  40342a:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40342e:	f89a 3000 	ldrb.w	r3, [sl]
  403432:	e56b      	b.n	402f0c <_svfprintf_r+0xb0>
  403434:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  403438:	f89a 3000 	ldrb.w	r3, [sl]
  40343c:	e566      	b.n	402f0c <_svfprintf_r+0xb0>
  40343e:	f89a 3000 	ldrb.w	r3, [sl]
  403442:	2b6c      	cmp	r3, #108	; 0x6c
  403444:	bf03      	ittte	eq
  403446:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40344a:	f04b 0b20 	orreq.w	fp, fp, #32
  40344e:	f10a 0a01 	addeq.w	sl, sl, #1
  403452:	f04b 0b10 	orrne.w	fp, fp, #16
  403456:	e559      	b.n	402f0c <_svfprintf_r+0xb0>
  403458:	2a00      	cmp	r2, #0
  40345a:	f040 8711 	bne.w	404280 <_svfprintf_r+0x1424>
  40345e:	f01b 0f20 	tst.w	fp, #32
  403462:	f040 84f9 	bne.w	403e58 <_svfprintf_r+0xffc>
  403466:	f01b 0f10 	tst.w	fp, #16
  40346a:	f040 84ac 	bne.w	403dc6 <_svfprintf_r+0xf6a>
  40346e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  403472:	f000 84a8 	beq.w	403dc6 <_svfprintf_r+0xf6a>
  403476:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403478:	6813      	ldr	r3, [r2, #0]
  40347a:	3204      	adds	r2, #4
  40347c:	920f      	str	r2, [sp, #60]	; 0x3c
  40347e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  403482:	801a      	strh	r2, [r3, #0]
  403484:	e511      	b.n	402eaa <_svfprintf_r+0x4e>
  403486:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403488:	4bb3      	ldr	r3, [pc, #716]	; (403758 <_svfprintf_r+0x8fc>)
  40348a:	680c      	ldr	r4, [r1, #0]
  40348c:	9318      	str	r3, [sp, #96]	; 0x60
  40348e:	2230      	movs	r2, #48	; 0x30
  403490:	2378      	movs	r3, #120	; 0x78
  403492:	3104      	adds	r1, #4
  403494:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  403498:	9311      	str	r3, [sp, #68]	; 0x44
  40349a:	f04b 0b02 	orr.w	fp, fp, #2
  40349e:	910f      	str	r1, [sp, #60]	; 0x3c
  4034a0:	2500      	movs	r5, #0
  4034a2:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4034a6:	2302      	movs	r3, #2
  4034a8:	e5cb      	b.n	403042 <_svfprintf_r+0x1e6>
  4034aa:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4034ac:	9311      	str	r3, [sp, #68]	; 0x44
  4034ae:	680a      	ldr	r2, [r1, #0]
  4034b0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4034b4:	2300      	movs	r3, #0
  4034b6:	460a      	mov	r2, r1
  4034b8:	461f      	mov	r7, r3
  4034ba:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4034be:	3204      	adds	r2, #4
  4034c0:	2301      	movs	r3, #1
  4034c2:	9308      	str	r3, [sp, #32]
  4034c4:	f8cd b01c 	str.w	fp, [sp, #28]
  4034c8:	970a      	str	r7, [sp, #40]	; 0x28
  4034ca:	9712      	str	r7, [sp, #72]	; 0x48
  4034cc:	920f      	str	r2, [sp, #60]	; 0x3c
  4034ce:	930e      	str	r3, [sp, #56]	; 0x38
  4034d0:	ae28      	add	r6, sp, #160	; 0xa0
  4034d2:	e5df      	b.n	403094 <_svfprintf_r+0x238>
  4034d4:	9311      	str	r3, [sp, #68]	; 0x44
  4034d6:	2a00      	cmp	r2, #0
  4034d8:	f040 86ea 	bne.w	4042b0 <_svfprintf_r+0x1454>
  4034dc:	f01b 0f20 	tst.w	fp, #32
  4034e0:	d15d      	bne.n	40359e <_svfprintf_r+0x742>
  4034e2:	f01b 0f10 	tst.w	fp, #16
  4034e6:	f040 8308 	bne.w	403afa <_svfprintf_r+0xc9e>
  4034ea:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4034ee:	f000 8304 	beq.w	403afa <_svfprintf_r+0xc9e>
  4034f2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4034f4:	f9b1 4000 	ldrsh.w	r4, [r1]
  4034f8:	3104      	adds	r1, #4
  4034fa:	17e5      	asrs	r5, r4, #31
  4034fc:	4622      	mov	r2, r4
  4034fe:	462b      	mov	r3, r5
  403500:	910f      	str	r1, [sp, #60]	; 0x3c
  403502:	2a00      	cmp	r2, #0
  403504:	f173 0300 	sbcs.w	r3, r3, #0
  403508:	db58      	blt.n	4035bc <_svfprintf_r+0x760>
  40350a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40350c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403510:	1c4a      	adds	r2, r1, #1
  403512:	f04f 0301 	mov.w	r3, #1
  403516:	f47f ad9b 	bne.w	403050 <_svfprintf_r+0x1f4>
  40351a:	ea54 0205 	orrs.w	r2, r4, r5
  40351e:	f000 81df 	beq.w	4038e0 <_svfprintf_r+0xa84>
  403522:	f8cd b01c 	str.w	fp, [sp, #28]
  403526:	2b01      	cmp	r3, #1
  403528:	f000 827b 	beq.w	403a22 <_svfprintf_r+0xbc6>
  40352c:	2b02      	cmp	r3, #2
  40352e:	f040 8206 	bne.w	40393e <_svfprintf_r+0xae2>
  403532:	9818      	ldr	r0, [sp, #96]	; 0x60
  403534:	464e      	mov	r6, r9
  403536:	0923      	lsrs	r3, r4, #4
  403538:	f004 010f 	and.w	r1, r4, #15
  40353c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  403540:	092a      	lsrs	r2, r5, #4
  403542:	461c      	mov	r4, r3
  403544:	4615      	mov	r5, r2
  403546:	5c43      	ldrb	r3, [r0, r1]
  403548:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40354c:	ea54 0305 	orrs.w	r3, r4, r5
  403550:	d1f1      	bne.n	403536 <_svfprintf_r+0x6da>
  403552:	eba9 0306 	sub.w	r3, r9, r6
  403556:	930e      	str	r3, [sp, #56]	; 0x38
  403558:	e590      	b.n	40307c <_svfprintf_r+0x220>
  40355a:	9311      	str	r3, [sp, #68]	; 0x44
  40355c:	2a00      	cmp	r2, #0
  40355e:	f040 86a3 	bne.w	4042a8 <_svfprintf_r+0x144c>
  403562:	4b7e      	ldr	r3, [pc, #504]	; (40375c <_svfprintf_r+0x900>)
  403564:	9318      	str	r3, [sp, #96]	; 0x60
  403566:	f01b 0f20 	tst.w	fp, #32
  40356a:	f43f aeef 	beq.w	40334c <_svfprintf_r+0x4f0>
  40356e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403570:	3507      	adds	r5, #7
  403572:	f025 0307 	bic.w	r3, r5, #7
  403576:	f103 0208 	add.w	r2, r3, #8
  40357a:	f01b 0f01 	tst.w	fp, #1
  40357e:	920f      	str	r2, [sp, #60]	; 0x3c
  403580:	e9d3 4500 	ldrd	r4, r5, [r3]
  403584:	f47f aef4 	bne.w	403370 <_svfprintf_r+0x514>
  403588:	2302      	movs	r3, #2
  40358a:	e55a      	b.n	403042 <_svfprintf_r+0x1e6>
  40358c:	9311      	str	r3, [sp, #68]	; 0x44
  40358e:	2a00      	cmp	r2, #0
  403590:	f040 8686 	bne.w	4042a0 <_svfprintf_r+0x1444>
  403594:	f04b 0b10 	orr.w	fp, fp, #16
  403598:	f01b 0f20 	tst.w	fp, #32
  40359c:	d0a1      	beq.n	4034e2 <_svfprintf_r+0x686>
  40359e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4035a0:	3507      	adds	r5, #7
  4035a2:	f025 0507 	bic.w	r5, r5, #7
  4035a6:	e9d5 2300 	ldrd	r2, r3, [r5]
  4035aa:	2a00      	cmp	r2, #0
  4035ac:	f105 0108 	add.w	r1, r5, #8
  4035b0:	461d      	mov	r5, r3
  4035b2:	f173 0300 	sbcs.w	r3, r3, #0
  4035b6:	910f      	str	r1, [sp, #60]	; 0x3c
  4035b8:	4614      	mov	r4, r2
  4035ba:	daa6      	bge.n	40350a <_svfprintf_r+0x6ae>
  4035bc:	272d      	movs	r7, #45	; 0x2d
  4035be:	4264      	negs	r4, r4
  4035c0:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4035c4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4035c8:	2301      	movs	r3, #1
  4035ca:	e53d      	b.n	403048 <_svfprintf_r+0x1ec>
  4035cc:	9311      	str	r3, [sp, #68]	; 0x44
  4035ce:	2a00      	cmp	r2, #0
  4035d0:	f040 8662 	bne.w	404298 <_svfprintf_r+0x143c>
  4035d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4035d6:	3507      	adds	r5, #7
  4035d8:	f025 0307 	bic.w	r3, r5, #7
  4035dc:	f103 0208 	add.w	r2, r3, #8
  4035e0:	920f      	str	r2, [sp, #60]	; 0x3c
  4035e2:	681a      	ldr	r2, [r3, #0]
  4035e4:	9215      	str	r2, [sp, #84]	; 0x54
  4035e6:	685b      	ldr	r3, [r3, #4]
  4035e8:	9314      	str	r3, [sp, #80]	; 0x50
  4035ea:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4035ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4035ee:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4035f2:	4628      	mov	r0, r5
  4035f4:	4621      	mov	r1, r4
  4035f6:	f04f 32ff 	mov.w	r2, #4294967295
  4035fa:	4b59      	ldr	r3, [pc, #356]	; (403760 <_svfprintf_r+0x904>)
  4035fc:	f004 ffb8 	bl	408570 <__aeabi_dcmpun>
  403600:	2800      	cmp	r0, #0
  403602:	f040 834a 	bne.w	403c9a <_svfprintf_r+0xe3e>
  403606:	4628      	mov	r0, r5
  403608:	4621      	mov	r1, r4
  40360a:	f04f 32ff 	mov.w	r2, #4294967295
  40360e:	4b54      	ldr	r3, [pc, #336]	; (403760 <_svfprintf_r+0x904>)
  403610:	f004 ff90 	bl	408534 <__aeabi_dcmple>
  403614:	2800      	cmp	r0, #0
  403616:	f040 8340 	bne.w	403c9a <_svfprintf_r+0xe3e>
  40361a:	a815      	add	r0, sp, #84	; 0x54
  40361c:	c80d      	ldmia	r0, {r0, r2, r3}
  40361e:	9914      	ldr	r1, [sp, #80]	; 0x50
  403620:	f004 ff7e 	bl	408520 <__aeabi_dcmplt>
  403624:	2800      	cmp	r0, #0
  403626:	f040 8530 	bne.w	40408a <_svfprintf_r+0x122e>
  40362a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40362e:	4e4d      	ldr	r6, [pc, #308]	; (403764 <_svfprintf_r+0x908>)
  403630:	4b4d      	ldr	r3, [pc, #308]	; (403768 <_svfprintf_r+0x90c>)
  403632:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  403636:	9007      	str	r0, [sp, #28]
  403638:	9811      	ldr	r0, [sp, #68]	; 0x44
  40363a:	2203      	movs	r2, #3
  40363c:	2100      	movs	r1, #0
  40363e:	9208      	str	r2, [sp, #32]
  403640:	910a      	str	r1, [sp, #40]	; 0x28
  403642:	2847      	cmp	r0, #71	; 0x47
  403644:	bfd8      	it	le
  403646:	461e      	movle	r6, r3
  403648:	920e      	str	r2, [sp, #56]	; 0x38
  40364a:	9112      	str	r1, [sp, #72]	; 0x48
  40364c:	e51e      	b.n	40308c <_svfprintf_r+0x230>
  40364e:	f04b 0b08 	orr.w	fp, fp, #8
  403652:	f89a 3000 	ldrb.w	r3, [sl]
  403656:	e459      	b.n	402f0c <_svfprintf_r+0xb0>
  403658:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40365c:	2300      	movs	r3, #0
  40365e:	461c      	mov	r4, r3
  403660:	f81a 3b01 	ldrb.w	r3, [sl], #1
  403664:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  403668:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40366c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403670:	2809      	cmp	r0, #9
  403672:	d9f5      	bls.n	403660 <_svfprintf_r+0x804>
  403674:	940d      	str	r4, [sp, #52]	; 0x34
  403676:	e44b      	b.n	402f10 <_svfprintf_r+0xb4>
  403678:	f04b 0b10 	orr.w	fp, fp, #16
  40367c:	9311      	str	r3, [sp, #68]	; 0x44
  40367e:	f01b 0320 	ands.w	r3, fp, #32
  403682:	f43f ae1d 	beq.w	4032c0 <_svfprintf_r+0x464>
  403686:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403688:	3507      	adds	r5, #7
  40368a:	f025 0307 	bic.w	r3, r5, #7
  40368e:	f103 0208 	add.w	r2, r3, #8
  403692:	e9d3 4500 	ldrd	r4, r5, [r3]
  403696:	920f      	str	r2, [sp, #60]	; 0x3c
  403698:	2300      	movs	r3, #0
  40369a:	e4d2      	b.n	403042 <_svfprintf_r+0x1e6>
  40369c:	9311      	str	r3, [sp, #68]	; 0x44
  40369e:	2a00      	cmp	r2, #0
  4036a0:	f040 85e7 	bne.w	404272 <_svfprintf_r+0x1416>
  4036a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4036a6:	2a00      	cmp	r2, #0
  4036a8:	f43f aca3 	beq.w	402ff2 <_svfprintf_r+0x196>
  4036ac:	2300      	movs	r3, #0
  4036ae:	2101      	movs	r1, #1
  4036b0:	461f      	mov	r7, r3
  4036b2:	9108      	str	r1, [sp, #32]
  4036b4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4036b8:	f8cd b01c 	str.w	fp, [sp, #28]
  4036bc:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4036c0:	930a      	str	r3, [sp, #40]	; 0x28
  4036c2:	9312      	str	r3, [sp, #72]	; 0x48
  4036c4:	910e      	str	r1, [sp, #56]	; 0x38
  4036c6:	ae28      	add	r6, sp, #160	; 0xa0
  4036c8:	e4e4      	b.n	403094 <_svfprintf_r+0x238>
  4036ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4036cc:	e534      	b.n	403138 <_svfprintf_r+0x2dc>
  4036ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4036d0:	2b65      	cmp	r3, #101	; 0x65
  4036d2:	f340 80a7 	ble.w	403824 <_svfprintf_r+0x9c8>
  4036d6:	a815      	add	r0, sp, #84	; 0x54
  4036d8:	c80d      	ldmia	r0, {r0, r2, r3}
  4036da:	9914      	ldr	r1, [sp, #80]	; 0x50
  4036dc:	f004 ff16 	bl	40850c <__aeabi_dcmpeq>
  4036e0:	2800      	cmp	r0, #0
  4036e2:	f000 8150 	beq.w	403986 <_svfprintf_r+0xb2a>
  4036e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036e8:	4a20      	ldr	r2, [pc, #128]	; (40376c <_svfprintf_r+0x910>)
  4036ea:	f8c8 2000 	str.w	r2, [r8]
  4036ee:	3301      	adds	r3, #1
  4036f0:	3401      	adds	r4, #1
  4036f2:	2201      	movs	r2, #1
  4036f4:	2b07      	cmp	r3, #7
  4036f6:	9427      	str	r4, [sp, #156]	; 0x9c
  4036f8:	9326      	str	r3, [sp, #152]	; 0x98
  4036fa:	f8c8 2004 	str.w	r2, [r8, #4]
  4036fe:	f300 836a 	bgt.w	403dd6 <_svfprintf_r+0xf7a>
  403702:	f108 0808 	add.w	r8, r8, #8
  403706:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403708:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40370a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40370c:	4293      	cmp	r3, r2
  40370e:	db03      	blt.n	403718 <_svfprintf_r+0x8bc>
  403710:	9b07      	ldr	r3, [sp, #28]
  403712:	07dd      	lsls	r5, r3, #31
  403714:	f57f ad82 	bpl.w	40321c <_svfprintf_r+0x3c0>
  403718:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40371a:	9919      	ldr	r1, [sp, #100]	; 0x64
  40371c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40371e:	f8c8 2000 	str.w	r2, [r8]
  403722:	3301      	adds	r3, #1
  403724:	440c      	add	r4, r1
  403726:	2b07      	cmp	r3, #7
  403728:	f8c8 1004 	str.w	r1, [r8, #4]
  40372c:	9427      	str	r4, [sp, #156]	; 0x9c
  40372e:	9326      	str	r3, [sp, #152]	; 0x98
  403730:	f300 839e 	bgt.w	403e70 <_svfprintf_r+0x1014>
  403734:	f108 0808 	add.w	r8, r8, #8
  403738:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40373a:	1e5e      	subs	r6, r3, #1
  40373c:	2e00      	cmp	r6, #0
  40373e:	f77f ad6d 	ble.w	40321c <_svfprintf_r+0x3c0>
  403742:	2e10      	cmp	r6, #16
  403744:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403746:	4d0a      	ldr	r5, [pc, #40]	; (403770 <_svfprintf_r+0x914>)
  403748:	f340 81f5 	ble.w	403b36 <_svfprintf_r+0xcda>
  40374c:	4622      	mov	r2, r4
  40374e:	2710      	movs	r7, #16
  403750:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403754:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403756:	e013      	b.n	403780 <_svfprintf_r+0x924>
  403758:	004089e0 	.word	0x004089e0
  40375c:	004089cc 	.word	0x004089cc
  403760:	7fefffff 	.word	0x7fefffff
  403764:	004089c0 	.word	0x004089c0
  403768:	004089bc 	.word	0x004089bc
  40376c:	004089fc 	.word	0x004089fc
  403770:	00408a10 	.word	0x00408a10
  403774:	f108 0808 	add.w	r8, r8, #8
  403778:	3e10      	subs	r6, #16
  40377a:	2e10      	cmp	r6, #16
  40377c:	f340 81da 	ble.w	403b34 <_svfprintf_r+0xcd8>
  403780:	3301      	adds	r3, #1
  403782:	3210      	adds	r2, #16
  403784:	2b07      	cmp	r3, #7
  403786:	9227      	str	r2, [sp, #156]	; 0x9c
  403788:	9326      	str	r3, [sp, #152]	; 0x98
  40378a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40378e:	ddf1      	ble.n	403774 <_svfprintf_r+0x918>
  403790:	aa25      	add	r2, sp, #148	; 0x94
  403792:	4621      	mov	r1, r4
  403794:	4658      	mov	r0, fp
  403796:	f004 f81d 	bl	4077d4 <__ssprint_r>
  40379a:	2800      	cmp	r0, #0
  40379c:	f47f ac30 	bne.w	403000 <_svfprintf_r+0x1a4>
  4037a0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4037a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4037a4:	46c8      	mov	r8, r9
  4037a6:	e7e7      	b.n	403778 <_svfprintf_r+0x91c>
  4037a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037aa:	9a08      	ldr	r2, [sp, #32]
  4037ac:	1a9f      	subs	r7, r3, r2
  4037ae:	2f00      	cmp	r7, #0
  4037b0:	f77f ace5 	ble.w	40317e <_svfprintf_r+0x322>
  4037b4:	2f10      	cmp	r7, #16
  4037b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4037b8:	4db6      	ldr	r5, [pc, #728]	; (403a94 <_svfprintf_r+0xc38>)
  4037ba:	dd27      	ble.n	40380c <_svfprintf_r+0x9b0>
  4037bc:	4642      	mov	r2, r8
  4037be:	4621      	mov	r1, r4
  4037c0:	46b0      	mov	r8, r6
  4037c2:	f04f 0b10 	mov.w	fp, #16
  4037c6:	462e      	mov	r6, r5
  4037c8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4037ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4037cc:	e004      	b.n	4037d8 <_svfprintf_r+0x97c>
  4037ce:	3f10      	subs	r7, #16
  4037d0:	2f10      	cmp	r7, #16
  4037d2:	f102 0208 	add.w	r2, r2, #8
  4037d6:	dd15      	ble.n	403804 <_svfprintf_r+0x9a8>
  4037d8:	3301      	adds	r3, #1
  4037da:	3110      	adds	r1, #16
  4037dc:	2b07      	cmp	r3, #7
  4037de:	9127      	str	r1, [sp, #156]	; 0x9c
  4037e0:	9326      	str	r3, [sp, #152]	; 0x98
  4037e2:	e882 0840 	stmia.w	r2, {r6, fp}
  4037e6:	ddf2      	ble.n	4037ce <_svfprintf_r+0x972>
  4037e8:	aa25      	add	r2, sp, #148	; 0x94
  4037ea:	4629      	mov	r1, r5
  4037ec:	4620      	mov	r0, r4
  4037ee:	f003 fff1 	bl	4077d4 <__ssprint_r>
  4037f2:	2800      	cmp	r0, #0
  4037f4:	f47f ac04 	bne.w	403000 <_svfprintf_r+0x1a4>
  4037f8:	3f10      	subs	r7, #16
  4037fa:	2f10      	cmp	r7, #16
  4037fc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4037fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403800:	464a      	mov	r2, r9
  403802:	dce9      	bgt.n	4037d8 <_svfprintf_r+0x97c>
  403804:	4635      	mov	r5, r6
  403806:	460c      	mov	r4, r1
  403808:	4646      	mov	r6, r8
  40380a:	4690      	mov	r8, r2
  40380c:	3301      	adds	r3, #1
  40380e:	443c      	add	r4, r7
  403810:	2b07      	cmp	r3, #7
  403812:	9427      	str	r4, [sp, #156]	; 0x9c
  403814:	9326      	str	r3, [sp, #152]	; 0x98
  403816:	e888 00a0 	stmia.w	r8, {r5, r7}
  40381a:	f300 8232 	bgt.w	403c82 <_svfprintf_r+0xe26>
  40381e:	f108 0808 	add.w	r8, r8, #8
  403822:	e4ac      	b.n	40317e <_svfprintf_r+0x322>
  403824:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403826:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403828:	2b01      	cmp	r3, #1
  40382a:	f340 81fe 	ble.w	403c2a <_svfprintf_r+0xdce>
  40382e:	3701      	adds	r7, #1
  403830:	3401      	adds	r4, #1
  403832:	2301      	movs	r3, #1
  403834:	2f07      	cmp	r7, #7
  403836:	9427      	str	r4, [sp, #156]	; 0x9c
  403838:	9726      	str	r7, [sp, #152]	; 0x98
  40383a:	f8c8 6000 	str.w	r6, [r8]
  40383e:	f8c8 3004 	str.w	r3, [r8, #4]
  403842:	f300 8203 	bgt.w	403c4c <_svfprintf_r+0xdf0>
  403846:	f108 0808 	add.w	r8, r8, #8
  40384a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40384c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40384e:	f8c8 3000 	str.w	r3, [r8]
  403852:	3701      	adds	r7, #1
  403854:	4414      	add	r4, r2
  403856:	2f07      	cmp	r7, #7
  403858:	9427      	str	r4, [sp, #156]	; 0x9c
  40385a:	9726      	str	r7, [sp, #152]	; 0x98
  40385c:	f8c8 2004 	str.w	r2, [r8, #4]
  403860:	f300 8200 	bgt.w	403c64 <_svfprintf_r+0xe08>
  403864:	f108 0808 	add.w	r8, r8, #8
  403868:	a815      	add	r0, sp, #84	; 0x54
  40386a:	c80d      	ldmia	r0, {r0, r2, r3}
  40386c:	9914      	ldr	r1, [sp, #80]	; 0x50
  40386e:	f004 fe4d 	bl	40850c <__aeabi_dcmpeq>
  403872:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403874:	2800      	cmp	r0, #0
  403876:	f040 8101 	bne.w	403a7c <_svfprintf_r+0xc20>
  40387a:	3b01      	subs	r3, #1
  40387c:	3701      	adds	r7, #1
  40387e:	3601      	adds	r6, #1
  403880:	441c      	add	r4, r3
  403882:	2f07      	cmp	r7, #7
  403884:	9726      	str	r7, [sp, #152]	; 0x98
  403886:	9427      	str	r4, [sp, #156]	; 0x9c
  403888:	f8c8 6000 	str.w	r6, [r8]
  40388c:	f8c8 3004 	str.w	r3, [r8, #4]
  403890:	f300 8127 	bgt.w	403ae2 <_svfprintf_r+0xc86>
  403894:	f108 0808 	add.w	r8, r8, #8
  403898:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  40389a:	f8c8 2004 	str.w	r2, [r8, #4]
  40389e:	3701      	adds	r7, #1
  4038a0:	4414      	add	r4, r2
  4038a2:	ab21      	add	r3, sp, #132	; 0x84
  4038a4:	2f07      	cmp	r7, #7
  4038a6:	9427      	str	r4, [sp, #156]	; 0x9c
  4038a8:	9726      	str	r7, [sp, #152]	; 0x98
  4038aa:	f8c8 3000 	str.w	r3, [r8]
  4038ae:	f77f acb3 	ble.w	403218 <_svfprintf_r+0x3bc>
  4038b2:	aa25      	add	r2, sp, #148	; 0x94
  4038b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4038b6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4038b8:	f003 ff8c 	bl	4077d4 <__ssprint_r>
  4038bc:	2800      	cmp	r0, #0
  4038be:	f47f ab9f 	bne.w	403000 <_svfprintf_r+0x1a4>
  4038c2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4038c4:	46c8      	mov	r8, r9
  4038c6:	e4a9      	b.n	40321c <_svfprintf_r+0x3c0>
  4038c8:	aa25      	add	r2, sp, #148	; 0x94
  4038ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4038cc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4038ce:	f003 ff81 	bl	4077d4 <__ssprint_r>
  4038d2:	2800      	cmp	r0, #0
  4038d4:	f43f aceb 	beq.w	4032ae <_svfprintf_r+0x452>
  4038d8:	f7ff bb92 	b.w	403000 <_svfprintf_r+0x1a4>
  4038dc:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4038e0:	2b01      	cmp	r3, #1
  4038e2:	f000 8134 	beq.w	403b4e <_svfprintf_r+0xcf2>
  4038e6:	2b02      	cmp	r3, #2
  4038e8:	d125      	bne.n	403936 <_svfprintf_r+0xada>
  4038ea:	f8cd b01c 	str.w	fp, [sp, #28]
  4038ee:	2400      	movs	r4, #0
  4038f0:	2500      	movs	r5, #0
  4038f2:	e61e      	b.n	403532 <_svfprintf_r+0x6d6>
  4038f4:	aa25      	add	r2, sp, #148	; 0x94
  4038f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4038f8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4038fa:	f003 ff6b 	bl	4077d4 <__ssprint_r>
  4038fe:	2800      	cmp	r0, #0
  403900:	f47f ab7e 	bne.w	403000 <_svfprintf_r+0x1a4>
  403904:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403906:	46c8      	mov	r8, r9
  403908:	e475      	b.n	4031f6 <_svfprintf_r+0x39a>
  40390a:	aa25      	add	r2, sp, #148	; 0x94
  40390c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40390e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403910:	f003 ff60 	bl	4077d4 <__ssprint_r>
  403914:	2800      	cmp	r0, #0
  403916:	f47f ab73 	bne.w	403000 <_svfprintf_r+0x1a4>
  40391a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40391c:	46c8      	mov	r8, r9
  40391e:	e41b      	b.n	403158 <_svfprintf_r+0x2fc>
  403920:	aa25      	add	r2, sp, #148	; 0x94
  403922:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403924:	980c      	ldr	r0, [sp, #48]	; 0x30
  403926:	f003 ff55 	bl	4077d4 <__ssprint_r>
  40392a:	2800      	cmp	r0, #0
  40392c:	f47f ab68 	bne.w	403000 <_svfprintf_r+0x1a4>
  403930:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403932:	46c8      	mov	r8, r9
  403934:	e420      	b.n	403178 <_svfprintf_r+0x31c>
  403936:	f8cd b01c 	str.w	fp, [sp, #28]
  40393a:	2400      	movs	r4, #0
  40393c:	2500      	movs	r5, #0
  40393e:	4649      	mov	r1, r9
  403940:	e000      	b.n	403944 <_svfprintf_r+0xae8>
  403942:	4631      	mov	r1, r6
  403944:	08e2      	lsrs	r2, r4, #3
  403946:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  40394a:	08e8      	lsrs	r0, r5, #3
  40394c:	f004 0307 	and.w	r3, r4, #7
  403950:	4605      	mov	r5, r0
  403952:	4614      	mov	r4, r2
  403954:	3330      	adds	r3, #48	; 0x30
  403956:	ea54 0205 	orrs.w	r2, r4, r5
  40395a:	f801 3c01 	strb.w	r3, [r1, #-1]
  40395e:	f101 36ff 	add.w	r6, r1, #4294967295
  403962:	d1ee      	bne.n	403942 <_svfprintf_r+0xae6>
  403964:	9a07      	ldr	r2, [sp, #28]
  403966:	07d2      	lsls	r2, r2, #31
  403968:	f57f adf3 	bpl.w	403552 <_svfprintf_r+0x6f6>
  40396c:	2b30      	cmp	r3, #48	; 0x30
  40396e:	f43f adf0 	beq.w	403552 <_svfprintf_r+0x6f6>
  403972:	3902      	subs	r1, #2
  403974:	2330      	movs	r3, #48	; 0x30
  403976:	f806 3c01 	strb.w	r3, [r6, #-1]
  40397a:	eba9 0301 	sub.w	r3, r9, r1
  40397e:	930e      	str	r3, [sp, #56]	; 0x38
  403980:	460e      	mov	r6, r1
  403982:	f7ff bb7b 	b.w	40307c <_svfprintf_r+0x220>
  403986:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403988:	2900      	cmp	r1, #0
  40398a:	f340 822e 	ble.w	403dea <_svfprintf_r+0xf8e>
  40398e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403990:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403992:	4293      	cmp	r3, r2
  403994:	bfa8      	it	ge
  403996:	4613      	movge	r3, r2
  403998:	2b00      	cmp	r3, #0
  40399a:	461f      	mov	r7, r3
  40399c:	dd0d      	ble.n	4039ba <_svfprintf_r+0xb5e>
  40399e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4039a0:	f8c8 6000 	str.w	r6, [r8]
  4039a4:	3301      	adds	r3, #1
  4039a6:	443c      	add	r4, r7
  4039a8:	2b07      	cmp	r3, #7
  4039aa:	9427      	str	r4, [sp, #156]	; 0x9c
  4039ac:	f8c8 7004 	str.w	r7, [r8, #4]
  4039b0:	9326      	str	r3, [sp, #152]	; 0x98
  4039b2:	f300 831f 	bgt.w	403ff4 <_svfprintf_r+0x1198>
  4039b6:	f108 0808 	add.w	r8, r8, #8
  4039ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4039bc:	2f00      	cmp	r7, #0
  4039be:	bfa8      	it	ge
  4039c0:	1bdb      	subge	r3, r3, r7
  4039c2:	2b00      	cmp	r3, #0
  4039c4:	461f      	mov	r7, r3
  4039c6:	f340 80d6 	ble.w	403b76 <_svfprintf_r+0xd1a>
  4039ca:	2f10      	cmp	r7, #16
  4039cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4039ce:	4d31      	ldr	r5, [pc, #196]	; (403a94 <_svfprintf_r+0xc38>)
  4039d0:	f340 81ed 	ble.w	403dae <_svfprintf_r+0xf52>
  4039d4:	4642      	mov	r2, r8
  4039d6:	4621      	mov	r1, r4
  4039d8:	46b0      	mov	r8, r6
  4039da:	f04f 0b10 	mov.w	fp, #16
  4039de:	462e      	mov	r6, r5
  4039e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4039e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4039e4:	e004      	b.n	4039f0 <_svfprintf_r+0xb94>
  4039e6:	3208      	adds	r2, #8
  4039e8:	3f10      	subs	r7, #16
  4039ea:	2f10      	cmp	r7, #16
  4039ec:	f340 81db 	ble.w	403da6 <_svfprintf_r+0xf4a>
  4039f0:	3301      	adds	r3, #1
  4039f2:	3110      	adds	r1, #16
  4039f4:	2b07      	cmp	r3, #7
  4039f6:	9127      	str	r1, [sp, #156]	; 0x9c
  4039f8:	9326      	str	r3, [sp, #152]	; 0x98
  4039fa:	e882 0840 	stmia.w	r2, {r6, fp}
  4039fe:	ddf2      	ble.n	4039e6 <_svfprintf_r+0xb8a>
  403a00:	aa25      	add	r2, sp, #148	; 0x94
  403a02:	4629      	mov	r1, r5
  403a04:	4620      	mov	r0, r4
  403a06:	f003 fee5 	bl	4077d4 <__ssprint_r>
  403a0a:	2800      	cmp	r0, #0
  403a0c:	f47f aaf8 	bne.w	403000 <_svfprintf_r+0x1a4>
  403a10:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403a12:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403a14:	464a      	mov	r2, r9
  403a16:	e7e7      	b.n	4039e8 <_svfprintf_r+0xb8c>
  403a18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a1a:	930e      	str	r3, [sp, #56]	; 0x38
  403a1c:	464e      	mov	r6, r9
  403a1e:	f7ff bb2d 	b.w	40307c <_svfprintf_r+0x220>
  403a22:	2d00      	cmp	r5, #0
  403a24:	bf08      	it	eq
  403a26:	2c0a      	cmpeq	r4, #10
  403a28:	f0c0 808f 	bcc.w	403b4a <_svfprintf_r+0xcee>
  403a2c:	464e      	mov	r6, r9
  403a2e:	4620      	mov	r0, r4
  403a30:	4629      	mov	r1, r5
  403a32:	220a      	movs	r2, #10
  403a34:	2300      	movs	r3, #0
  403a36:	f004 fdd9 	bl	4085ec <__aeabi_uldivmod>
  403a3a:	3230      	adds	r2, #48	; 0x30
  403a3c:	f806 2d01 	strb.w	r2, [r6, #-1]!
  403a40:	4620      	mov	r0, r4
  403a42:	4629      	mov	r1, r5
  403a44:	2300      	movs	r3, #0
  403a46:	220a      	movs	r2, #10
  403a48:	f004 fdd0 	bl	4085ec <__aeabi_uldivmod>
  403a4c:	4604      	mov	r4, r0
  403a4e:	460d      	mov	r5, r1
  403a50:	ea54 0305 	orrs.w	r3, r4, r5
  403a54:	d1eb      	bne.n	403a2e <_svfprintf_r+0xbd2>
  403a56:	eba9 0306 	sub.w	r3, r9, r6
  403a5a:	930e      	str	r3, [sp, #56]	; 0x38
  403a5c:	f7ff bb0e 	b.w	40307c <_svfprintf_r+0x220>
  403a60:	aa25      	add	r2, sp, #148	; 0x94
  403a62:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403a64:	980c      	ldr	r0, [sp, #48]	; 0x30
  403a66:	f003 feb5 	bl	4077d4 <__ssprint_r>
  403a6a:	2800      	cmp	r0, #0
  403a6c:	f47f aac8 	bne.w	403000 <_svfprintf_r+0x1a4>
  403a70:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403a74:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403a76:	46c8      	mov	r8, r9
  403a78:	f7ff bb5e 	b.w	403138 <_svfprintf_r+0x2dc>
  403a7c:	1e5e      	subs	r6, r3, #1
  403a7e:	2e00      	cmp	r6, #0
  403a80:	f77f af0a 	ble.w	403898 <_svfprintf_r+0xa3c>
  403a84:	2e10      	cmp	r6, #16
  403a86:	4d03      	ldr	r5, [pc, #12]	; (403a94 <_svfprintf_r+0xc38>)
  403a88:	dd22      	ble.n	403ad0 <_svfprintf_r+0xc74>
  403a8a:	4622      	mov	r2, r4
  403a8c:	f04f 0b10 	mov.w	fp, #16
  403a90:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403a92:	e006      	b.n	403aa2 <_svfprintf_r+0xc46>
  403a94:	00408a10 	.word	0x00408a10
  403a98:	3e10      	subs	r6, #16
  403a9a:	2e10      	cmp	r6, #16
  403a9c:	f108 0808 	add.w	r8, r8, #8
  403aa0:	dd15      	ble.n	403ace <_svfprintf_r+0xc72>
  403aa2:	3701      	adds	r7, #1
  403aa4:	3210      	adds	r2, #16
  403aa6:	2f07      	cmp	r7, #7
  403aa8:	9227      	str	r2, [sp, #156]	; 0x9c
  403aaa:	9726      	str	r7, [sp, #152]	; 0x98
  403aac:	e888 0820 	stmia.w	r8, {r5, fp}
  403ab0:	ddf2      	ble.n	403a98 <_svfprintf_r+0xc3c>
  403ab2:	aa25      	add	r2, sp, #148	; 0x94
  403ab4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ab6:	4620      	mov	r0, r4
  403ab8:	f003 fe8c 	bl	4077d4 <__ssprint_r>
  403abc:	2800      	cmp	r0, #0
  403abe:	f47f aa9f 	bne.w	403000 <_svfprintf_r+0x1a4>
  403ac2:	3e10      	subs	r6, #16
  403ac4:	2e10      	cmp	r6, #16
  403ac6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403ac8:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403aca:	46c8      	mov	r8, r9
  403acc:	dce9      	bgt.n	403aa2 <_svfprintf_r+0xc46>
  403ace:	4614      	mov	r4, r2
  403ad0:	3701      	adds	r7, #1
  403ad2:	4434      	add	r4, r6
  403ad4:	2f07      	cmp	r7, #7
  403ad6:	9427      	str	r4, [sp, #156]	; 0x9c
  403ad8:	9726      	str	r7, [sp, #152]	; 0x98
  403ada:	e888 0060 	stmia.w	r8, {r5, r6}
  403ade:	f77f aed9 	ble.w	403894 <_svfprintf_r+0xa38>
  403ae2:	aa25      	add	r2, sp, #148	; 0x94
  403ae4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ae6:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ae8:	f003 fe74 	bl	4077d4 <__ssprint_r>
  403aec:	2800      	cmp	r0, #0
  403aee:	f47f aa87 	bne.w	403000 <_svfprintf_r+0x1a4>
  403af2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403af4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403af6:	46c8      	mov	r8, r9
  403af8:	e6ce      	b.n	403898 <_svfprintf_r+0xa3c>
  403afa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403afc:	6814      	ldr	r4, [r2, #0]
  403afe:	4613      	mov	r3, r2
  403b00:	3304      	adds	r3, #4
  403b02:	17e5      	asrs	r5, r4, #31
  403b04:	930f      	str	r3, [sp, #60]	; 0x3c
  403b06:	4622      	mov	r2, r4
  403b08:	462b      	mov	r3, r5
  403b0a:	e4fa      	b.n	403502 <_svfprintf_r+0x6a6>
  403b0c:	3204      	adds	r2, #4
  403b0e:	681c      	ldr	r4, [r3, #0]
  403b10:	920f      	str	r2, [sp, #60]	; 0x3c
  403b12:	2301      	movs	r3, #1
  403b14:	2500      	movs	r5, #0
  403b16:	f7ff ba94 	b.w	403042 <_svfprintf_r+0x1e6>
  403b1a:	681c      	ldr	r4, [r3, #0]
  403b1c:	3304      	adds	r3, #4
  403b1e:	930f      	str	r3, [sp, #60]	; 0x3c
  403b20:	2500      	movs	r5, #0
  403b22:	e421      	b.n	403368 <_svfprintf_r+0x50c>
  403b24:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403b26:	460a      	mov	r2, r1
  403b28:	3204      	adds	r2, #4
  403b2a:	680c      	ldr	r4, [r1, #0]
  403b2c:	920f      	str	r2, [sp, #60]	; 0x3c
  403b2e:	2500      	movs	r5, #0
  403b30:	f7ff ba87 	b.w	403042 <_svfprintf_r+0x1e6>
  403b34:	4614      	mov	r4, r2
  403b36:	3301      	adds	r3, #1
  403b38:	4434      	add	r4, r6
  403b3a:	2b07      	cmp	r3, #7
  403b3c:	9427      	str	r4, [sp, #156]	; 0x9c
  403b3e:	9326      	str	r3, [sp, #152]	; 0x98
  403b40:	e888 0060 	stmia.w	r8, {r5, r6}
  403b44:	f77f ab68 	ble.w	403218 <_svfprintf_r+0x3bc>
  403b48:	e6b3      	b.n	4038b2 <_svfprintf_r+0xa56>
  403b4a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403b4e:	f8cd b01c 	str.w	fp, [sp, #28]
  403b52:	ae42      	add	r6, sp, #264	; 0x108
  403b54:	3430      	adds	r4, #48	; 0x30
  403b56:	2301      	movs	r3, #1
  403b58:	f806 4d41 	strb.w	r4, [r6, #-65]!
  403b5c:	930e      	str	r3, [sp, #56]	; 0x38
  403b5e:	f7ff ba8d 	b.w	40307c <_svfprintf_r+0x220>
  403b62:	aa25      	add	r2, sp, #148	; 0x94
  403b64:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b66:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b68:	f003 fe34 	bl	4077d4 <__ssprint_r>
  403b6c:	2800      	cmp	r0, #0
  403b6e:	f47f aa47 	bne.w	403000 <_svfprintf_r+0x1a4>
  403b72:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b74:	46c8      	mov	r8, r9
  403b76:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403b78:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403b7a:	429a      	cmp	r2, r3
  403b7c:	db44      	blt.n	403c08 <_svfprintf_r+0xdac>
  403b7e:	9b07      	ldr	r3, [sp, #28]
  403b80:	07d9      	lsls	r1, r3, #31
  403b82:	d441      	bmi.n	403c08 <_svfprintf_r+0xdac>
  403b84:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403b86:	9812      	ldr	r0, [sp, #72]	; 0x48
  403b88:	1a9a      	subs	r2, r3, r2
  403b8a:	1a1d      	subs	r5, r3, r0
  403b8c:	4295      	cmp	r5, r2
  403b8e:	bfa8      	it	ge
  403b90:	4615      	movge	r5, r2
  403b92:	2d00      	cmp	r5, #0
  403b94:	dd0e      	ble.n	403bb4 <_svfprintf_r+0xd58>
  403b96:	9926      	ldr	r1, [sp, #152]	; 0x98
  403b98:	f8c8 5004 	str.w	r5, [r8, #4]
  403b9c:	3101      	adds	r1, #1
  403b9e:	4406      	add	r6, r0
  403ba0:	442c      	add	r4, r5
  403ba2:	2907      	cmp	r1, #7
  403ba4:	f8c8 6000 	str.w	r6, [r8]
  403ba8:	9427      	str	r4, [sp, #156]	; 0x9c
  403baa:	9126      	str	r1, [sp, #152]	; 0x98
  403bac:	f300 823b 	bgt.w	404026 <_svfprintf_r+0x11ca>
  403bb0:	f108 0808 	add.w	r8, r8, #8
  403bb4:	2d00      	cmp	r5, #0
  403bb6:	bfac      	ite	ge
  403bb8:	1b56      	subge	r6, r2, r5
  403bba:	4616      	movlt	r6, r2
  403bbc:	2e00      	cmp	r6, #0
  403bbe:	f77f ab2d 	ble.w	40321c <_svfprintf_r+0x3c0>
  403bc2:	2e10      	cmp	r6, #16
  403bc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403bc6:	4db0      	ldr	r5, [pc, #704]	; (403e88 <_svfprintf_r+0x102c>)
  403bc8:	ddb5      	ble.n	403b36 <_svfprintf_r+0xcda>
  403bca:	4622      	mov	r2, r4
  403bcc:	2710      	movs	r7, #16
  403bce:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403bd2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403bd4:	e004      	b.n	403be0 <_svfprintf_r+0xd84>
  403bd6:	f108 0808 	add.w	r8, r8, #8
  403bda:	3e10      	subs	r6, #16
  403bdc:	2e10      	cmp	r6, #16
  403bde:	dda9      	ble.n	403b34 <_svfprintf_r+0xcd8>
  403be0:	3301      	adds	r3, #1
  403be2:	3210      	adds	r2, #16
  403be4:	2b07      	cmp	r3, #7
  403be6:	9227      	str	r2, [sp, #156]	; 0x9c
  403be8:	9326      	str	r3, [sp, #152]	; 0x98
  403bea:	e888 00a0 	stmia.w	r8, {r5, r7}
  403bee:	ddf2      	ble.n	403bd6 <_svfprintf_r+0xd7a>
  403bf0:	aa25      	add	r2, sp, #148	; 0x94
  403bf2:	4621      	mov	r1, r4
  403bf4:	4658      	mov	r0, fp
  403bf6:	f003 fded 	bl	4077d4 <__ssprint_r>
  403bfa:	2800      	cmp	r0, #0
  403bfc:	f47f aa00 	bne.w	403000 <_svfprintf_r+0x1a4>
  403c00:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403c02:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403c04:	46c8      	mov	r8, r9
  403c06:	e7e8      	b.n	403bda <_svfprintf_r+0xd7e>
  403c08:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403c0a:	9819      	ldr	r0, [sp, #100]	; 0x64
  403c0c:	991a      	ldr	r1, [sp, #104]	; 0x68
  403c0e:	f8c8 1000 	str.w	r1, [r8]
  403c12:	3301      	adds	r3, #1
  403c14:	4404      	add	r4, r0
  403c16:	2b07      	cmp	r3, #7
  403c18:	9427      	str	r4, [sp, #156]	; 0x9c
  403c1a:	f8c8 0004 	str.w	r0, [r8, #4]
  403c1e:	9326      	str	r3, [sp, #152]	; 0x98
  403c20:	f300 81f5 	bgt.w	40400e <_svfprintf_r+0x11b2>
  403c24:	f108 0808 	add.w	r8, r8, #8
  403c28:	e7ac      	b.n	403b84 <_svfprintf_r+0xd28>
  403c2a:	9b07      	ldr	r3, [sp, #28]
  403c2c:	07da      	lsls	r2, r3, #31
  403c2e:	f53f adfe 	bmi.w	40382e <_svfprintf_r+0x9d2>
  403c32:	3701      	adds	r7, #1
  403c34:	3401      	adds	r4, #1
  403c36:	2301      	movs	r3, #1
  403c38:	2f07      	cmp	r7, #7
  403c3a:	9427      	str	r4, [sp, #156]	; 0x9c
  403c3c:	9726      	str	r7, [sp, #152]	; 0x98
  403c3e:	f8c8 6000 	str.w	r6, [r8]
  403c42:	f8c8 3004 	str.w	r3, [r8, #4]
  403c46:	f77f ae25 	ble.w	403894 <_svfprintf_r+0xa38>
  403c4a:	e74a      	b.n	403ae2 <_svfprintf_r+0xc86>
  403c4c:	aa25      	add	r2, sp, #148	; 0x94
  403c4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403c50:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c52:	f003 fdbf 	bl	4077d4 <__ssprint_r>
  403c56:	2800      	cmp	r0, #0
  403c58:	f47f a9d2 	bne.w	403000 <_svfprintf_r+0x1a4>
  403c5c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c5e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403c60:	46c8      	mov	r8, r9
  403c62:	e5f2      	b.n	40384a <_svfprintf_r+0x9ee>
  403c64:	aa25      	add	r2, sp, #148	; 0x94
  403c66:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403c68:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c6a:	f003 fdb3 	bl	4077d4 <__ssprint_r>
  403c6e:	2800      	cmp	r0, #0
  403c70:	f47f a9c6 	bne.w	403000 <_svfprintf_r+0x1a4>
  403c74:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c76:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403c78:	46c8      	mov	r8, r9
  403c7a:	e5f5      	b.n	403868 <_svfprintf_r+0xa0c>
  403c7c:	464e      	mov	r6, r9
  403c7e:	f7ff b9fd 	b.w	40307c <_svfprintf_r+0x220>
  403c82:	aa25      	add	r2, sp, #148	; 0x94
  403c84:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403c86:	980c      	ldr	r0, [sp, #48]	; 0x30
  403c88:	f003 fda4 	bl	4077d4 <__ssprint_r>
  403c8c:	2800      	cmp	r0, #0
  403c8e:	f47f a9b7 	bne.w	403000 <_svfprintf_r+0x1a4>
  403c92:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403c94:	46c8      	mov	r8, r9
  403c96:	f7ff ba72 	b.w	40317e <_svfprintf_r+0x322>
  403c9a:	9c15      	ldr	r4, [sp, #84]	; 0x54
  403c9c:	4622      	mov	r2, r4
  403c9e:	4620      	mov	r0, r4
  403ca0:	9c14      	ldr	r4, [sp, #80]	; 0x50
  403ca2:	4623      	mov	r3, r4
  403ca4:	4621      	mov	r1, r4
  403ca6:	f004 fc63 	bl	408570 <__aeabi_dcmpun>
  403caa:	2800      	cmp	r0, #0
  403cac:	f040 8286 	bne.w	4041bc <_svfprintf_r+0x1360>
  403cb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cb2:	3301      	adds	r3, #1
  403cb4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403cb6:	f023 0320 	bic.w	r3, r3, #32
  403cba:	930e      	str	r3, [sp, #56]	; 0x38
  403cbc:	f000 81e2 	beq.w	404084 <_svfprintf_r+0x1228>
  403cc0:	2b47      	cmp	r3, #71	; 0x47
  403cc2:	f000 811e 	beq.w	403f02 <_svfprintf_r+0x10a6>
  403cc6:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  403cca:	9307      	str	r3, [sp, #28]
  403ccc:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403cce:	1e1f      	subs	r7, r3, #0
  403cd0:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403cd2:	9308      	str	r3, [sp, #32]
  403cd4:	bfbb      	ittet	lt
  403cd6:	463b      	movlt	r3, r7
  403cd8:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403cdc:	2300      	movge	r3, #0
  403cde:	232d      	movlt	r3, #45	; 0x2d
  403ce0:	9310      	str	r3, [sp, #64]	; 0x40
  403ce2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403ce4:	2b66      	cmp	r3, #102	; 0x66
  403ce6:	f000 81bb 	beq.w	404060 <_svfprintf_r+0x1204>
  403cea:	2b46      	cmp	r3, #70	; 0x46
  403cec:	f000 80df 	beq.w	403eae <_svfprintf_r+0x1052>
  403cf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403cf2:	9a08      	ldr	r2, [sp, #32]
  403cf4:	2b45      	cmp	r3, #69	; 0x45
  403cf6:	bf0c      	ite	eq
  403cf8:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  403cfa:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403cfc:	a823      	add	r0, sp, #140	; 0x8c
  403cfe:	a920      	add	r1, sp, #128	; 0x80
  403d00:	bf08      	it	eq
  403d02:	1c5d      	addeq	r5, r3, #1
  403d04:	9004      	str	r0, [sp, #16]
  403d06:	9103      	str	r1, [sp, #12]
  403d08:	a81f      	add	r0, sp, #124	; 0x7c
  403d0a:	2102      	movs	r1, #2
  403d0c:	463b      	mov	r3, r7
  403d0e:	9002      	str	r0, [sp, #8]
  403d10:	9501      	str	r5, [sp, #4]
  403d12:	9100      	str	r1, [sp, #0]
  403d14:	980c      	ldr	r0, [sp, #48]	; 0x30
  403d16:	f001 faa3 	bl	405260 <_dtoa_r>
  403d1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403d1c:	2b67      	cmp	r3, #103	; 0x67
  403d1e:	4606      	mov	r6, r0
  403d20:	f040 81e0 	bne.w	4040e4 <_svfprintf_r+0x1288>
  403d24:	f01b 0f01 	tst.w	fp, #1
  403d28:	f000 8246 	beq.w	4041b8 <_svfprintf_r+0x135c>
  403d2c:	1974      	adds	r4, r6, r5
  403d2e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403d30:	9808      	ldr	r0, [sp, #32]
  403d32:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403d34:	4639      	mov	r1, r7
  403d36:	f004 fbe9 	bl	40850c <__aeabi_dcmpeq>
  403d3a:	2800      	cmp	r0, #0
  403d3c:	f040 8165 	bne.w	40400a <_svfprintf_r+0x11ae>
  403d40:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403d42:	42a3      	cmp	r3, r4
  403d44:	d206      	bcs.n	403d54 <_svfprintf_r+0xef8>
  403d46:	2130      	movs	r1, #48	; 0x30
  403d48:	1c5a      	adds	r2, r3, #1
  403d4a:	9223      	str	r2, [sp, #140]	; 0x8c
  403d4c:	7019      	strb	r1, [r3, #0]
  403d4e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403d50:	429c      	cmp	r4, r3
  403d52:	d8f9      	bhi.n	403d48 <_svfprintf_r+0xeec>
  403d54:	1b9b      	subs	r3, r3, r6
  403d56:	9313      	str	r3, [sp, #76]	; 0x4c
  403d58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403d5a:	2b47      	cmp	r3, #71	; 0x47
  403d5c:	f000 80e9 	beq.w	403f32 <_svfprintf_r+0x10d6>
  403d60:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403d62:	2b65      	cmp	r3, #101	; 0x65
  403d64:	f340 81cd 	ble.w	404102 <_svfprintf_r+0x12a6>
  403d68:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403d6a:	2b66      	cmp	r3, #102	; 0x66
  403d6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403d6e:	9312      	str	r3, [sp, #72]	; 0x48
  403d70:	f000 819e 	beq.w	4040b0 <_svfprintf_r+0x1254>
  403d74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403d76:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403d78:	4619      	mov	r1, r3
  403d7a:	4291      	cmp	r1, r2
  403d7c:	f300 818a 	bgt.w	404094 <_svfprintf_r+0x1238>
  403d80:	f01b 0f01 	tst.w	fp, #1
  403d84:	f040 8213 	bne.w	4041ae <_svfprintf_r+0x1352>
  403d88:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403d8c:	9308      	str	r3, [sp, #32]
  403d8e:	2367      	movs	r3, #103	; 0x67
  403d90:	920e      	str	r2, [sp, #56]	; 0x38
  403d92:	9311      	str	r3, [sp, #68]	; 0x44
  403d94:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403d96:	2b00      	cmp	r3, #0
  403d98:	f040 80c4 	bne.w	403f24 <_svfprintf_r+0x10c8>
  403d9c:	930a      	str	r3, [sp, #40]	; 0x28
  403d9e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403da2:	f7ff b973 	b.w	40308c <_svfprintf_r+0x230>
  403da6:	4635      	mov	r5, r6
  403da8:	460c      	mov	r4, r1
  403daa:	4646      	mov	r6, r8
  403dac:	4690      	mov	r8, r2
  403dae:	3301      	adds	r3, #1
  403db0:	443c      	add	r4, r7
  403db2:	2b07      	cmp	r3, #7
  403db4:	9427      	str	r4, [sp, #156]	; 0x9c
  403db6:	9326      	str	r3, [sp, #152]	; 0x98
  403db8:	e888 00a0 	stmia.w	r8, {r5, r7}
  403dbc:	f73f aed1 	bgt.w	403b62 <_svfprintf_r+0xd06>
  403dc0:	f108 0808 	add.w	r8, r8, #8
  403dc4:	e6d7      	b.n	403b76 <_svfprintf_r+0xd1a>
  403dc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403dc8:	6813      	ldr	r3, [r2, #0]
  403dca:	3204      	adds	r2, #4
  403dcc:	920f      	str	r2, [sp, #60]	; 0x3c
  403dce:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403dd0:	601a      	str	r2, [r3, #0]
  403dd2:	f7ff b86a 	b.w	402eaa <_svfprintf_r+0x4e>
  403dd6:	aa25      	add	r2, sp, #148	; 0x94
  403dd8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403dda:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ddc:	f003 fcfa 	bl	4077d4 <__ssprint_r>
  403de0:	2800      	cmp	r0, #0
  403de2:	f47f a90d 	bne.w	403000 <_svfprintf_r+0x1a4>
  403de6:	46c8      	mov	r8, r9
  403de8:	e48d      	b.n	403706 <_svfprintf_r+0x8aa>
  403dea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403dec:	4a27      	ldr	r2, [pc, #156]	; (403e8c <_svfprintf_r+0x1030>)
  403dee:	f8c8 2000 	str.w	r2, [r8]
  403df2:	3301      	adds	r3, #1
  403df4:	3401      	adds	r4, #1
  403df6:	2201      	movs	r2, #1
  403df8:	2b07      	cmp	r3, #7
  403dfa:	9427      	str	r4, [sp, #156]	; 0x9c
  403dfc:	9326      	str	r3, [sp, #152]	; 0x98
  403dfe:	f8c8 2004 	str.w	r2, [r8, #4]
  403e02:	dc72      	bgt.n	403eea <_svfprintf_r+0x108e>
  403e04:	f108 0808 	add.w	r8, r8, #8
  403e08:	b929      	cbnz	r1, 403e16 <_svfprintf_r+0xfba>
  403e0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403e0c:	b91b      	cbnz	r3, 403e16 <_svfprintf_r+0xfba>
  403e0e:	9b07      	ldr	r3, [sp, #28]
  403e10:	07d8      	lsls	r0, r3, #31
  403e12:	f57f aa03 	bpl.w	40321c <_svfprintf_r+0x3c0>
  403e16:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403e18:	9819      	ldr	r0, [sp, #100]	; 0x64
  403e1a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403e1c:	f8c8 2000 	str.w	r2, [r8]
  403e20:	3301      	adds	r3, #1
  403e22:	4602      	mov	r2, r0
  403e24:	4422      	add	r2, r4
  403e26:	2b07      	cmp	r3, #7
  403e28:	9227      	str	r2, [sp, #156]	; 0x9c
  403e2a:	f8c8 0004 	str.w	r0, [r8, #4]
  403e2e:	9326      	str	r3, [sp, #152]	; 0x98
  403e30:	f300 818d 	bgt.w	40414e <_svfprintf_r+0x12f2>
  403e34:	f108 0808 	add.w	r8, r8, #8
  403e38:	2900      	cmp	r1, #0
  403e3a:	f2c0 8165 	blt.w	404108 <_svfprintf_r+0x12ac>
  403e3e:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403e40:	f8c8 6000 	str.w	r6, [r8]
  403e44:	3301      	adds	r3, #1
  403e46:	188c      	adds	r4, r1, r2
  403e48:	2b07      	cmp	r3, #7
  403e4a:	9427      	str	r4, [sp, #156]	; 0x9c
  403e4c:	9326      	str	r3, [sp, #152]	; 0x98
  403e4e:	f8c8 1004 	str.w	r1, [r8, #4]
  403e52:	f77f a9e1 	ble.w	403218 <_svfprintf_r+0x3bc>
  403e56:	e52c      	b.n	4038b2 <_svfprintf_r+0xa56>
  403e58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403e5a:	9909      	ldr	r1, [sp, #36]	; 0x24
  403e5c:	6813      	ldr	r3, [r2, #0]
  403e5e:	17cd      	asrs	r5, r1, #31
  403e60:	4608      	mov	r0, r1
  403e62:	3204      	adds	r2, #4
  403e64:	4629      	mov	r1, r5
  403e66:	920f      	str	r2, [sp, #60]	; 0x3c
  403e68:	e9c3 0100 	strd	r0, r1, [r3]
  403e6c:	f7ff b81d 	b.w	402eaa <_svfprintf_r+0x4e>
  403e70:	aa25      	add	r2, sp, #148	; 0x94
  403e72:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403e74:	980c      	ldr	r0, [sp, #48]	; 0x30
  403e76:	f003 fcad 	bl	4077d4 <__ssprint_r>
  403e7a:	2800      	cmp	r0, #0
  403e7c:	f47f a8c0 	bne.w	403000 <_svfprintf_r+0x1a4>
  403e80:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403e82:	46c8      	mov	r8, r9
  403e84:	e458      	b.n	403738 <_svfprintf_r+0x8dc>
  403e86:	bf00      	nop
  403e88:	00408a10 	.word	0x00408a10
  403e8c:	004089fc 	.word	0x004089fc
  403e90:	2140      	movs	r1, #64	; 0x40
  403e92:	980c      	ldr	r0, [sp, #48]	; 0x30
  403e94:	f7fe fadc 	bl	402450 <_malloc_r>
  403e98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403e9a:	6010      	str	r0, [r2, #0]
  403e9c:	6110      	str	r0, [r2, #16]
  403e9e:	2800      	cmp	r0, #0
  403ea0:	f000 81f2 	beq.w	404288 <_svfprintf_r+0x142c>
  403ea4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403ea6:	2340      	movs	r3, #64	; 0x40
  403ea8:	6153      	str	r3, [r2, #20]
  403eaa:	f7fe bfee 	b.w	402e8a <_svfprintf_r+0x2e>
  403eae:	a823      	add	r0, sp, #140	; 0x8c
  403eb0:	a920      	add	r1, sp, #128	; 0x80
  403eb2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403eb4:	9004      	str	r0, [sp, #16]
  403eb6:	9103      	str	r1, [sp, #12]
  403eb8:	a81f      	add	r0, sp, #124	; 0x7c
  403eba:	2103      	movs	r1, #3
  403ebc:	9002      	str	r0, [sp, #8]
  403ebe:	9a08      	ldr	r2, [sp, #32]
  403ec0:	9401      	str	r4, [sp, #4]
  403ec2:	463b      	mov	r3, r7
  403ec4:	9100      	str	r1, [sp, #0]
  403ec6:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ec8:	f001 f9ca 	bl	405260 <_dtoa_r>
  403ecc:	4625      	mov	r5, r4
  403ece:	4606      	mov	r6, r0
  403ed0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403ed2:	2b46      	cmp	r3, #70	; 0x46
  403ed4:	eb06 0405 	add.w	r4, r6, r5
  403ed8:	f47f af29 	bne.w	403d2e <_svfprintf_r+0xed2>
  403edc:	7833      	ldrb	r3, [r6, #0]
  403ede:	2b30      	cmp	r3, #48	; 0x30
  403ee0:	f000 8178 	beq.w	4041d4 <_svfprintf_r+0x1378>
  403ee4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403ee6:	442c      	add	r4, r5
  403ee8:	e721      	b.n	403d2e <_svfprintf_r+0xed2>
  403eea:	aa25      	add	r2, sp, #148	; 0x94
  403eec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403eee:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ef0:	f003 fc70 	bl	4077d4 <__ssprint_r>
  403ef4:	2800      	cmp	r0, #0
  403ef6:	f47f a883 	bne.w	403000 <_svfprintf_r+0x1a4>
  403efa:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403efc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403efe:	46c8      	mov	r8, r9
  403f00:	e782      	b.n	403e08 <_svfprintf_r+0xfac>
  403f02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f04:	2b00      	cmp	r3, #0
  403f06:	bf08      	it	eq
  403f08:	2301      	moveq	r3, #1
  403f0a:	930a      	str	r3, [sp, #40]	; 0x28
  403f0c:	e6db      	b.n	403cc6 <_svfprintf_r+0xe6a>
  403f0e:	4630      	mov	r0, r6
  403f10:	940a      	str	r4, [sp, #40]	; 0x28
  403f12:	f7fe ff35 	bl	402d80 <strlen>
  403f16:	950f      	str	r5, [sp, #60]	; 0x3c
  403f18:	900e      	str	r0, [sp, #56]	; 0x38
  403f1a:	f8cd b01c 	str.w	fp, [sp, #28]
  403f1e:	4603      	mov	r3, r0
  403f20:	f7ff b9f9 	b.w	403316 <_svfprintf_r+0x4ba>
  403f24:	272d      	movs	r7, #45	; 0x2d
  403f26:	2300      	movs	r3, #0
  403f28:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403f2c:	930a      	str	r3, [sp, #40]	; 0x28
  403f2e:	f7ff b8ae 	b.w	40308e <_svfprintf_r+0x232>
  403f32:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403f34:	9312      	str	r3, [sp, #72]	; 0x48
  403f36:	461a      	mov	r2, r3
  403f38:	3303      	adds	r3, #3
  403f3a:	db04      	blt.n	403f46 <_svfprintf_r+0x10ea>
  403f3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f3e:	4619      	mov	r1, r3
  403f40:	4291      	cmp	r1, r2
  403f42:	f6bf af17 	bge.w	403d74 <_svfprintf_r+0xf18>
  403f46:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403f48:	3b02      	subs	r3, #2
  403f4a:	9311      	str	r3, [sp, #68]	; 0x44
  403f4c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403f50:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403f54:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403f56:	3b01      	subs	r3, #1
  403f58:	2b00      	cmp	r3, #0
  403f5a:	931f      	str	r3, [sp, #124]	; 0x7c
  403f5c:	bfbd      	ittte	lt
  403f5e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403f60:	f1c3 0301 	rsblt	r3, r3, #1
  403f64:	222d      	movlt	r2, #45	; 0x2d
  403f66:	222b      	movge	r2, #43	; 0x2b
  403f68:	2b09      	cmp	r3, #9
  403f6a:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  403f6e:	f340 8116 	ble.w	40419e <_svfprintf_r+0x1342>
  403f72:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403f76:	4620      	mov	r0, r4
  403f78:	4dab      	ldr	r5, [pc, #684]	; (404228 <_svfprintf_r+0x13cc>)
  403f7a:	e000      	b.n	403f7e <_svfprintf_r+0x1122>
  403f7c:	4610      	mov	r0, r2
  403f7e:	fb85 1203 	smull	r1, r2, r5, r3
  403f82:	17d9      	asrs	r1, r3, #31
  403f84:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403f88:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403f8c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403f90:	3230      	adds	r2, #48	; 0x30
  403f92:	2909      	cmp	r1, #9
  403f94:	f800 2c01 	strb.w	r2, [r0, #-1]
  403f98:	460b      	mov	r3, r1
  403f9a:	f100 32ff 	add.w	r2, r0, #4294967295
  403f9e:	dced      	bgt.n	403f7c <_svfprintf_r+0x1120>
  403fa0:	3330      	adds	r3, #48	; 0x30
  403fa2:	3802      	subs	r0, #2
  403fa4:	b2d9      	uxtb	r1, r3
  403fa6:	4284      	cmp	r4, r0
  403fa8:	f802 1c01 	strb.w	r1, [r2, #-1]
  403fac:	f240 8165 	bls.w	40427a <_svfprintf_r+0x141e>
  403fb0:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403fb4:	4613      	mov	r3, r2
  403fb6:	e001      	b.n	403fbc <_svfprintf_r+0x1160>
  403fb8:	f813 1b01 	ldrb.w	r1, [r3], #1
  403fbc:	f800 1b01 	strb.w	r1, [r0], #1
  403fc0:	42a3      	cmp	r3, r4
  403fc2:	d1f9      	bne.n	403fb8 <_svfprintf_r+0x115c>
  403fc4:	3301      	adds	r3, #1
  403fc6:	1a9b      	subs	r3, r3, r2
  403fc8:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403fcc:	4413      	add	r3, r2
  403fce:	aa21      	add	r2, sp, #132	; 0x84
  403fd0:	1a9b      	subs	r3, r3, r2
  403fd2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403fd4:	931b      	str	r3, [sp, #108]	; 0x6c
  403fd6:	2a01      	cmp	r2, #1
  403fd8:	4413      	add	r3, r2
  403fda:	930e      	str	r3, [sp, #56]	; 0x38
  403fdc:	f340 8119 	ble.w	404212 <_svfprintf_r+0x13b6>
  403fe0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403fe2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403fe4:	4413      	add	r3, r2
  403fe6:	930e      	str	r3, [sp, #56]	; 0x38
  403fe8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403fec:	9308      	str	r3, [sp, #32]
  403fee:	2300      	movs	r3, #0
  403ff0:	9312      	str	r3, [sp, #72]	; 0x48
  403ff2:	e6cf      	b.n	403d94 <_svfprintf_r+0xf38>
  403ff4:	aa25      	add	r2, sp, #148	; 0x94
  403ff6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ff8:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ffa:	f003 fbeb 	bl	4077d4 <__ssprint_r>
  403ffe:	2800      	cmp	r0, #0
  404000:	f47e affe 	bne.w	403000 <_svfprintf_r+0x1a4>
  404004:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404006:	46c8      	mov	r8, r9
  404008:	e4d7      	b.n	4039ba <_svfprintf_r+0xb5e>
  40400a:	4623      	mov	r3, r4
  40400c:	e6a2      	b.n	403d54 <_svfprintf_r+0xef8>
  40400e:	aa25      	add	r2, sp, #148	; 0x94
  404010:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404012:	980c      	ldr	r0, [sp, #48]	; 0x30
  404014:	f003 fbde 	bl	4077d4 <__ssprint_r>
  404018:	2800      	cmp	r0, #0
  40401a:	f47e aff1 	bne.w	403000 <_svfprintf_r+0x1a4>
  40401e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404020:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404022:	46c8      	mov	r8, r9
  404024:	e5ae      	b.n	403b84 <_svfprintf_r+0xd28>
  404026:	aa25      	add	r2, sp, #148	; 0x94
  404028:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40402a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40402c:	f003 fbd2 	bl	4077d4 <__ssprint_r>
  404030:	2800      	cmp	r0, #0
  404032:	f47e afe5 	bne.w	403000 <_svfprintf_r+0x1a4>
  404036:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404038:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40403a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40403c:	1a9a      	subs	r2, r3, r2
  40403e:	46c8      	mov	r8, r9
  404040:	e5b8      	b.n	403bb4 <_svfprintf_r+0xd58>
  404042:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404044:	9612      	str	r6, [sp, #72]	; 0x48
  404046:	2b06      	cmp	r3, #6
  404048:	bf28      	it	cs
  40404a:	2306      	movcs	r3, #6
  40404c:	960a      	str	r6, [sp, #40]	; 0x28
  40404e:	4637      	mov	r7, r6
  404050:	9308      	str	r3, [sp, #32]
  404052:	950f      	str	r5, [sp, #60]	; 0x3c
  404054:	f8cd b01c 	str.w	fp, [sp, #28]
  404058:	930e      	str	r3, [sp, #56]	; 0x38
  40405a:	4e74      	ldr	r6, [pc, #464]	; (40422c <_svfprintf_r+0x13d0>)
  40405c:	f7ff b816 	b.w	40308c <_svfprintf_r+0x230>
  404060:	a823      	add	r0, sp, #140	; 0x8c
  404062:	a920      	add	r1, sp, #128	; 0x80
  404064:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  404066:	9004      	str	r0, [sp, #16]
  404068:	9103      	str	r1, [sp, #12]
  40406a:	a81f      	add	r0, sp, #124	; 0x7c
  40406c:	2103      	movs	r1, #3
  40406e:	9002      	str	r0, [sp, #8]
  404070:	9a08      	ldr	r2, [sp, #32]
  404072:	9501      	str	r5, [sp, #4]
  404074:	463b      	mov	r3, r7
  404076:	9100      	str	r1, [sp, #0]
  404078:	980c      	ldr	r0, [sp, #48]	; 0x30
  40407a:	f001 f8f1 	bl	405260 <_dtoa_r>
  40407e:	4606      	mov	r6, r0
  404080:	1944      	adds	r4, r0, r5
  404082:	e72b      	b.n	403edc <_svfprintf_r+0x1080>
  404084:	2306      	movs	r3, #6
  404086:	930a      	str	r3, [sp, #40]	; 0x28
  404088:	e61d      	b.n	403cc6 <_svfprintf_r+0xe6a>
  40408a:	272d      	movs	r7, #45	; 0x2d
  40408c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404090:	f7ff bacd 	b.w	40362e <_svfprintf_r+0x7d2>
  404094:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404096:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404098:	4413      	add	r3, r2
  40409a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40409c:	930e      	str	r3, [sp, #56]	; 0x38
  40409e:	2a00      	cmp	r2, #0
  4040a0:	f340 80b0 	ble.w	404204 <_svfprintf_r+0x13a8>
  4040a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4040a8:	9308      	str	r3, [sp, #32]
  4040aa:	2367      	movs	r3, #103	; 0x67
  4040ac:	9311      	str	r3, [sp, #68]	; 0x44
  4040ae:	e671      	b.n	403d94 <_svfprintf_r+0xf38>
  4040b0:	2b00      	cmp	r3, #0
  4040b2:	f340 80c3 	ble.w	40423c <_svfprintf_r+0x13e0>
  4040b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4040b8:	2a00      	cmp	r2, #0
  4040ba:	f040 8099 	bne.w	4041f0 <_svfprintf_r+0x1394>
  4040be:	f01b 0f01 	tst.w	fp, #1
  4040c2:	f040 8095 	bne.w	4041f0 <_svfprintf_r+0x1394>
  4040c6:	9308      	str	r3, [sp, #32]
  4040c8:	930e      	str	r3, [sp, #56]	; 0x38
  4040ca:	e663      	b.n	403d94 <_svfprintf_r+0xf38>
  4040cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4040ce:	9308      	str	r3, [sp, #32]
  4040d0:	930e      	str	r3, [sp, #56]	; 0x38
  4040d2:	900a      	str	r0, [sp, #40]	; 0x28
  4040d4:	950f      	str	r5, [sp, #60]	; 0x3c
  4040d6:	f8cd b01c 	str.w	fp, [sp, #28]
  4040da:	9012      	str	r0, [sp, #72]	; 0x48
  4040dc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4040e0:	f7fe bfd4 	b.w	40308c <_svfprintf_r+0x230>
  4040e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4040e6:	2b47      	cmp	r3, #71	; 0x47
  4040e8:	f47f ae20 	bne.w	403d2c <_svfprintf_r+0xed0>
  4040ec:	f01b 0f01 	tst.w	fp, #1
  4040f0:	f47f aeee 	bne.w	403ed0 <_svfprintf_r+0x1074>
  4040f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4040f6:	1b9b      	subs	r3, r3, r6
  4040f8:	9313      	str	r3, [sp, #76]	; 0x4c
  4040fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4040fc:	2b47      	cmp	r3, #71	; 0x47
  4040fe:	f43f af18 	beq.w	403f32 <_svfprintf_r+0x10d6>
  404102:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404104:	9312      	str	r3, [sp, #72]	; 0x48
  404106:	e721      	b.n	403f4c <_svfprintf_r+0x10f0>
  404108:	424f      	negs	r7, r1
  40410a:	3110      	adds	r1, #16
  40410c:	4d48      	ldr	r5, [pc, #288]	; (404230 <_svfprintf_r+0x13d4>)
  40410e:	da2f      	bge.n	404170 <_svfprintf_r+0x1314>
  404110:	2410      	movs	r4, #16
  404112:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404116:	e004      	b.n	404122 <_svfprintf_r+0x12c6>
  404118:	f108 0808 	add.w	r8, r8, #8
  40411c:	3f10      	subs	r7, #16
  40411e:	2f10      	cmp	r7, #16
  404120:	dd26      	ble.n	404170 <_svfprintf_r+0x1314>
  404122:	3301      	adds	r3, #1
  404124:	3210      	adds	r2, #16
  404126:	2b07      	cmp	r3, #7
  404128:	9227      	str	r2, [sp, #156]	; 0x9c
  40412a:	9326      	str	r3, [sp, #152]	; 0x98
  40412c:	f8c8 5000 	str.w	r5, [r8]
  404130:	f8c8 4004 	str.w	r4, [r8, #4]
  404134:	ddf0      	ble.n	404118 <_svfprintf_r+0x12bc>
  404136:	aa25      	add	r2, sp, #148	; 0x94
  404138:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40413a:	4658      	mov	r0, fp
  40413c:	f003 fb4a 	bl	4077d4 <__ssprint_r>
  404140:	2800      	cmp	r0, #0
  404142:	f47e af5d 	bne.w	403000 <_svfprintf_r+0x1a4>
  404146:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404148:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40414a:	46c8      	mov	r8, r9
  40414c:	e7e6      	b.n	40411c <_svfprintf_r+0x12c0>
  40414e:	aa25      	add	r2, sp, #148	; 0x94
  404150:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404152:	980c      	ldr	r0, [sp, #48]	; 0x30
  404154:	f003 fb3e 	bl	4077d4 <__ssprint_r>
  404158:	2800      	cmp	r0, #0
  40415a:	f47e af51 	bne.w	403000 <_svfprintf_r+0x1a4>
  40415e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  404160:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404162:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404164:	46c8      	mov	r8, r9
  404166:	e667      	b.n	403e38 <_svfprintf_r+0xfdc>
  404168:	2000      	movs	r0, #0
  40416a:	900a      	str	r0, [sp, #40]	; 0x28
  40416c:	f7fe bed0 	b.w	402f10 <_svfprintf_r+0xb4>
  404170:	3301      	adds	r3, #1
  404172:	443a      	add	r2, r7
  404174:	2b07      	cmp	r3, #7
  404176:	e888 00a0 	stmia.w	r8, {r5, r7}
  40417a:	9227      	str	r2, [sp, #156]	; 0x9c
  40417c:	9326      	str	r3, [sp, #152]	; 0x98
  40417e:	f108 0808 	add.w	r8, r8, #8
  404182:	f77f ae5c 	ble.w	403e3e <_svfprintf_r+0xfe2>
  404186:	aa25      	add	r2, sp, #148	; 0x94
  404188:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40418a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40418c:	f003 fb22 	bl	4077d4 <__ssprint_r>
  404190:	2800      	cmp	r0, #0
  404192:	f47e af35 	bne.w	403000 <_svfprintf_r+0x1a4>
  404196:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404198:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40419a:	46c8      	mov	r8, r9
  40419c:	e64f      	b.n	403e3e <_svfprintf_r+0xfe2>
  40419e:	3330      	adds	r3, #48	; 0x30
  4041a0:	2230      	movs	r2, #48	; 0x30
  4041a2:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4041a6:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4041aa:	ab22      	add	r3, sp, #136	; 0x88
  4041ac:	e70f      	b.n	403fce <_svfprintf_r+0x1172>
  4041ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041b0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4041b2:	4413      	add	r3, r2
  4041b4:	930e      	str	r3, [sp, #56]	; 0x38
  4041b6:	e775      	b.n	4040a4 <_svfprintf_r+0x1248>
  4041b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4041ba:	e5cb      	b.n	403d54 <_svfprintf_r+0xef8>
  4041bc:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4041be:	4e1d      	ldr	r6, [pc, #116]	; (404234 <_svfprintf_r+0x13d8>)
  4041c0:	2b00      	cmp	r3, #0
  4041c2:	bfb6      	itet	lt
  4041c4:	272d      	movlt	r7, #45	; 0x2d
  4041c6:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4041ca:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4041ce:	4b1a      	ldr	r3, [pc, #104]	; (404238 <_svfprintf_r+0x13dc>)
  4041d0:	f7ff ba2f 	b.w	403632 <_svfprintf_r+0x7d6>
  4041d4:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4041d6:	9808      	ldr	r0, [sp, #32]
  4041d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4041da:	4639      	mov	r1, r7
  4041dc:	f004 f996 	bl	40850c <__aeabi_dcmpeq>
  4041e0:	2800      	cmp	r0, #0
  4041e2:	f47f ae7f 	bne.w	403ee4 <_svfprintf_r+0x1088>
  4041e6:	f1c5 0501 	rsb	r5, r5, #1
  4041ea:	951f      	str	r5, [sp, #124]	; 0x7c
  4041ec:	442c      	add	r4, r5
  4041ee:	e59e      	b.n	403d2e <_svfprintf_r+0xed2>
  4041f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041f2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4041f4:	4413      	add	r3, r2
  4041f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4041f8:	441a      	add	r2, r3
  4041fa:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4041fe:	920e      	str	r2, [sp, #56]	; 0x38
  404200:	9308      	str	r3, [sp, #32]
  404202:	e5c7      	b.n	403d94 <_svfprintf_r+0xf38>
  404204:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404206:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404208:	f1c3 0301 	rsb	r3, r3, #1
  40420c:	441a      	add	r2, r3
  40420e:	4613      	mov	r3, r2
  404210:	e7d0      	b.n	4041b4 <_svfprintf_r+0x1358>
  404212:	f01b 0301 	ands.w	r3, fp, #1
  404216:	9312      	str	r3, [sp, #72]	; 0x48
  404218:	f47f aee2 	bne.w	403fe0 <_svfprintf_r+0x1184>
  40421c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40421e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404222:	9308      	str	r3, [sp, #32]
  404224:	e5b6      	b.n	403d94 <_svfprintf_r+0xf38>
  404226:	bf00      	nop
  404228:	66666667 	.word	0x66666667
  40422c:	004089f4 	.word	0x004089f4
  404230:	00408a10 	.word	0x00408a10
  404234:	004089c8 	.word	0x004089c8
  404238:	004089c4 	.word	0x004089c4
  40423c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40423e:	b913      	cbnz	r3, 404246 <_svfprintf_r+0x13ea>
  404240:	f01b 0f01 	tst.w	fp, #1
  404244:	d002      	beq.n	40424c <_svfprintf_r+0x13f0>
  404246:	9b19      	ldr	r3, [sp, #100]	; 0x64
  404248:	3301      	adds	r3, #1
  40424a:	e7d4      	b.n	4041f6 <_svfprintf_r+0x139a>
  40424c:	2301      	movs	r3, #1
  40424e:	e73a      	b.n	4040c6 <_svfprintf_r+0x126a>
  404250:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404252:	f89a 3001 	ldrb.w	r3, [sl, #1]
  404256:	6828      	ldr	r0, [r5, #0]
  404258:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  40425c:	900a      	str	r0, [sp, #40]	; 0x28
  40425e:	4628      	mov	r0, r5
  404260:	3004      	adds	r0, #4
  404262:	46a2      	mov	sl, r4
  404264:	900f      	str	r0, [sp, #60]	; 0x3c
  404266:	f7fe be51 	b.w	402f0c <_svfprintf_r+0xb0>
  40426a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40426e:	f7ff b867 	b.w	403340 <_svfprintf_r+0x4e4>
  404272:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404276:	f7ff ba15 	b.w	4036a4 <_svfprintf_r+0x848>
  40427a:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40427e:	e6a6      	b.n	403fce <_svfprintf_r+0x1172>
  404280:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404284:	f7ff b8eb 	b.w	40345e <_svfprintf_r+0x602>
  404288:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40428a:	230c      	movs	r3, #12
  40428c:	6013      	str	r3, [r2, #0]
  40428e:	f04f 33ff 	mov.w	r3, #4294967295
  404292:	9309      	str	r3, [sp, #36]	; 0x24
  404294:	f7fe bebd 	b.w	403012 <_svfprintf_r+0x1b6>
  404298:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40429c:	f7ff b99a 	b.w	4035d4 <_svfprintf_r+0x778>
  4042a0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4042a4:	f7ff b976 	b.w	403594 <_svfprintf_r+0x738>
  4042a8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4042ac:	f7ff b959 	b.w	403562 <_svfprintf_r+0x706>
  4042b0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4042b4:	f7ff b912 	b.w	4034dc <_svfprintf_r+0x680>

004042b8 <__sprint_r.part.0>:
  4042b8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4042bc:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4042be:	049c      	lsls	r4, r3, #18
  4042c0:	4693      	mov	fp, r2
  4042c2:	d52f      	bpl.n	404324 <__sprint_r.part.0+0x6c>
  4042c4:	6893      	ldr	r3, [r2, #8]
  4042c6:	6812      	ldr	r2, [r2, #0]
  4042c8:	b353      	cbz	r3, 404320 <__sprint_r.part.0+0x68>
  4042ca:	460e      	mov	r6, r1
  4042cc:	4607      	mov	r7, r0
  4042ce:	f102 0908 	add.w	r9, r2, #8
  4042d2:	e919 0420 	ldmdb	r9, {r5, sl}
  4042d6:	ea5f 089a 	movs.w	r8, sl, lsr #2
  4042da:	d017      	beq.n	40430c <__sprint_r.part.0+0x54>
  4042dc:	3d04      	subs	r5, #4
  4042de:	2400      	movs	r4, #0
  4042e0:	e001      	b.n	4042e6 <__sprint_r.part.0+0x2e>
  4042e2:	45a0      	cmp	r8, r4
  4042e4:	d010      	beq.n	404308 <__sprint_r.part.0+0x50>
  4042e6:	4632      	mov	r2, r6
  4042e8:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4042ec:	4638      	mov	r0, r7
  4042ee:	f002 f87b 	bl	4063e8 <_fputwc_r>
  4042f2:	1c43      	adds	r3, r0, #1
  4042f4:	f104 0401 	add.w	r4, r4, #1
  4042f8:	d1f3      	bne.n	4042e2 <__sprint_r.part.0+0x2a>
  4042fa:	2300      	movs	r3, #0
  4042fc:	f8cb 3008 	str.w	r3, [fp, #8]
  404300:	f8cb 3004 	str.w	r3, [fp, #4]
  404304:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404308:	f8db 3008 	ldr.w	r3, [fp, #8]
  40430c:	f02a 0a03 	bic.w	sl, sl, #3
  404310:	eba3 030a 	sub.w	r3, r3, sl
  404314:	f8cb 3008 	str.w	r3, [fp, #8]
  404318:	f109 0908 	add.w	r9, r9, #8
  40431c:	2b00      	cmp	r3, #0
  40431e:	d1d8      	bne.n	4042d2 <__sprint_r.part.0+0x1a>
  404320:	2000      	movs	r0, #0
  404322:	e7ea      	b.n	4042fa <__sprint_r.part.0+0x42>
  404324:	f002 f9ca 	bl	4066bc <__sfvwrite_r>
  404328:	2300      	movs	r3, #0
  40432a:	f8cb 3008 	str.w	r3, [fp, #8]
  40432e:	f8cb 3004 	str.w	r3, [fp, #4]
  404332:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404336:	bf00      	nop

00404338 <_vfiprintf_r>:
  404338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40433c:	b0ad      	sub	sp, #180	; 0xb4
  40433e:	461d      	mov	r5, r3
  404340:	468b      	mov	fp, r1
  404342:	4690      	mov	r8, r2
  404344:	9307      	str	r3, [sp, #28]
  404346:	9006      	str	r0, [sp, #24]
  404348:	b118      	cbz	r0, 404352 <_vfiprintf_r+0x1a>
  40434a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40434c:	2b00      	cmp	r3, #0
  40434e:	f000 80f3 	beq.w	404538 <_vfiprintf_r+0x200>
  404352:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  404356:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40435a:	07df      	lsls	r7, r3, #31
  40435c:	b281      	uxth	r1, r0
  40435e:	d402      	bmi.n	404366 <_vfiprintf_r+0x2e>
  404360:	058e      	lsls	r6, r1, #22
  404362:	f140 80fc 	bpl.w	40455e <_vfiprintf_r+0x226>
  404366:	048c      	lsls	r4, r1, #18
  404368:	d40a      	bmi.n	404380 <_vfiprintf_r+0x48>
  40436a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40436e:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  404372:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  404376:	f8ab 100c 	strh.w	r1, [fp, #12]
  40437a:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  40437e:	b289      	uxth	r1, r1
  404380:	0708      	lsls	r0, r1, #28
  404382:	f140 80b3 	bpl.w	4044ec <_vfiprintf_r+0x1b4>
  404386:	f8db 3010 	ldr.w	r3, [fp, #16]
  40438a:	2b00      	cmp	r3, #0
  40438c:	f000 80ae 	beq.w	4044ec <_vfiprintf_r+0x1b4>
  404390:	f001 031a 	and.w	r3, r1, #26
  404394:	2b0a      	cmp	r3, #10
  404396:	f000 80b5 	beq.w	404504 <_vfiprintf_r+0x1cc>
  40439a:	2300      	movs	r3, #0
  40439c:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  4043a0:	930b      	str	r3, [sp, #44]	; 0x2c
  4043a2:	9311      	str	r3, [sp, #68]	; 0x44
  4043a4:	9310      	str	r3, [sp, #64]	; 0x40
  4043a6:	9303      	str	r3, [sp, #12]
  4043a8:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  4043ac:	46ca      	mov	sl, r9
  4043ae:	f8cd b010 	str.w	fp, [sp, #16]
  4043b2:	f898 3000 	ldrb.w	r3, [r8]
  4043b6:	4644      	mov	r4, r8
  4043b8:	b1fb      	cbz	r3, 4043fa <_vfiprintf_r+0xc2>
  4043ba:	2b25      	cmp	r3, #37	; 0x25
  4043bc:	d102      	bne.n	4043c4 <_vfiprintf_r+0x8c>
  4043be:	e01c      	b.n	4043fa <_vfiprintf_r+0xc2>
  4043c0:	2b25      	cmp	r3, #37	; 0x25
  4043c2:	d003      	beq.n	4043cc <_vfiprintf_r+0x94>
  4043c4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4043c8:	2b00      	cmp	r3, #0
  4043ca:	d1f9      	bne.n	4043c0 <_vfiprintf_r+0x88>
  4043cc:	eba4 0508 	sub.w	r5, r4, r8
  4043d0:	b19d      	cbz	r5, 4043fa <_vfiprintf_r+0xc2>
  4043d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4043d4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4043d6:	f8ca 8000 	str.w	r8, [sl]
  4043da:	3301      	adds	r3, #1
  4043dc:	442a      	add	r2, r5
  4043de:	2b07      	cmp	r3, #7
  4043e0:	f8ca 5004 	str.w	r5, [sl, #4]
  4043e4:	9211      	str	r2, [sp, #68]	; 0x44
  4043e6:	9310      	str	r3, [sp, #64]	; 0x40
  4043e8:	dd7a      	ble.n	4044e0 <_vfiprintf_r+0x1a8>
  4043ea:	2a00      	cmp	r2, #0
  4043ec:	f040 84b0 	bne.w	404d50 <_vfiprintf_r+0xa18>
  4043f0:	9b03      	ldr	r3, [sp, #12]
  4043f2:	9210      	str	r2, [sp, #64]	; 0x40
  4043f4:	442b      	add	r3, r5
  4043f6:	46ca      	mov	sl, r9
  4043f8:	9303      	str	r3, [sp, #12]
  4043fa:	7823      	ldrb	r3, [r4, #0]
  4043fc:	2b00      	cmp	r3, #0
  4043fe:	f000 83e0 	beq.w	404bc2 <_vfiprintf_r+0x88a>
  404402:	2000      	movs	r0, #0
  404404:	f04f 0300 	mov.w	r3, #0
  404408:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  40440c:	f104 0801 	add.w	r8, r4, #1
  404410:	7862      	ldrb	r2, [r4, #1]
  404412:	4605      	mov	r5, r0
  404414:	4606      	mov	r6, r0
  404416:	4603      	mov	r3, r0
  404418:	f04f 34ff 	mov.w	r4, #4294967295
  40441c:	f108 0801 	add.w	r8, r8, #1
  404420:	f1a2 0120 	sub.w	r1, r2, #32
  404424:	2958      	cmp	r1, #88	; 0x58
  404426:	f200 82de 	bhi.w	4049e6 <_vfiprintf_r+0x6ae>
  40442a:	e8df f011 	tbh	[pc, r1, lsl #1]
  40442e:	0221      	.short	0x0221
  404430:	02dc02dc 	.word	0x02dc02dc
  404434:	02dc0229 	.word	0x02dc0229
  404438:	02dc02dc 	.word	0x02dc02dc
  40443c:	02dc02dc 	.word	0x02dc02dc
  404440:	028902dc 	.word	0x028902dc
  404444:	02dc0295 	.word	0x02dc0295
  404448:	02bd00a2 	.word	0x02bd00a2
  40444c:	019f02dc 	.word	0x019f02dc
  404450:	01a401a4 	.word	0x01a401a4
  404454:	01a401a4 	.word	0x01a401a4
  404458:	01a401a4 	.word	0x01a401a4
  40445c:	01a401a4 	.word	0x01a401a4
  404460:	02dc01a4 	.word	0x02dc01a4
  404464:	02dc02dc 	.word	0x02dc02dc
  404468:	02dc02dc 	.word	0x02dc02dc
  40446c:	02dc02dc 	.word	0x02dc02dc
  404470:	02dc02dc 	.word	0x02dc02dc
  404474:	01b202dc 	.word	0x01b202dc
  404478:	02dc02dc 	.word	0x02dc02dc
  40447c:	02dc02dc 	.word	0x02dc02dc
  404480:	02dc02dc 	.word	0x02dc02dc
  404484:	02dc02dc 	.word	0x02dc02dc
  404488:	02dc02dc 	.word	0x02dc02dc
  40448c:	02dc0197 	.word	0x02dc0197
  404490:	02dc02dc 	.word	0x02dc02dc
  404494:	02dc02dc 	.word	0x02dc02dc
  404498:	02dc019b 	.word	0x02dc019b
  40449c:	025302dc 	.word	0x025302dc
  4044a0:	02dc02dc 	.word	0x02dc02dc
  4044a4:	02dc02dc 	.word	0x02dc02dc
  4044a8:	02dc02dc 	.word	0x02dc02dc
  4044ac:	02dc02dc 	.word	0x02dc02dc
  4044b0:	02dc02dc 	.word	0x02dc02dc
  4044b4:	021b025a 	.word	0x021b025a
  4044b8:	02dc02dc 	.word	0x02dc02dc
  4044bc:	026e02dc 	.word	0x026e02dc
  4044c0:	02dc021b 	.word	0x02dc021b
  4044c4:	027302dc 	.word	0x027302dc
  4044c8:	01f502dc 	.word	0x01f502dc
  4044cc:	02090182 	.word	0x02090182
  4044d0:	02dc02d7 	.word	0x02dc02d7
  4044d4:	02dc029a 	.word	0x02dc029a
  4044d8:	02dc00a7 	.word	0x02dc00a7
  4044dc:	022e02dc 	.word	0x022e02dc
  4044e0:	f10a 0a08 	add.w	sl, sl, #8
  4044e4:	9b03      	ldr	r3, [sp, #12]
  4044e6:	442b      	add	r3, r5
  4044e8:	9303      	str	r3, [sp, #12]
  4044ea:	e786      	b.n	4043fa <_vfiprintf_r+0xc2>
  4044ec:	4659      	mov	r1, fp
  4044ee:	9806      	ldr	r0, [sp, #24]
  4044f0:	f000 fdac 	bl	40504c <__swsetup_r>
  4044f4:	bb18      	cbnz	r0, 40453e <_vfiprintf_r+0x206>
  4044f6:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  4044fa:	f001 031a 	and.w	r3, r1, #26
  4044fe:	2b0a      	cmp	r3, #10
  404500:	f47f af4b 	bne.w	40439a <_vfiprintf_r+0x62>
  404504:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  404508:	2b00      	cmp	r3, #0
  40450a:	f6ff af46 	blt.w	40439a <_vfiprintf_r+0x62>
  40450e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  404512:	07db      	lsls	r3, r3, #31
  404514:	d405      	bmi.n	404522 <_vfiprintf_r+0x1ea>
  404516:	058f      	lsls	r7, r1, #22
  404518:	d403      	bmi.n	404522 <_vfiprintf_r+0x1ea>
  40451a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40451e:	f002 fa91 	bl	406a44 <__retarget_lock_release_recursive>
  404522:	462b      	mov	r3, r5
  404524:	4642      	mov	r2, r8
  404526:	4659      	mov	r1, fp
  404528:	9806      	ldr	r0, [sp, #24]
  40452a:	f000 fd4d 	bl	404fc8 <__sbprintf>
  40452e:	9003      	str	r0, [sp, #12]
  404530:	9803      	ldr	r0, [sp, #12]
  404532:	b02d      	add	sp, #180	; 0xb4
  404534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404538:	f001 feb4 	bl	4062a4 <__sinit>
  40453c:	e709      	b.n	404352 <_vfiprintf_r+0x1a>
  40453e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  404542:	07d9      	lsls	r1, r3, #31
  404544:	d404      	bmi.n	404550 <_vfiprintf_r+0x218>
  404546:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40454a:	059a      	lsls	r2, r3, #22
  40454c:	f140 84aa 	bpl.w	404ea4 <_vfiprintf_r+0xb6c>
  404550:	f04f 33ff 	mov.w	r3, #4294967295
  404554:	9303      	str	r3, [sp, #12]
  404556:	9803      	ldr	r0, [sp, #12]
  404558:	b02d      	add	sp, #180	; 0xb4
  40455a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40455e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  404562:	f002 fa6d 	bl	406a40 <__retarget_lock_acquire_recursive>
  404566:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40456a:	b281      	uxth	r1, r0
  40456c:	e6fb      	b.n	404366 <_vfiprintf_r+0x2e>
  40456e:	4276      	negs	r6, r6
  404570:	9207      	str	r2, [sp, #28]
  404572:	f043 0304 	orr.w	r3, r3, #4
  404576:	f898 2000 	ldrb.w	r2, [r8]
  40457a:	e74f      	b.n	40441c <_vfiprintf_r+0xe4>
  40457c:	9608      	str	r6, [sp, #32]
  40457e:	069e      	lsls	r6, r3, #26
  404580:	f100 8450 	bmi.w	404e24 <_vfiprintf_r+0xaec>
  404584:	9907      	ldr	r1, [sp, #28]
  404586:	06dd      	lsls	r5, r3, #27
  404588:	460a      	mov	r2, r1
  40458a:	f100 83ef 	bmi.w	404d6c <_vfiprintf_r+0xa34>
  40458e:	0658      	lsls	r0, r3, #25
  404590:	f140 83ec 	bpl.w	404d6c <_vfiprintf_r+0xa34>
  404594:	880e      	ldrh	r6, [r1, #0]
  404596:	3104      	adds	r1, #4
  404598:	2700      	movs	r7, #0
  40459a:	2201      	movs	r2, #1
  40459c:	9107      	str	r1, [sp, #28]
  40459e:	f04f 0100 	mov.w	r1, #0
  4045a2:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  4045a6:	2500      	movs	r5, #0
  4045a8:	1c61      	adds	r1, r4, #1
  4045aa:	f000 8116 	beq.w	4047da <_vfiprintf_r+0x4a2>
  4045ae:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  4045b2:	9102      	str	r1, [sp, #8]
  4045b4:	ea56 0107 	orrs.w	r1, r6, r7
  4045b8:	f040 8114 	bne.w	4047e4 <_vfiprintf_r+0x4ac>
  4045bc:	2c00      	cmp	r4, #0
  4045be:	f040 835c 	bne.w	404c7a <_vfiprintf_r+0x942>
  4045c2:	2a00      	cmp	r2, #0
  4045c4:	f040 83b7 	bne.w	404d36 <_vfiprintf_r+0x9fe>
  4045c8:	f013 0301 	ands.w	r3, r3, #1
  4045cc:	9305      	str	r3, [sp, #20]
  4045ce:	f000 8457 	beq.w	404e80 <_vfiprintf_r+0xb48>
  4045d2:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  4045d6:	2330      	movs	r3, #48	; 0x30
  4045d8:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  4045dc:	9b05      	ldr	r3, [sp, #20]
  4045de:	42a3      	cmp	r3, r4
  4045e0:	bfb8      	it	lt
  4045e2:	4623      	movlt	r3, r4
  4045e4:	9301      	str	r3, [sp, #4]
  4045e6:	b10d      	cbz	r5, 4045ec <_vfiprintf_r+0x2b4>
  4045e8:	3301      	adds	r3, #1
  4045ea:	9301      	str	r3, [sp, #4]
  4045ec:	9b02      	ldr	r3, [sp, #8]
  4045ee:	f013 0302 	ands.w	r3, r3, #2
  4045f2:	9309      	str	r3, [sp, #36]	; 0x24
  4045f4:	d002      	beq.n	4045fc <_vfiprintf_r+0x2c4>
  4045f6:	9b01      	ldr	r3, [sp, #4]
  4045f8:	3302      	adds	r3, #2
  4045fa:	9301      	str	r3, [sp, #4]
  4045fc:	9b02      	ldr	r3, [sp, #8]
  4045fe:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  404602:	930a      	str	r3, [sp, #40]	; 0x28
  404604:	f040 8217 	bne.w	404a36 <_vfiprintf_r+0x6fe>
  404608:	9b08      	ldr	r3, [sp, #32]
  40460a:	9a01      	ldr	r2, [sp, #4]
  40460c:	1a9d      	subs	r5, r3, r2
  40460e:	2d00      	cmp	r5, #0
  404610:	f340 8211 	ble.w	404a36 <_vfiprintf_r+0x6fe>
  404614:	2d10      	cmp	r5, #16
  404616:	f340 8490 	ble.w	404f3a <_vfiprintf_r+0xc02>
  40461a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40461c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40461e:	4ec4      	ldr	r6, [pc, #784]	; (404930 <_vfiprintf_r+0x5f8>)
  404620:	46d6      	mov	lr, sl
  404622:	2710      	movs	r7, #16
  404624:	46a2      	mov	sl, r4
  404626:	4619      	mov	r1, r3
  404628:	9c06      	ldr	r4, [sp, #24]
  40462a:	e007      	b.n	40463c <_vfiprintf_r+0x304>
  40462c:	f101 0c02 	add.w	ip, r1, #2
  404630:	f10e 0e08 	add.w	lr, lr, #8
  404634:	4601      	mov	r1, r0
  404636:	3d10      	subs	r5, #16
  404638:	2d10      	cmp	r5, #16
  40463a:	dd11      	ble.n	404660 <_vfiprintf_r+0x328>
  40463c:	1c48      	adds	r0, r1, #1
  40463e:	3210      	adds	r2, #16
  404640:	2807      	cmp	r0, #7
  404642:	9211      	str	r2, [sp, #68]	; 0x44
  404644:	e88e 00c0 	stmia.w	lr, {r6, r7}
  404648:	9010      	str	r0, [sp, #64]	; 0x40
  40464a:	ddef      	ble.n	40462c <_vfiprintf_r+0x2f4>
  40464c:	2a00      	cmp	r2, #0
  40464e:	f040 81e4 	bne.w	404a1a <_vfiprintf_r+0x6e2>
  404652:	3d10      	subs	r5, #16
  404654:	2d10      	cmp	r5, #16
  404656:	4611      	mov	r1, r2
  404658:	f04f 0c01 	mov.w	ip, #1
  40465c:	46ce      	mov	lr, r9
  40465e:	dced      	bgt.n	40463c <_vfiprintf_r+0x304>
  404660:	4654      	mov	r4, sl
  404662:	4661      	mov	r1, ip
  404664:	46f2      	mov	sl, lr
  404666:	442a      	add	r2, r5
  404668:	2907      	cmp	r1, #7
  40466a:	9211      	str	r2, [sp, #68]	; 0x44
  40466c:	f8ca 6000 	str.w	r6, [sl]
  404670:	f8ca 5004 	str.w	r5, [sl, #4]
  404674:	9110      	str	r1, [sp, #64]	; 0x40
  404676:	f300 82ec 	bgt.w	404c52 <_vfiprintf_r+0x91a>
  40467a:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40467e:	f10a 0a08 	add.w	sl, sl, #8
  404682:	1c48      	adds	r0, r1, #1
  404684:	2d00      	cmp	r5, #0
  404686:	f040 81de 	bne.w	404a46 <_vfiprintf_r+0x70e>
  40468a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40468c:	2b00      	cmp	r3, #0
  40468e:	f000 81f8 	beq.w	404a82 <_vfiprintf_r+0x74a>
  404692:	3202      	adds	r2, #2
  404694:	a90e      	add	r1, sp, #56	; 0x38
  404696:	2302      	movs	r3, #2
  404698:	2807      	cmp	r0, #7
  40469a:	9211      	str	r2, [sp, #68]	; 0x44
  40469c:	9010      	str	r0, [sp, #64]	; 0x40
  40469e:	e88a 000a 	stmia.w	sl, {r1, r3}
  4046a2:	f340 81ea 	ble.w	404a7a <_vfiprintf_r+0x742>
  4046a6:	2a00      	cmp	r2, #0
  4046a8:	f040 838c 	bne.w	404dc4 <_vfiprintf_r+0xa8c>
  4046ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4046ae:	2b80      	cmp	r3, #128	; 0x80
  4046b0:	f04f 0001 	mov.w	r0, #1
  4046b4:	4611      	mov	r1, r2
  4046b6:	46ca      	mov	sl, r9
  4046b8:	f040 81e7 	bne.w	404a8a <_vfiprintf_r+0x752>
  4046bc:	9b08      	ldr	r3, [sp, #32]
  4046be:	9d01      	ldr	r5, [sp, #4]
  4046c0:	1b5e      	subs	r6, r3, r5
  4046c2:	2e00      	cmp	r6, #0
  4046c4:	f340 81e1 	ble.w	404a8a <_vfiprintf_r+0x752>
  4046c8:	2e10      	cmp	r6, #16
  4046ca:	4d9a      	ldr	r5, [pc, #616]	; (404934 <_vfiprintf_r+0x5fc>)
  4046cc:	f340 8450 	ble.w	404f70 <_vfiprintf_r+0xc38>
  4046d0:	46d4      	mov	ip, sl
  4046d2:	2710      	movs	r7, #16
  4046d4:	46a2      	mov	sl, r4
  4046d6:	9c06      	ldr	r4, [sp, #24]
  4046d8:	e007      	b.n	4046ea <_vfiprintf_r+0x3b2>
  4046da:	f101 0e02 	add.w	lr, r1, #2
  4046de:	f10c 0c08 	add.w	ip, ip, #8
  4046e2:	4601      	mov	r1, r0
  4046e4:	3e10      	subs	r6, #16
  4046e6:	2e10      	cmp	r6, #16
  4046e8:	dd11      	ble.n	40470e <_vfiprintf_r+0x3d6>
  4046ea:	1c48      	adds	r0, r1, #1
  4046ec:	3210      	adds	r2, #16
  4046ee:	2807      	cmp	r0, #7
  4046f0:	9211      	str	r2, [sp, #68]	; 0x44
  4046f2:	e88c 00a0 	stmia.w	ip, {r5, r7}
  4046f6:	9010      	str	r0, [sp, #64]	; 0x40
  4046f8:	ddef      	ble.n	4046da <_vfiprintf_r+0x3a2>
  4046fa:	2a00      	cmp	r2, #0
  4046fc:	f040 829d 	bne.w	404c3a <_vfiprintf_r+0x902>
  404700:	3e10      	subs	r6, #16
  404702:	2e10      	cmp	r6, #16
  404704:	f04f 0e01 	mov.w	lr, #1
  404708:	4611      	mov	r1, r2
  40470a:	46cc      	mov	ip, r9
  40470c:	dced      	bgt.n	4046ea <_vfiprintf_r+0x3b2>
  40470e:	4654      	mov	r4, sl
  404710:	46e2      	mov	sl, ip
  404712:	4432      	add	r2, r6
  404714:	f1be 0f07 	cmp.w	lr, #7
  404718:	9211      	str	r2, [sp, #68]	; 0x44
  40471a:	e88a 0060 	stmia.w	sl, {r5, r6}
  40471e:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  404722:	f300 8369 	bgt.w	404df8 <_vfiprintf_r+0xac0>
  404726:	f10a 0a08 	add.w	sl, sl, #8
  40472a:	f10e 0001 	add.w	r0, lr, #1
  40472e:	4671      	mov	r1, lr
  404730:	e1ab      	b.n	404a8a <_vfiprintf_r+0x752>
  404732:	9608      	str	r6, [sp, #32]
  404734:	f013 0220 	ands.w	r2, r3, #32
  404738:	f040 838c 	bne.w	404e54 <_vfiprintf_r+0xb1c>
  40473c:	f013 0110 	ands.w	r1, r3, #16
  404740:	f040 831a 	bne.w	404d78 <_vfiprintf_r+0xa40>
  404744:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  404748:	f000 8316 	beq.w	404d78 <_vfiprintf_r+0xa40>
  40474c:	9807      	ldr	r0, [sp, #28]
  40474e:	460a      	mov	r2, r1
  404750:	4601      	mov	r1, r0
  404752:	3104      	adds	r1, #4
  404754:	8806      	ldrh	r6, [r0, #0]
  404756:	9107      	str	r1, [sp, #28]
  404758:	2700      	movs	r7, #0
  40475a:	e720      	b.n	40459e <_vfiprintf_r+0x266>
  40475c:	9608      	str	r6, [sp, #32]
  40475e:	f043 0310 	orr.w	r3, r3, #16
  404762:	e7e7      	b.n	404734 <_vfiprintf_r+0x3fc>
  404764:	9608      	str	r6, [sp, #32]
  404766:	f043 0310 	orr.w	r3, r3, #16
  40476a:	e708      	b.n	40457e <_vfiprintf_r+0x246>
  40476c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  404770:	f898 2000 	ldrb.w	r2, [r8]
  404774:	e652      	b.n	40441c <_vfiprintf_r+0xe4>
  404776:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40477a:	2600      	movs	r6, #0
  40477c:	f818 2b01 	ldrb.w	r2, [r8], #1
  404780:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  404784:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  404788:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40478c:	2909      	cmp	r1, #9
  40478e:	d9f5      	bls.n	40477c <_vfiprintf_r+0x444>
  404790:	e646      	b.n	404420 <_vfiprintf_r+0xe8>
  404792:	9608      	str	r6, [sp, #32]
  404794:	2800      	cmp	r0, #0
  404796:	f040 8408 	bne.w	404faa <_vfiprintf_r+0xc72>
  40479a:	f043 0310 	orr.w	r3, r3, #16
  40479e:	069e      	lsls	r6, r3, #26
  4047a0:	f100 834c 	bmi.w	404e3c <_vfiprintf_r+0xb04>
  4047a4:	06dd      	lsls	r5, r3, #27
  4047a6:	f100 82f3 	bmi.w	404d90 <_vfiprintf_r+0xa58>
  4047aa:	0658      	lsls	r0, r3, #25
  4047ac:	f140 82f0 	bpl.w	404d90 <_vfiprintf_r+0xa58>
  4047b0:	9d07      	ldr	r5, [sp, #28]
  4047b2:	f9b5 6000 	ldrsh.w	r6, [r5]
  4047b6:	462a      	mov	r2, r5
  4047b8:	17f7      	asrs	r7, r6, #31
  4047ba:	3204      	adds	r2, #4
  4047bc:	4630      	mov	r0, r6
  4047be:	4639      	mov	r1, r7
  4047c0:	9207      	str	r2, [sp, #28]
  4047c2:	2800      	cmp	r0, #0
  4047c4:	f171 0200 	sbcs.w	r2, r1, #0
  4047c8:	f2c0 835d 	blt.w	404e86 <_vfiprintf_r+0xb4e>
  4047cc:	1c61      	adds	r1, r4, #1
  4047ce:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4047d2:	f04f 0201 	mov.w	r2, #1
  4047d6:	f47f aeea 	bne.w	4045ae <_vfiprintf_r+0x276>
  4047da:	ea56 0107 	orrs.w	r1, r6, r7
  4047de:	f000 824d 	beq.w	404c7c <_vfiprintf_r+0x944>
  4047e2:	9302      	str	r3, [sp, #8]
  4047e4:	2a01      	cmp	r2, #1
  4047e6:	f000 828c 	beq.w	404d02 <_vfiprintf_r+0x9ca>
  4047ea:	2a02      	cmp	r2, #2
  4047ec:	f040 825c 	bne.w	404ca8 <_vfiprintf_r+0x970>
  4047f0:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4047f2:	46cb      	mov	fp, r9
  4047f4:	0933      	lsrs	r3, r6, #4
  4047f6:	f006 010f 	and.w	r1, r6, #15
  4047fa:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  4047fe:	093a      	lsrs	r2, r7, #4
  404800:	461e      	mov	r6, r3
  404802:	4617      	mov	r7, r2
  404804:	5c43      	ldrb	r3, [r0, r1]
  404806:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  40480a:	ea56 0307 	orrs.w	r3, r6, r7
  40480e:	d1f1      	bne.n	4047f4 <_vfiprintf_r+0x4bc>
  404810:	eba9 030b 	sub.w	r3, r9, fp
  404814:	9305      	str	r3, [sp, #20]
  404816:	e6e1      	b.n	4045dc <_vfiprintf_r+0x2a4>
  404818:	2800      	cmp	r0, #0
  40481a:	f040 83c0 	bne.w	404f9e <_vfiprintf_r+0xc66>
  40481e:	0699      	lsls	r1, r3, #26
  404820:	f100 8367 	bmi.w	404ef2 <_vfiprintf_r+0xbba>
  404824:	06da      	lsls	r2, r3, #27
  404826:	f100 80f1 	bmi.w	404a0c <_vfiprintf_r+0x6d4>
  40482a:	065b      	lsls	r3, r3, #25
  40482c:	f140 80ee 	bpl.w	404a0c <_vfiprintf_r+0x6d4>
  404830:	9a07      	ldr	r2, [sp, #28]
  404832:	6813      	ldr	r3, [r2, #0]
  404834:	3204      	adds	r2, #4
  404836:	9207      	str	r2, [sp, #28]
  404838:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  40483c:	801a      	strh	r2, [r3, #0]
  40483e:	e5b8      	b.n	4043b2 <_vfiprintf_r+0x7a>
  404840:	9807      	ldr	r0, [sp, #28]
  404842:	4a3d      	ldr	r2, [pc, #244]	; (404938 <_vfiprintf_r+0x600>)
  404844:	9608      	str	r6, [sp, #32]
  404846:	920b      	str	r2, [sp, #44]	; 0x2c
  404848:	6806      	ldr	r6, [r0, #0]
  40484a:	2278      	movs	r2, #120	; 0x78
  40484c:	2130      	movs	r1, #48	; 0x30
  40484e:	3004      	adds	r0, #4
  404850:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  404854:	f043 0302 	orr.w	r3, r3, #2
  404858:	9007      	str	r0, [sp, #28]
  40485a:	2700      	movs	r7, #0
  40485c:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  404860:	2202      	movs	r2, #2
  404862:	e69c      	b.n	40459e <_vfiprintf_r+0x266>
  404864:	9608      	str	r6, [sp, #32]
  404866:	2800      	cmp	r0, #0
  404868:	d099      	beq.n	40479e <_vfiprintf_r+0x466>
  40486a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40486e:	e796      	b.n	40479e <_vfiprintf_r+0x466>
  404870:	f898 2000 	ldrb.w	r2, [r8]
  404874:	2d00      	cmp	r5, #0
  404876:	f47f add1 	bne.w	40441c <_vfiprintf_r+0xe4>
  40487a:	2001      	movs	r0, #1
  40487c:	2520      	movs	r5, #32
  40487e:	e5cd      	b.n	40441c <_vfiprintf_r+0xe4>
  404880:	f043 0301 	orr.w	r3, r3, #1
  404884:	f898 2000 	ldrb.w	r2, [r8]
  404888:	e5c8      	b.n	40441c <_vfiprintf_r+0xe4>
  40488a:	9608      	str	r6, [sp, #32]
  40488c:	2800      	cmp	r0, #0
  40488e:	f040 8393 	bne.w	404fb8 <_vfiprintf_r+0xc80>
  404892:	4929      	ldr	r1, [pc, #164]	; (404938 <_vfiprintf_r+0x600>)
  404894:	910b      	str	r1, [sp, #44]	; 0x2c
  404896:	069f      	lsls	r7, r3, #26
  404898:	f100 82e8 	bmi.w	404e6c <_vfiprintf_r+0xb34>
  40489c:	9807      	ldr	r0, [sp, #28]
  40489e:	06de      	lsls	r6, r3, #27
  4048a0:	4601      	mov	r1, r0
  4048a2:	f100 8270 	bmi.w	404d86 <_vfiprintf_r+0xa4e>
  4048a6:	065d      	lsls	r5, r3, #25
  4048a8:	f140 826d 	bpl.w	404d86 <_vfiprintf_r+0xa4e>
  4048ac:	3104      	adds	r1, #4
  4048ae:	8806      	ldrh	r6, [r0, #0]
  4048b0:	9107      	str	r1, [sp, #28]
  4048b2:	2700      	movs	r7, #0
  4048b4:	07d8      	lsls	r0, r3, #31
  4048b6:	f140 8222 	bpl.w	404cfe <_vfiprintf_r+0x9c6>
  4048ba:	ea56 0107 	orrs.w	r1, r6, r7
  4048be:	f000 821e 	beq.w	404cfe <_vfiprintf_r+0x9c6>
  4048c2:	2130      	movs	r1, #48	; 0x30
  4048c4:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4048c8:	f043 0302 	orr.w	r3, r3, #2
  4048cc:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4048d0:	2202      	movs	r2, #2
  4048d2:	e664      	b.n	40459e <_vfiprintf_r+0x266>
  4048d4:	9608      	str	r6, [sp, #32]
  4048d6:	2800      	cmp	r0, #0
  4048d8:	f040 836b 	bne.w	404fb2 <_vfiprintf_r+0xc7a>
  4048dc:	4917      	ldr	r1, [pc, #92]	; (40493c <_vfiprintf_r+0x604>)
  4048de:	910b      	str	r1, [sp, #44]	; 0x2c
  4048e0:	e7d9      	b.n	404896 <_vfiprintf_r+0x55e>
  4048e2:	9907      	ldr	r1, [sp, #28]
  4048e4:	9608      	str	r6, [sp, #32]
  4048e6:	680a      	ldr	r2, [r1, #0]
  4048e8:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4048ec:	f04f 0000 	mov.w	r0, #0
  4048f0:	460a      	mov	r2, r1
  4048f2:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  4048f6:	3204      	adds	r2, #4
  4048f8:	2001      	movs	r0, #1
  4048fa:	9001      	str	r0, [sp, #4]
  4048fc:	9207      	str	r2, [sp, #28]
  4048fe:	9005      	str	r0, [sp, #20]
  404900:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  404904:	9302      	str	r3, [sp, #8]
  404906:	2400      	movs	r4, #0
  404908:	e670      	b.n	4045ec <_vfiprintf_r+0x2b4>
  40490a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40490e:	f898 2000 	ldrb.w	r2, [r8]
  404912:	e583      	b.n	40441c <_vfiprintf_r+0xe4>
  404914:	f898 2000 	ldrb.w	r2, [r8]
  404918:	2a6c      	cmp	r2, #108	; 0x6c
  40491a:	bf03      	ittte	eq
  40491c:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  404920:	f043 0320 	orreq.w	r3, r3, #32
  404924:	f108 0801 	addeq.w	r8, r8, #1
  404928:	f043 0310 	orrne.w	r3, r3, #16
  40492c:	e576      	b.n	40441c <_vfiprintf_r+0xe4>
  40492e:	bf00      	nop
  404930:	00408a20 	.word	0x00408a20
  404934:	00408a30 	.word	0x00408a30
  404938:	004089e0 	.word	0x004089e0
  40493c:	004089cc 	.word	0x004089cc
  404940:	9907      	ldr	r1, [sp, #28]
  404942:	680e      	ldr	r6, [r1, #0]
  404944:	460a      	mov	r2, r1
  404946:	2e00      	cmp	r6, #0
  404948:	f102 0204 	add.w	r2, r2, #4
  40494c:	f6ff ae0f 	blt.w	40456e <_vfiprintf_r+0x236>
  404950:	9207      	str	r2, [sp, #28]
  404952:	f898 2000 	ldrb.w	r2, [r8]
  404956:	e561      	b.n	40441c <_vfiprintf_r+0xe4>
  404958:	f898 2000 	ldrb.w	r2, [r8]
  40495c:	2001      	movs	r0, #1
  40495e:	252b      	movs	r5, #43	; 0x2b
  404960:	e55c      	b.n	40441c <_vfiprintf_r+0xe4>
  404962:	9907      	ldr	r1, [sp, #28]
  404964:	9608      	str	r6, [sp, #32]
  404966:	f8d1 b000 	ldr.w	fp, [r1]
  40496a:	f04f 0200 	mov.w	r2, #0
  40496e:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  404972:	1d0e      	adds	r6, r1, #4
  404974:	f1bb 0f00 	cmp.w	fp, #0
  404978:	f000 82e5 	beq.w	404f46 <_vfiprintf_r+0xc0e>
  40497c:	1c67      	adds	r7, r4, #1
  40497e:	f000 82c4 	beq.w	404f0a <_vfiprintf_r+0xbd2>
  404982:	4622      	mov	r2, r4
  404984:	2100      	movs	r1, #0
  404986:	4658      	mov	r0, fp
  404988:	9301      	str	r3, [sp, #4]
  40498a:	f002 f8f1 	bl	406b70 <memchr>
  40498e:	9b01      	ldr	r3, [sp, #4]
  404990:	2800      	cmp	r0, #0
  404992:	f000 82e5 	beq.w	404f60 <_vfiprintf_r+0xc28>
  404996:	eba0 020b 	sub.w	r2, r0, fp
  40499a:	9205      	str	r2, [sp, #20]
  40499c:	9607      	str	r6, [sp, #28]
  40499e:	9302      	str	r3, [sp, #8]
  4049a0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4049a4:	2400      	movs	r4, #0
  4049a6:	e619      	b.n	4045dc <_vfiprintf_r+0x2a4>
  4049a8:	f898 2000 	ldrb.w	r2, [r8]
  4049ac:	2a2a      	cmp	r2, #42	; 0x2a
  4049ae:	f108 0701 	add.w	r7, r8, #1
  4049b2:	f000 82e9 	beq.w	404f88 <_vfiprintf_r+0xc50>
  4049b6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4049ba:	2909      	cmp	r1, #9
  4049bc:	46b8      	mov	r8, r7
  4049be:	f04f 0400 	mov.w	r4, #0
  4049c2:	f63f ad2d 	bhi.w	404420 <_vfiprintf_r+0xe8>
  4049c6:	f818 2b01 	ldrb.w	r2, [r8], #1
  4049ca:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4049ce:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  4049d2:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4049d6:	2909      	cmp	r1, #9
  4049d8:	d9f5      	bls.n	4049c6 <_vfiprintf_r+0x68e>
  4049da:	e521      	b.n	404420 <_vfiprintf_r+0xe8>
  4049dc:	f043 0320 	orr.w	r3, r3, #32
  4049e0:	f898 2000 	ldrb.w	r2, [r8]
  4049e4:	e51a      	b.n	40441c <_vfiprintf_r+0xe4>
  4049e6:	9608      	str	r6, [sp, #32]
  4049e8:	2800      	cmp	r0, #0
  4049ea:	f040 82db 	bne.w	404fa4 <_vfiprintf_r+0xc6c>
  4049ee:	2a00      	cmp	r2, #0
  4049f0:	f000 80e7 	beq.w	404bc2 <_vfiprintf_r+0x88a>
  4049f4:	2101      	movs	r1, #1
  4049f6:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4049fa:	f04f 0200 	mov.w	r2, #0
  4049fe:	9101      	str	r1, [sp, #4]
  404a00:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  404a04:	9105      	str	r1, [sp, #20]
  404a06:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  404a0a:	e77b      	b.n	404904 <_vfiprintf_r+0x5cc>
  404a0c:	9a07      	ldr	r2, [sp, #28]
  404a0e:	6813      	ldr	r3, [r2, #0]
  404a10:	3204      	adds	r2, #4
  404a12:	9207      	str	r2, [sp, #28]
  404a14:	9a03      	ldr	r2, [sp, #12]
  404a16:	601a      	str	r2, [r3, #0]
  404a18:	e4cb      	b.n	4043b2 <_vfiprintf_r+0x7a>
  404a1a:	aa0f      	add	r2, sp, #60	; 0x3c
  404a1c:	9904      	ldr	r1, [sp, #16]
  404a1e:	4620      	mov	r0, r4
  404a20:	f7ff fc4a 	bl	4042b8 <__sprint_r.part.0>
  404a24:	2800      	cmp	r0, #0
  404a26:	f040 8139 	bne.w	404c9c <_vfiprintf_r+0x964>
  404a2a:	9910      	ldr	r1, [sp, #64]	; 0x40
  404a2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404a2e:	f101 0c01 	add.w	ip, r1, #1
  404a32:	46ce      	mov	lr, r9
  404a34:	e5ff      	b.n	404636 <_vfiprintf_r+0x2fe>
  404a36:	9910      	ldr	r1, [sp, #64]	; 0x40
  404a38:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404a3a:	1c48      	adds	r0, r1, #1
  404a3c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404a40:	2d00      	cmp	r5, #0
  404a42:	f43f ae22 	beq.w	40468a <_vfiprintf_r+0x352>
  404a46:	3201      	adds	r2, #1
  404a48:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  404a4c:	2101      	movs	r1, #1
  404a4e:	2807      	cmp	r0, #7
  404a50:	9211      	str	r2, [sp, #68]	; 0x44
  404a52:	9010      	str	r0, [sp, #64]	; 0x40
  404a54:	f8ca 5000 	str.w	r5, [sl]
  404a58:	f8ca 1004 	str.w	r1, [sl, #4]
  404a5c:	f340 8108 	ble.w	404c70 <_vfiprintf_r+0x938>
  404a60:	2a00      	cmp	r2, #0
  404a62:	f040 81bc 	bne.w	404dde <_vfiprintf_r+0xaa6>
  404a66:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404a68:	2b00      	cmp	r3, #0
  404a6a:	f43f ae1f 	beq.w	4046ac <_vfiprintf_r+0x374>
  404a6e:	ab0e      	add	r3, sp, #56	; 0x38
  404a70:	2202      	movs	r2, #2
  404a72:	4608      	mov	r0, r1
  404a74:	931c      	str	r3, [sp, #112]	; 0x70
  404a76:	921d      	str	r2, [sp, #116]	; 0x74
  404a78:	46ca      	mov	sl, r9
  404a7a:	4601      	mov	r1, r0
  404a7c:	f10a 0a08 	add.w	sl, sl, #8
  404a80:	3001      	adds	r0, #1
  404a82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404a84:	2b80      	cmp	r3, #128	; 0x80
  404a86:	f43f ae19 	beq.w	4046bc <_vfiprintf_r+0x384>
  404a8a:	9b05      	ldr	r3, [sp, #20]
  404a8c:	1ae4      	subs	r4, r4, r3
  404a8e:	2c00      	cmp	r4, #0
  404a90:	dd2e      	ble.n	404af0 <_vfiprintf_r+0x7b8>
  404a92:	2c10      	cmp	r4, #16
  404a94:	4db3      	ldr	r5, [pc, #716]	; (404d64 <_vfiprintf_r+0xa2c>)
  404a96:	dd1e      	ble.n	404ad6 <_vfiprintf_r+0x79e>
  404a98:	46d6      	mov	lr, sl
  404a9a:	2610      	movs	r6, #16
  404a9c:	9f06      	ldr	r7, [sp, #24]
  404a9e:	f8dd a010 	ldr.w	sl, [sp, #16]
  404aa2:	e006      	b.n	404ab2 <_vfiprintf_r+0x77a>
  404aa4:	1c88      	adds	r0, r1, #2
  404aa6:	f10e 0e08 	add.w	lr, lr, #8
  404aaa:	4619      	mov	r1, r3
  404aac:	3c10      	subs	r4, #16
  404aae:	2c10      	cmp	r4, #16
  404ab0:	dd10      	ble.n	404ad4 <_vfiprintf_r+0x79c>
  404ab2:	1c4b      	adds	r3, r1, #1
  404ab4:	3210      	adds	r2, #16
  404ab6:	2b07      	cmp	r3, #7
  404ab8:	9211      	str	r2, [sp, #68]	; 0x44
  404aba:	e88e 0060 	stmia.w	lr, {r5, r6}
  404abe:	9310      	str	r3, [sp, #64]	; 0x40
  404ac0:	ddf0      	ble.n	404aa4 <_vfiprintf_r+0x76c>
  404ac2:	2a00      	cmp	r2, #0
  404ac4:	d165      	bne.n	404b92 <_vfiprintf_r+0x85a>
  404ac6:	3c10      	subs	r4, #16
  404ac8:	2c10      	cmp	r4, #16
  404aca:	f04f 0001 	mov.w	r0, #1
  404ace:	4611      	mov	r1, r2
  404ad0:	46ce      	mov	lr, r9
  404ad2:	dcee      	bgt.n	404ab2 <_vfiprintf_r+0x77a>
  404ad4:	46f2      	mov	sl, lr
  404ad6:	4422      	add	r2, r4
  404ad8:	2807      	cmp	r0, #7
  404ada:	9211      	str	r2, [sp, #68]	; 0x44
  404adc:	f8ca 5000 	str.w	r5, [sl]
  404ae0:	f8ca 4004 	str.w	r4, [sl, #4]
  404ae4:	9010      	str	r0, [sp, #64]	; 0x40
  404ae6:	f300 8085 	bgt.w	404bf4 <_vfiprintf_r+0x8bc>
  404aea:	f10a 0a08 	add.w	sl, sl, #8
  404aee:	3001      	adds	r0, #1
  404af0:	9905      	ldr	r1, [sp, #20]
  404af2:	f8ca b000 	str.w	fp, [sl]
  404af6:	440a      	add	r2, r1
  404af8:	2807      	cmp	r0, #7
  404afa:	9211      	str	r2, [sp, #68]	; 0x44
  404afc:	f8ca 1004 	str.w	r1, [sl, #4]
  404b00:	9010      	str	r0, [sp, #64]	; 0x40
  404b02:	f340 8082 	ble.w	404c0a <_vfiprintf_r+0x8d2>
  404b06:	2a00      	cmp	r2, #0
  404b08:	f040 8118 	bne.w	404d3c <_vfiprintf_r+0xa04>
  404b0c:	9b02      	ldr	r3, [sp, #8]
  404b0e:	9210      	str	r2, [sp, #64]	; 0x40
  404b10:	0758      	lsls	r0, r3, #29
  404b12:	d535      	bpl.n	404b80 <_vfiprintf_r+0x848>
  404b14:	9b08      	ldr	r3, [sp, #32]
  404b16:	9901      	ldr	r1, [sp, #4]
  404b18:	1a5c      	subs	r4, r3, r1
  404b1a:	2c00      	cmp	r4, #0
  404b1c:	f340 80e7 	ble.w	404cee <_vfiprintf_r+0x9b6>
  404b20:	46ca      	mov	sl, r9
  404b22:	2c10      	cmp	r4, #16
  404b24:	f340 8218 	ble.w	404f58 <_vfiprintf_r+0xc20>
  404b28:	9910      	ldr	r1, [sp, #64]	; 0x40
  404b2a:	4e8f      	ldr	r6, [pc, #572]	; (404d68 <_vfiprintf_r+0xa30>)
  404b2c:	9f06      	ldr	r7, [sp, #24]
  404b2e:	f8dd b010 	ldr.w	fp, [sp, #16]
  404b32:	2510      	movs	r5, #16
  404b34:	e006      	b.n	404b44 <_vfiprintf_r+0x80c>
  404b36:	1c88      	adds	r0, r1, #2
  404b38:	f10a 0a08 	add.w	sl, sl, #8
  404b3c:	4619      	mov	r1, r3
  404b3e:	3c10      	subs	r4, #16
  404b40:	2c10      	cmp	r4, #16
  404b42:	dd11      	ble.n	404b68 <_vfiprintf_r+0x830>
  404b44:	1c4b      	adds	r3, r1, #1
  404b46:	3210      	adds	r2, #16
  404b48:	2b07      	cmp	r3, #7
  404b4a:	9211      	str	r2, [sp, #68]	; 0x44
  404b4c:	f8ca 6000 	str.w	r6, [sl]
  404b50:	f8ca 5004 	str.w	r5, [sl, #4]
  404b54:	9310      	str	r3, [sp, #64]	; 0x40
  404b56:	ddee      	ble.n	404b36 <_vfiprintf_r+0x7fe>
  404b58:	bb42      	cbnz	r2, 404bac <_vfiprintf_r+0x874>
  404b5a:	3c10      	subs	r4, #16
  404b5c:	2c10      	cmp	r4, #16
  404b5e:	f04f 0001 	mov.w	r0, #1
  404b62:	4611      	mov	r1, r2
  404b64:	46ca      	mov	sl, r9
  404b66:	dced      	bgt.n	404b44 <_vfiprintf_r+0x80c>
  404b68:	4422      	add	r2, r4
  404b6a:	2807      	cmp	r0, #7
  404b6c:	9211      	str	r2, [sp, #68]	; 0x44
  404b6e:	f8ca 6000 	str.w	r6, [sl]
  404b72:	f8ca 4004 	str.w	r4, [sl, #4]
  404b76:	9010      	str	r0, [sp, #64]	; 0x40
  404b78:	dd51      	ble.n	404c1e <_vfiprintf_r+0x8e6>
  404b7a:	2a00      	cmp	r2, #0
  404b7c:	f040 819b 	bne.w	404eb6 <_vfiprintf_r+0xb7e>
  404b80:	9b03      	ldr	r3, [sp, #12]
  404b82:	9a08      	ldr	r2, [sp, #32]
  404b84:	9901      	ldr	r1, [sp, #4]
  404b86:	428a      	cmp	r2, r1
  404b88:	bfac      	ite	ge
  404b8a:	189b      	addge	r3, r3, r2
  404b8c:	185b      	addlt	r3, r3, r1
  404b8e:	9303      	str	r3, [sp, #12]
  404b90:	e04e      	b.n	404c30 <_vfiprintf_r+0x8f8>
  404b92:	aa0f      	add	r2, sp, #60	; 0x3c
  404b94:	4651      	mov	r1, sl
  404b96:	4638      	mov	r0, r7
  404b98:	f7ff fb8e 	bl	4042b8 <__sprint_r.part.0>
  404b9c:	2800      	cmp	r0, #0
  404b9e:	f040 813f 	bne.w	404e20 <_vfiprintf_r+0xae8>
  404ba2:	9910      	ldr	r1, [sp, #64]	; 0x40
  404ba4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404ba6:	1c48      	adds	r0, r1, #1
  404ba8:	46ce      	mov	lr, r9
  404baa:	e77f      	b.n	404aac <_vfiprintf_r+0x774>
  404bac:	aa0f      	add	r2, sp, #60	; 0x3c
  404bae:	4659      	mov	r1, fp
  404bb0:	4638      	mov	r0, r7
  404bb2:	f7ff fb81 	bl	4042b8 <__sprint_r.part.0>
  404bb6:	b960      	cbnz	r0, 404bd2 <_vfiprintf_r+0x89a>
  404bb8:	9910      	ldr	r1, [sp, #64]	; 0x40
  404bba:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404bbc:	1c48      	adds	r0, r1, #1
  404bbe:	46ca      	mov	sl, r9
  404bc0:	e7bd      	b.n	404b3e <_vfiprintf_r+0x806>
  404bc2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404bc4:	f8dd b010 	ldr.w	fp, [sp, #16]
  404bc8:	2b00      	cmp	r3, #0
  404bca:	f040 81d4 	bne.w	404f76 <_vfiprintf_r+0xc3e>
  404bce:	2300      	movs	r3, #0
  404bd0:	9310      	str	r3, [sp, #64]	; 0x40
  404bd2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  404bd6:	f013 0f01 	tst.w	r3, #1
  404bda:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  404bde:	d102      	bne.n	404be6 <_vfiprintf_r+0x8ae>
  404be0:	059a      	lsls	r2, r3, #22
  404be2:	f140 80de 	bpl.w	404da2 <_vfiprintf_r+0xa6a>
  404be6:	065b      	lsls	r3, r3, #25
  404be8:	f53f acb2 	bmi.w	404550 <_vfiprintf_r+0x218>
  404bec:	9803      	ldr	r0, [sp, #12]
  404bee:	b02d      	add	sp, #180	; 0xb4
  404bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404bf4:	2a00      	cmp	r2, #0
  404bf6:	f040 8106 	bne.w	404e06 <_vfiprintf_r+0xace>
  404bfa:	9a05      	ldr	r2, [sp, #20]
  404bfc:	921d      	str	r2, [sp, #116]	; 0x74
  404bfe:	2301      	movs	r3, #1
  404c00:	9211      	str	r2, [sp, #68]	; 0x44
  404c02:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  404c06:	9310      	str	r3, [sp, #64]	; 0x40
  404c08:	46ca      	mov	sl, r9
  404c0a:	f10a 0a08 	add.w	sl, sl, #8
  404c0e:	9b02      	ldr	r3, [sp, #8]
  404c10:	0759      	lsls	r1, r3, #29
  404c12:	d504      	bpl.n	404c1e <_vfiprintf_r+0x8e6>
  404c14:	9b08      	ldr	r3, [sp, #32]
  404c16:	9901      	ldr	r1, [sp, #4]
  404c18:	1a5c      	subs	r4, r3, r1
  404c1a:	2c00      	cmp	r4, #0
  404c1c:	dc81      	bgt.n	404b22 <_vfiprintf_r+0x7ea>
  404c1e:	9b03      	ldr	r3, [sp, #12]
  404c20:	9908      	ldr	r1, [sp, #32]
  404c22:	9801      	ldr	r0, [sp, #4]
  404c24:	4281      	cmp	r1, r0
  404c26:	bfac      	ite	ge
  404c28:	185b      	addge	r3, r3, r1
  404c2a:	181b      	addlt	r3, r3, r0
  404c2c:	9303      	str	r3, [sp, #12]
  404c2e:	bb72      	cbnz	r2, 404c8e <_vfiprintf_r+0x956>
  404c30:	2300      	movs	r3, #0
  404c32:	9310      	str	r3, [sp, #64]	; 0x40
  404c34:	46ca      	mov	sl, r9
  404c36:	f7ff bbbc 	b.w	4043b2 <_vfiprintf_r+0x7a>
  404c3a:	aa0f      	add	r2, sp, #60	; 0x3c
  404c3c:	9904      	ldr	r1, [sp, #16]
  404c3e:	4620      	mov	r0, r4
  404c40:	f7ff fb3a 	bl	4042b8 <__sprint_r.part.0>
  404c44:	bb50      	cbnz	r0, 404c9c <_vfiprintf_r+0x964>
  404c46:	9910      	ldr	r1, [sp, #64]	; 0x40
  404c48:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404c4a:	f101 0e01 	add.w	lr, r1, #1
  404c4e:	46cc      	mov	ip, r9
  404c50:	e548      	b.n	4046e4 <_vfiprintf_r+0x3ac>
  404c52:	2a00      	cmp	r2, #0
  404c54:	f040 8140 	bne.w	404ed8 <_vfiprintf_r+0xba0>
  404c58:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  404c5c:	2900      	cmp	r1, #0
  404c5e:	f000 811b 	beq.w	404e98 <_vfiprintf_r+0xb60>
  404c62:	2201      	movs	r2, #1
  404c64:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  404c68:	4610      	mov	r0, r2
  404c6a:	921d      	str	r2, [sp, #116]	; 0x74
  404c6c:	911c      	str	r1, [sp, #112]	; 0x70
  404c6e:	46ca      	mov	sl, r9
  404c70:	4601      	mov	r1, r0
  404c72:	f10a 0a08 	add.w	sl, sl, #8
  404c76:	3001      	adds	r0, #1
  404c78:	e507      	b.n	40468a <_vfiprintf_r+0x352>
  404c7a:	9b02      	ldr	r3, [sp, #8]
  404c7c:	2a01      	cmp	r2, #1
  404c7e:	f000 8098 	beq.w	404db2 <_vfiprintf_r+0xa7a>
  404c82:	2a02      	cmp	r2, #2
  404c84:	d10d      	bne.n	404ca2 <_vfiprintf_r+0x96a>
  404c86:	9302      	str	r3, [sp, #8]
  404c88:	2600      	movs	r6, #0
  404c8a:	2700      	movs	r7, #0
  404c8c:	e5b0      	b.n	4047f0 <_vfiprintf_r+0x4b8>
  404c8e:	aa0f      	add	r2, sp, #60	; 0x3c
  404c90:	9904      	ldr	r1, [sp, #16]
  404c92:	9806      	ldr	r0, [sp, #24]
  404c94:	f7ff fb10 	bl	4042b8 <__sprint_r.part.0>
  404c98:	2800      	cmp	r0, #0
  404c9a:	d0c9      	beq.n	404c30 <_vfiprintf_r+0x8f8>
  404c9c:	f8dd b010 	ldr.w	fp, [sp, #16]
  404ca0:	e797      	b.n	404bd2 <_vfiprintf_r+0x89a>
  404ca2:	9302      	str	r3, [sp, #8]
  404ca4:	2600      	movs	r6, #0
  404ca6:	2700      	movs	r7, #0
  404ca8:	4649      	mov	r1, r9
  404caa:	e000      	b.n	404cae <_vfiprintf_r+0x976>
  404cac:	4659      	mov	r1, fp
  404cae:	08f2      	lsrs	r2, r6, #3
  404cb0:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  404cb4:	08f8      	lsrs	r0, r7, #3
  404cb6:	f006 0307 	and.w	r3, r6, #7
  404cba:	4607      	mov	r7, r0
  404cbc:	4616      	mov	r6, r2
  404cbe:	3330      	adds	r3, #48	; 0x30
  404cc0:	ea56 0207 	orrs.w	r2, r6, r7
  404cc4:	f801 3c01 	strb.w	r3, [r1, #-1]
  404cc8:	f101 3bff 	add.w	fp, r1, #4294967295
  404ccc:	d1ee      	bne.n	404cac <_vfiprintf_r+0x974>
  404cce:	9a02      	ldr	r2, [sp, #8]
  404cd0:	07d6      	lsls	r6, r2, #31
  404cd2:	f57f ad9d 	bpl.w	404810 <_vfiprintf_r+0x4d8>
  404cd6:	2b30      	cmp	r3, #48	; 0x30
  404cd8:	f43f ad9a 	beq.w	404810 <_vfiprintf_r+0x4d8>
  404cdc:	3902      	subs	r1, #2
  404cde:	2330      	movs	r3, #48	; 0x30
  404ce0:	f80b 3c01 	strb.w	r3, [fp, #-1]
  404ce4:	eba9 0301 	sub.w	r3, r9, r1
  404ce8:	9305      	str	r3, [sp, #20]
  404cea:	468b      	mov	fp, r1
  404cec:	e476      	b.n	4045dc <_vfiprintf_r+0x2a4>
  404cee:	9b03      	ldr	r3, [sp, #12]
  404cf0:	9a08      	ldr	r2, [sp, #32]
  404cf2:	428a      	cmp	r2, r1
  404cf4:	bfac      	ite	ge
  404cf6:	189b      	addge	r3, r3, r2
  404cf8:	185b      	addlt	r3, r3, r1
  404cfa:	9303      	str	r3, [sp, #12]
  404cfc:	e798      	b.n	404c30 <_vfiprintf_r+0x8f8>
  404cfe:	2202      	movs	r2, #2
  404d00:	e44d      	b.n	40459e <_vfiprintf_r+0x266>
  404d02:	2f00      	cmp	r7, #0
  404d04:	bf08      	it	eq
  404d06:	2e0a      	cmpeq	r6, #10
  404d08:	d352      	bcc.n	404db0 <_vfiprintf_r+0xa78>
  404d0a:	46cb      	mov	fp, r9
  404d0c:	4630      	mov	r0, r6
  404d0e:	4639      	mov	r1, r7
  404d10:	220a      	movs	r2, #10
  404d12:	2300      	movs	r3, #0
  404d14:	f003 fc6a 	bl	4085ec <__aeabi_uldivmod>
  404d18:	3230      	adds	r2, #48	; 0x30
  404d1a:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  404d1e:	4630      	mov	r0, r6
  404d20:	4639      	mov	r1, r7
  404d22:	2300      	movs	r3, #0
  404d24:	220a      	movs	r2, #10
  404d26:	f003 fc61 	bl	4085ec <__aeabi_uldivmod>
  404d2a:	4606      	mov	r6, r0
  404d2c:	460f      	mov	r7, r1
  404d2e:	ea56 0307 	orrs.w	r3, r6, r7
  404d32:	d1eb      	bne.n	404d0c <_vfiprintf_r+0x9d4>
  404d34:	e56c      	b.n	404810 <_vfiprintf_r+0x4d8>
  404d36:	9405      	str	r4, [sp, #20]
  404d38:	46cb      	mov	fp, r9
  404d3a:	e44f      	b.n	4045dc <_vfiprintf_r+0x2a4>
  404d3c:	aa0f      	add	r2, sp, #60	; 0x3c
  404d3e:	9904      	ldr	r1, [sp, #16]
  404d40:	9806      	ldr	r0, [sp, #24]
  404d42:	f7ff fab9 	bl	4042b8 <__sprint_r.part.0>
  404d46:	2800      	cmp	r0, #0
  404d48:	d1a8      	bne.n	404c9c <_vfiprintf_r+0x964>
  404d4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404d4c:	46ca      	mov	sl, r9
  404d4e:	e75e      	b.n	404c0e <_vfiprintf_r+0x8d6>
  404d50:	aa0f      	add	r2, sp, #60	; 0x3c
  404d52:	9904      	ldr	r1, [sp, #16]
  404d54:	9806      	ldr	r0, [sp, #24]
  404d56:	f7ff faaf 	bl	4042b8 <__sprint_r.part.0>
  404d5a:	2800      	cmp	r0, #0
  404d5c:	d19e      	bne.n	404c9c <_vfiprintf_r+0x964>
  404d5e:	46ca      	mov	sl, r9
  404d60:	f7ff bbc0 	b.w	4044e4 <_vfiprintf_r+0x1ac>
  404d64:	00408a30 	.word	0x00408a30
  404d68:	00408a20 	.word	0x00408a20
  404d6c:	3104      	adds	r1, #4
  404d6e:	6816      	ldr	r6, [r2, #0]
  404d70:	9107      	str	r1, [sp, #28]
  404d72:	2201      	movs	r2, #1
  404d74:	2700      	movs	r7, #0
  404d76:	e412      	b.n	40459e <_vfiprintf_r+0x266>
  404d78:	9807      	ldr	r0, [sp, #28]
  404d7a:	4601      	mov	r1, r0
  404d7c:	3104      	adds	r1, #4
  404d7e:	6806      	ldr	r6, [r0, #0]
  404d80:	9107      	str	r1, [sp, #28]
  404d82:	2700      	movs	r7, #0
  404d84:	e40b      	b.n	40459e <_vfiprintf_r+0x266>
  404d86:	680e      	ldr	r6, [r1, #0]
  404d88:	3104      	adds	r1, #4
  404d8a:	9107      	str	r1, [sp, #28]
  404d8c:	2700      	movs	r7, #0
  404d8e:	e591      	b.n	4048b4 <_vfiprintf_r+0x57c>
  404d90:	9907      	ldr	r1, [sp, #28]
  404d92:	680e      	ldr	r6, [r1, #0]
  404d94:	460a      	mov	r2, r1
  404d96:	17f7      	asrs	r7, r6, #31
  404d98:	3204      	adds	r2, #4
  404d9a:	9207      	str	r2, [sp, #28]
  404d9c:	4630      	mov	r0, r6
  404d9e:	4639      	mov	r1, r7
  404da0:	e50f      	b.n	4047c2 <_vfiprintf_r+0x48a>
  404da2:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  404da6:	f001 fe4d 	bl	406a44 <__retarget_lock_release_recursive>
  404daa:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  404dae:	e71a      	b.n	404be6 <_vfiprintf_r+0x8ae>
  404db0:	9b02      	ldr	r3, [sp, #8]
  404db2:	9302      	str	r3, [sp, #8]
  404db4:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  404db8:	3630      	adds	r6, #48	; 0x30
  404dba:	2301      	movs	r3, #1
  404dbc:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  404dc0:	9305      	str	r3, [sp, #20]
  404dc2:	e40b      	b.n	4045dc <_vfiprintf_r+0x2a4>
  404dc4:	aa0f      	add	r2, sp, #60	; 0x3c
  404dc6:	9904      	ldr	r1, [sp, #16]
  404dc8:	9806      	ldr	r0, [sp, #24]
  404dca:	f7ff fa75 	bl	4042b8 <__sprint_r.part.0>
  404dce:	2800      	cmp	r0, #0
  404dd0:	f47f af64 	bne.w	404c9c <_vfiprintf_r+0x964>
  404dd4:	9910      	ldr	r1, [sp, #64]	; 0x40
  404dd6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404dd8:	1c48      	adds	r0, r1, #1
  404dda:	46ca      	mov	sl, r9
  404ddc:	e651      	b.n	404a82 <_vfiprintf_r+0x74a>
  404dde:	aa0f      	add	r2, sp, #60	; 0x3c
  404de0:	9904      	ldr	r1, [sp, #16]
  404de2:	9806      	ldr	r0, [sp, #24]
  404de4:	f7ff fa68 	bl	4042b8 <__sprint_r.part.0>
  404de8:	2800      	cmp	r0, #0
  404dea:	f47f af57 	bne.w	404c9c <_vfiprintf_r+0x964>
  404dee:	9910      	ldr	r1, [sp, #64]	; 0x40
  404df0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404df2:	1c48      	adds	r0, r1, #1
  404df4:	46ca      	mov	sl, r9
  404df6:	e448      	b.n	40468a <_vfiprintf_r+0x352>
  404df8:	2a00      	cmp	r2, #0
  404dfa:	f040 8091 	bne.w	404f20 <_vfiprintf_r+0xbe8>
  404dfe:	2001      	movs	r0, #1
  404e00:	4611      	mov	r1, r2
  404e02:	46ca      	mov	sl, r9
  404e04:	e641      	b.n	404a8a <_vfiprintf_r+0x752>
  404e06:	aa0f      	add	r2, sp, #60	; 0x3c
  404e08:	9904      	ldr	r1, [sp, #16]
  404e0a:	9806      	ldr	r0, [sp, #24]
  404e0c:	f7ff fa54 	bl	4042b8 <__sprint_r.part.0>
  404e10:	2800      	cmp	r0, #0
  404e12:	f47f af43 	bne.w	404c9c <_vfiprintf_r+0x964>
  404e16:	9810      	ldr	r0, [sp, #64]	; 0x40
  404e18:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404e1a:	3001      	adds	r0, #1
  404e1c:	46ca      	mov	sl, r9
  404e1e:	e667      	b.n	404af0 <_vfiprintf_r+0x7b8>
  404e20:	46d3      	mov	fp, sl
  404e22:	e6d6      	b.n	404bd2 <_vfiprintf_r+0x89a>
  404e24:	9e07      	ldr	r6, [sp, #28]
  404e26:	3607      	adds	r6, #7
  404e28:	f026 0207 	bic.w	r2, r6, #7
  404e2c:	f102 0108 	add.w	r1, r2, #8
  404e30:	e9d2 6700 	ldrd	r6, r7, [r2]
  404e34:	9107      	str	r1, [sp, #28]
  404e36:	2201      	movs	r2, #1
  404e38:	f7ff bbb1 	b.w	40459e <_vfiprintf_r+0x266>
  404e3c:	9e07      	ldr	r6, [sp, #28]
  404e3e:	3607      	adds	r6, #7
  404e40:	f026 0607 	bic.w	r6, r6, #7
  404e44:	e9d6 0100 	ldrd	r0, r1, [r6]
  404e48:	f106 0208 	add.w	r2, r6, #8
  404e4c:	9207      	str	r2, [sp, #28]
  404e4e:	4606      	mov	r6, r0
  404e50:	460f      	mov	r7, r1
  404e52:	e4b6      	b.n	4047c2 <_vfiprintf_r+0x48a>
  404e54:	9e07      	ldr	r6, [sp, #28]
  404e56:	3607      	adds	r6, #7
  404e58:	f026 0207 	bic.w	r2, r6, #7
  404e5c:	f102 0108 	add.w	r1, r2, #8
  404e60:	e9d2 6700 	ldrd	r6, r7, [r2]
  404e64:	9107      	str	r1, [sp, #28]
  404e66:	2200      	movs	r2, #0
  404e68:	f7ff bb99 	b.w	40459e <_vfiprintf_r+0x266>
  404e6c:	9e07      	ldr	r6, [sp, #28]
  404e6e:	3607      	adds	r6, #7
  404e70:	f026 0107 	bic.w	r1, r6, #7
  404e74:	f101 0008 	add.w	r0, r1, #8
  404e78:	9007      	str	r0, [sp, #28]
  404e7a:	e9d1 6700 	ldrd	r6, r7, [r1]
  404e7e:	e519      	b.n	4048b4 <_vfiprintf_r+0x57c>
  404e80:	46cb      	mov	fp, r9
  404e82:	f7ff bbab 	b.w	4045dc <_vfiprintf_r+0x2a4>
  404e86:	252d      	movs	r5, #45	; 0x2d
  404e88:	4276      	negs	r6, r6
  404e8a:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  404e8e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404e92:	2201      	movs	r2, #1
  404e94:	f7ff bb88 	b.w	4045a8 <_vfiprintf_r+0x270>
  404e98:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404e9a:	b9b3      	cbnz	r3, 404eca <_vfiprintf_r+0xb92>
  404e9c:	4611      	mov	r1, r2
  404e9e:	2001      	movs	r0, #1
  404ea0:	46ca      	mov	sl, r9
  404ea2:	e5f2      	b.n	404a8a <_vfiprintf_r+0x752>
  404ea4:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  404ea8:	f001 fdcc 	bl	406a44 <__retarget_lock_release_recursive>
  404eac:	f04f 33ff 	mov.w	r3, #4294967295
  404eb0:	9303      	str	r3, [sp, #12]
  404eb2:	f7ff bb50 	b.w	404556 <_vfiprintf_r+0x21e>
  404eb6:	aa0f      	add	r2, sp, #60	; 0x3c
  404eb8:	9904      	ldr	r1, [sp, #16]
  404eba:	9806      	ldr	r0, [sp, #24]
  404ebc:	f7ff f9fc 	bl	4042b8 <__sprint_r.part.0>
  404ec0:	2800      	cmp	r0, #0
  404ec2:	f47f aeeb 	bne.w	404c9c <_vfiprintf_r+0x964>
  404ec6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404ec8:	e6a9      	b.n	404c1e <_vfiprintf_r+0x8e6>
  404eca:	ab0e      	add	r3, sp, #56	; 0x38
  404ecc:	2202      	movs	r2, #2
  404ece:	931c      	str	r3, [sp, #112]	; 0x70
  404ed0:	921d      	str	r2, [sp, #116]	; 0x74
  404ed2:	2001      	movs	r0, #1
  404ed4:	46ca      	mov	sl, r9
  404ed6:	e5d0      	b.n	404a7a <_vfiprintf_r+0x742>
  404ed8:	aa0f      	add	r2, sp, #60	; 0x3c
  404eda:	9904      	ldr	r1, [sp, #16]
  404edc:	9806      	ldr	r0, [sp, #24]
  404ede:	f7ff f9eb 	bl	4042b8 <__sprint_r.part.0>
  404ee2:	2800      	cmp	r0, #0
  404ee4:	f47f aeda 	bne.w	404c9c <_vfiprintf_r+0x964>
  404ee8:	9910      	ldr	r1, [sp, #64]	; 0x40
  404eea:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404eec:	1c48      	adds	r0, r1, #1
  404eee:	46ca      	mov	sl, r9
  404ef0:	e5a4      	b.n	404a3c <_vfiprintf_r+0x704>
  404ef2:	9a07      	ldr	r2, [sp, #28]
  404ef4:	9903      	ldr	r1, [sp, #12]
  404ef6:	6813      	ldr	r3, [r2, #0]
  404ef8:	17cd      	asrs	r5, r1, #31
  404efa:	4608      	mov	r0, r1
  404efc:	3204      	adds	r2, #4
  404efe:	4629      	mov	r1, r5
  404f00:	9207      	str	r2, [sp, #28]
  404f02:	e9c3 0100 	strd	r0, r1, [r3]
  404f06:	f7ff ba54 	b.w	4043b2 <_vfiprintf_r+0x7a>
  404f0a:	4658      	mov	r0, fp
  404f0c:	9607      	str	r6, [sp, #28]
  404f0e:	9302      	str	r3, [sp, #8]
  404f10:	f7fd ff36 	bl	402d80 <strlen>
  404f14:	2400      	movs	r4, #0
  404f16:	9005      	str	r0, [sp, #20]
  404f18:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404f1c:	f7ff bb5e 	b.w	4045dc <_vfiprintf_r+0x2a4>
  404f20:	aa0f      	add	r2, sp, #60	; 0x3c
  404f22:	9904      	ldr	r1, [sp, #16]
  404f24:	9806      	ldr	r0, [sp, #24]
  404f26:	f7ff f9c7 	bl	4042b8 <__sprint_r.part.0>
  404f2a:	2800      	cmp	r0, #0
  404f2c:	f47f aeb6 	bne.w	404c9c <_vfiprintf_r+0x964>
  404f30:	9910      	ldr	r1, [sp, #64]	; 0x40
  404f32:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404f34:	1c48      	adds	r0, r1, #1
  404f36:	46ca      	mov	sl, r9
  404f38:	e5a7      	b.n	404a8a <_vfiprintf_r+0x752>
  404f3a:	9910      	ldr	r1, [sp, #64]	; 0x40
  404f3c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404f3e:	4e20      	ldr	r6, [pc, #128]	; (404fc0 <_vfiprintf_r+0xc88>)
  404f40:	3101      	adds	r1, #1
  404f42:	f7ff bb90 	b.w	404666 <_vfiprintf_r+0x32e>
  404f46:	2c06      	cmp	r4, #6
  404f48:	bf28      	it	cs
  404f4a:	2406      	movcs	r4, #6
  404f4c:	9405      	str	r4, [sp, #20]
  404f4e:	9607      	str	r6, [sp, #28]
  404f50:	9401      	str	r4, [sp, #4]
  404f52:	f8df b070 	ldr.w	fp, [pc, #112]	; 404fc4 <_vfiprintf_r+0xc8c>
  404f56:	e4d5      	b.n	404904 <_vfiprintf_r+0x5cc>
  404f58:	9810      	ldr	r0, [sp, #64]	; 0x40
  404f5a:	4e19      	ldr	r6, [pc, #100]	; (404fc0 <_vfiprintf_r+0xc88>)
  404f5c:	3001      	adds	r0, #1
  404f5e:	e603      	b.n	404b68 <_vfiprintf_r+0x830>
  404f60:	9405      	str	r4, [sp, #20]
  404f62:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404f66:	9607      	str	r6, [sp, #28]
  404f68:	9302      	str	r3, [sp, #8]
  404f6a:	4604      	mov	r4, r0
  404f6c:	f7ff bb36 	b.w	4045dc <_vfiprintf_r+0x2a4>
  404f70:	4686      	mov	lr, r0
  404f72:	f7ff bbce 	b.w	404712 <_vfiprintf_r+0x3da>
  404f76:	9806      	ldr	r0, [sp, #24]
  404f78:	aa0f      	add	r2, sp, #60	; 0x3c
  404f7a:	4659      	mov	r1, fp
  404f7c:	f7ff f99c 	bl	4042b8 <__sprint_r.part.0>
  404f80:	2800      	cmp	r0, #0
  404f82:	f43f ae24 	beq.w	404bce <_vfiprintf_r+0x896>
  404f86:	e624      	b.n	404bd2 <_vfiprintf_r+0x89a>
  404f88:	9907      	ldr	r1, [sp, #28]
  404f8a:	f898 2001 	ldrb.w	r2, [r8, #1]
  404f8e:	680c      	ldr	r4, [r1, #0]
  404f90:	3104      	adds	r1, #4
  404f92:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  404f96:	46b8      	mov	r8, r7
  404f98:	9107      	str	r1, [sp, #28]
  404f9a:	f7ff ba3f 	b.w	40441c <_vfiprintf_r+0xe4>
  404f9e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404fa2:	e43c      	b.n	40481e <_vfiprintf_r+0x4e6>
  404fa4:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404fa8:	e521      	b.n	4049ee <_vfiprintf_r+0x6b6>
  404faa:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404fae:	f7ff bbf4 	b.w	40479a <_vfiprintf_r+0x462>
  404fb2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404fb6:	e491      	b.n	4048dc <_vfiprintf_r+0x5a4>
  404fb8:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404fbc:	e469      	b.n	404892 <_vfiprintf_r+0x55a>
  404fbe:	bf00      	nop
  404fc0:	00408a20 	.word	0x00408a20
  404fc4:	004089f4 	.word	0x004089f4

00404fc8 <__sbprintf>:
  404fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404fcc:	460c      	mov	r4, r1
  404fce:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  404fd2:	8989      	ldrh	r1, [r1, #12]
  404fd4:	6e66      	ldr	r6, [r4, #100]	; 0x64
  404fd6:	89e5      	ldrh	r5, [r4, #14]
  404fd8:	9619      	str	r6, [sp, #100]	; 0x64
  404fda:	f021 0102 	bic.w	r1, r1, #2
  404fde:	4606      	mov	r6, r0
  404fe0:	69e0      	ldr	r0, [r4, #28]
  404fe2:	f8ad 100c 	strh.w	r1, [sp, #12]
  404fe6:	4617      	mov	r7, r2
  404fe8:	f44f 6180 	mov.w	r1, #1024	; 0x400
  404fec:	6a62      	ldr	r2, [r4, #36]	; 0x24
  404fee:	f8ad 500e 	strh.w	r5, [sp, #14]
  404ff2:	4698      	mov	r8, r3
  404ff4:	ad1a      	add	r5, sp, #104	; 0x68
  404ff6:	2300      	movs	r3, #0
  404ff8:	9007      	str	r0, [sp, #28]
  404ffa:	a816      	add	r0, sp, #88	; 0x58
  404ffc:	9209      	str	r2, [sp, #36]	; 0x24
  404ffe:	9306      	str	r3, [sp, #24]
  405000:	9500      	str	r5, [sp, #0]
  405002:	9504      	str	r5, [sp, #16]
  405004:	9102      	str	r1, [sp, #8]
  405006:	9105      	str	r1, [sp, #20]
  405008:	f001 fd16 	bl	406a38 <__retarget_lock_init_recursive>
  40500c:	4643      	mov	r3, r8
  40500e:	463a      	mov	r2, r7
  405010:	4669      	mov	r1, sp
  405012:	4630      	mov	r0, r6
  405014:	f7ff f990 	bl	404338 <_vfiprintf_r>
  405018:	1e05      	subs	r5, r0, #0
  40501a:	db07      	blt.n	40502c <__sbprintf+0x64>
  40501c:	4630      	mov	r0, r6
  40501e:	4669      	mov	r1, sp
  405020:	f001 f8e8 	bl	4061f4 <_fflush_r>
  405024:	2800      	cmp	r0, #0
  405026:	bf18      	it	ne
  405028:	f04f 35ff 	movne.w	r5, #4294967295
  40502c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  405030:	065b      	lsls	r3, r3, #25
  405032:	d503      	bpl.n	40503c <__sbprintf+0x74>
  405034:	89a3      	ldrh	r3, [r4, #12]
  405036:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40503a:	81a3      	strh	r3, [r4, #12]
  40503c:	9816      	ldr	r0, [sp, #88]	; 0x58
  40503e:	f001 fcfd 	bl	406a3c <__retarget_lock_close_recursive>
  405042:	4628      	mov	r0, r5
  405044:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  405048:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040504c <__swsetup_r>:
  40504c:	b538      	push	{r3, r4, r5, lr}
  40504e:	4b30      	ldr	r3, [pc, #192]	; (405110 <__swsetup_r+0xc4>)
  405050:	681b      	ldr	r3, [r3, #0]
  405052:	4605      	mov	r5, r0
  405054:	460c      	mov	r4, r1
  405056:	b113      	cbz	r3, 40505e <__swsetup_r+0x12>
  405058:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  40505a:	2a00      	cmp	r2, #0
  40505c:	d038      	beq.n	4050d0 <__swsetup_r+0x84>
  40505e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405062:	b293      	uxth	r3, r2
  405064:	0718      	lsls	r0, r3, #28
  405066:	d50c      	bpl.n	405082 <__swsetup_r+0x36>
  405068:	6920      	ldr	r0, [r4, #16]
  40506a:	b1a8      	cbz	r0, 405098 <__swsetup_r+0x4c>
  40506c:	f013 0201 	ands.w	r2, r3, #1
  405070:	d01e      	beq.n	4050b0 <__swsetup_r+0x64>
  405072:	6963      	ldr	r3, [r4, #20]
  405074:	2200      	movs	r2, #0
  405076:	425b      	negs	r3, r3
  405078:	61a3      	str	r3, [r4, #24]
  40507a:	60a2      	str	r2, [r4, #8]
  40507c:	b1f0      	cbz	r0, 4050bc <__swsetup_r+0x70>
  40507e:	2000      	movs	r0, #0
  405080:	bd38      	pop	{r3, r4, r5, pc}
  405082:	06d9      	lsls	r1, r3, #27
  405084:	d53c      	bpl.n	405100 <__swsetup_r+0xb4>
  405086:	0758      	lsls	r0, r3, #29
  405088:	d426      	bmi.n	4050d8 <__swsetup_r+0x8c>
  40508a:	6920      	ldr	r0, [r4, #16]
  40508c:	f042 0308 	orr.w	r3, r2, #8
  405090:	81a3      	strh	r3, [r4, #12]
  405092:	b29b      	uxth	r3, r3
  405094:	2800      	cmp	r0, #0
  405096:	d1e9      	bne.n	40506c <__swsetup_r+0x20>
  405098:	f403 7220 	and.w	r2, r3, #640	; 0x280
  40509c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  4050a0:	d0e4      	beq.n	40506c <__swsetup_r+0x20>
  4050a2:	4628      	mov	r0, r5
  4050a4:	4621      	mov	r1, r4
  4050a6:	f001 fcfd 	bl	406aa4 <__smakebuf_r>
  4050aa:	89a3      	ldrh	r3, [r4, #12]
  4050ac:	6920      	ldr	r0, [r4, #16]
  4050ae:	e7dd      	b.n	40506c <__swsetup_r+0x20>
  4050b0:	0799      	lsls	r1, r3, #30
  4050b2:	bf58      	it	pl
  4050b4:	6962      	ldrpl	r2, [r4, #20]
  4050b6:	60a2      	str	r2, [r4, #8]
  4050b8:	2800      	cmp	r0, #0
  4050ba:	d1e0      	bne.n	40507e <__swsetup_r+0x32>
  4050bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4050c0:	061a      	lsls	r2, r3, #24
  4050c2:	d5dd      	bpl.n	405080 <__swsetup_r+0x34>
  4050c4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4050c8:	81a3      	strh	r3, [r4, #12]
  4050ca:	f04f 30ff 	mov.w	r0, #4294967295
  4050ce:	bd38      	pop	{r3, r4, r5, pc}
  4050d0:	4618      	mov	r0, r3
  4050d2:	f001 f8e7 	bl	4062a4 <__sinit>
  4050d6:	e7c2      	b.n	40505e <__swsetup_r+0x12>
  4050d8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4050da:	b151      	cbz	r1, 4050f2 <__swsetup_r+0xa6>
  4050dc:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4050e0:	4299      	cmp	r1, r3
  4050e2:	d004      	beq.n	4050ee <__swsetup_r+0xa2>
  4050e4:	4628      	mov	r0, r5
  4050e6:	f001 fa03 	bl	4064f0 <_free_r>
  4050ea:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4050ee:	2300      	movs	r3, #0
  4050f0:	6323      	str	r3, [r4, #48]	; 0x30
  4050f2:	2300      	movs	r3, #0
  4050f4:	6920      	ldr	r0, [r4, #16]
  4050f6:	6063      	str	r3, [r4, #4]
  4050f8:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  4050fc:	6020      	str	r0, [r4, #0]
  4050fe:	e7c5      	b.n	40508c <__swsetup_r+0x40>
  405100:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  405104:	2309      	movs	r3, #9
  405106:	602b      	str	r3, [r5, #0]
  405108:	f04f 30ff 	mov.w	r0, #4294967295
  40510c:	81a2      	strh	r2, [r4, #12]
  40510e:	bd38      	pop	{r3, r4, r5, pc}
  405110:	20400014 	.word	0x20400014

00405114 <register_fini>:
  405114:	4b02      	ldr	r3, [pc, #8]	; (405120 <register_fini+0xc>)
  405116:	b113      	cbz	r3, 40511e <register_fini+0xa>
  405118:	4802      	ldr	r0, [pc, #8]	; (405124 <register_fini+0x10>)
  40511a:	f000 b805 	b.w	405128 <atexit>
  40511e:	4770      	bx	lr
  405120:	00000000 	.word	0x00000000
  405124:	00406315 	.word	0x00406315

00405128 <atexit>:
  405128:	2300      	movs	r3, #0
  40512a:	4601      	mov	r1, r0
  40512c:	461a      	mov	r2, r3
  40512e:	4618      	mov	r0, r3
  405130:	f002 bc74 	b.w	407a1c <__register_exitproc>

00405134 <quorem>:
  405134:	6902      	ldr	r2, [r0, #16]
  405136:	690b      	ldr	r3, [r1, #16]
  405138:	4293      	cmp	r3, r2
  40513a:	f300 808d 	bgt.w	405258 <quorem+0x124>
  40513e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405142:	f103 38ff 	add.w	r8, r3, #4294967295
  405146:	f101 0714 	add.w	r7, r1, #20
  40514a:	f100 0b14 	add.w	fp, r0, #20
  40514e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  405152:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  405156:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40515a:	b083      	sub	sp, #12
  40515c:	3201      	adds	r2, #1
  40515e:	fbb3 f9f2 	udiv	r9, r3, r2
  405162:	eb0b 0304 	add.w	r3, fp, r4
  405166:	9400      	str	r4, [sp, #0]
  405168:	eb07 0a04 	add.w	sl, r7, r4
  40516c:	9301      	str	r3, [sp, #4]
  40516e:	f1b9 0f00 	cmp.w	r9, #0
  405172:	d039      	beq.n	4051e8 <quorem+0xb4>
  405174:	2500      	movs	r5, #0
  405176:	462e      	mov	r6, r5
  405178:	46bc      	mov	ip, r7
  40517a:	46de      	mov	lr, fp
  40517c:	f85c 4b04 	ldr.w	r4, [ip], #4
  405180:	f8de 3000 	ldr.w	r3, [lr]
  405184:	b2a2      	uxth	r2, r4
  405186:	fb09 5502 	mla	r5, r9, r2, r5
  40518a:	0c22      	lsrs	r2, r4, #16
  40518c:	0c2c      	lsrs	r4, r5, #16
  40518e:	fb09 4202 	mla	r2, r9, r2, r4
  405192:	b2ad      	uxth	r5, r5
  405194:	1b75      	subs	r5, r6, r5
  405196:	b296      	uxth	r6, r2
  405198:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  40519c:	fa15 f383 	uxtah	r3, r5, r3
  4051a0:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4051a4:	b29b      	uxth	r3, r3
  4051a6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4051aa:	45e2      	cmp	sl, ip
  4051ac:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4051b0:	f84e 3b04 	str.w	r3, [lr], #4
  4051b4:	ea4f 4626 	mov.w	r6, r6, asr #16
  4051b8:	d2e0      	bcs.n	40517c <quorem+0x48>
  4051ba:	9b00      	ldr	r3, [sp, #0]
  4051bc:	f85b 3003 	ldr.w	r3, [fp, r3]
  4051c0:	b993      	cbnz	r3, 4051e8 <quorem+0xb4>
  4051c2:	9c01      	ldr	r4, [sp, #4]
  4051c4:	1f23      	subs	r3, r4, #4
  4051c6:	459b      	cmp	fp, r3
  4051c8:	d20c      	bcs.n	4051e4 <quorem+0xb0>
  4051ca:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4051ce:	b94b      	cbnz	r3, 4051e4 <quorem+0xb0>
  4051d0:	f1a4 0308 	sub.w	r3, r4, #8
  4051d4:	e002      	b.n	4051dc <quorem+0xa8>
  4051d6:	681a      	ldr	r2, [r3, #0]
  4051d8:	3b04      	subs	r3, #4
  4051da:	b91a      	cbnz	r2, 4051e4 <quorem+0xb0>
  4051dc:	459b      	cmp	fp, r3
  4051de:	f108 38ff 	add.w	r8, r8, #4294967295
  4051e2:	d3f8      	bcc.n	4051d6 <quorem+0xa2>
  4051e4:	f8c0 8010 	str.w	r8, [r0, #16]
  4051e8:	4604      	mov	r4, r0
  4051ea:	f002 f80d 	bl	407208 <__mcmp>
  4051ee:	2800      	cmp	r0, #0
  4051f0:	db2e      	blt.n	405250 <quorem+0x11c>
  4051f2:	f109 0901 	add.w	r9, r9, #1
  4051f6:	465d      	mov	r5, fp
  4051f8:	2300      	movs	r3, #0
  4051fa:	f857 1b04 	ldr.w	r1, [r7], #4
  4051fe:	6828      	ldr	r0, [r5, #0]
  405200:	b28a      	uxth	r2, r1
  405202:	1a9a      	subs	r2, r3, r2
  405204:	0c0b      	lsrs	r3, r1, #16
  405206:	fa12 f280 	uxtah	r2, r2, r0
  40520a:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40520e:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405212:	b292      	uxth	r2, r2
  405214:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  405218:	45ba      	cmp	sl, r7
  40521a:	f845 2b04 	str.w	r2, [r5], #4
  40521e:	ea4f 4323 	mov.w	r3, r3, asr #16
  405222:	d2ea      	bcs.n	4051fa <quorem+0xc6>
  405224:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  405228:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  40522c:	b982      	cbnz	r2, 405250 <quorem+0x11c>
  40522e:	1f1a      	subs	r2, r3, #4
  405230:	4593      	cmp	fp, r2
  405232:	d20b      	bcs.n	40524c <quorem+0x118>
  405234:	f853 2c04 	ldr.w	r2, [r3, #-4]
  405238:	b942      	cbnz	r2, 40524c <quorem+0x118>
  40523a:	3b08      	subs	r3, #8
  40523c:	e002      	b.n	405244 <quorem+0x110>
  40523e:	681a      	ldr	r2, [r3, #0]
  405240:	3b04      	subs	r3, #4
  405242:	b91a      	cbnz	r2, 40524c <quorem+0x118>
  405244:	459b      	cmp	fp, r3
  405246:	f108 38ff 	add.w	r8, r8, #4294967295
  40524a:	d3f8      	bcc.n	40523e <quorem+0x10a>
  40524c:	f8c4 8010 	str.w	r8, [r4, #16]
  405250:	4648      	mov	r0, r9
  405252:	b003      	add	sp, #12
  405254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405258:	2000      	movs	r0, #0
  40525a:	4770      	bx	lr
  40525c:	0000      	movs	r0, r0
	...

00405260 <_dtoa_r>:
  405260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405264:	6c01      	ldr	r1, [r0, #64]	; 0x40
  405266:	b09b      	sub	sp, #108	; 0x6c
  405268:	4604      	mov	r4, r0
  40526a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40526c:	4692      	mov	sl, r2
  40526e:	469b      	mov	fp, r3
  405270:	b141      	cbz	r1, 405284 <_dtoa_r+0x24>
  405272:	6c42      	ldr	r2, [r0, #68]	; 0x44
  405274:	604a      	str	r2, [r1, #4]
  405276:	2301      	movs	r3, #1
  405278:	4093      	lsls	r3, r2
  40527a:	608b      	str	r3, [r1, #8]
  40527c:	f001 fdec 	bl	406e58 <_Bfree>
  405280:	2300      	movs	r3, #0
  405282:	6423      	str	r3, [r4, #64]	; 0x40
  405284:	f1bb 0f00 	cmp.w	fp, #0
  405288:	465d      	mov	r5, fp
  40528a:	db35      	blt.n	4052f8 <_dtoa_r+0x98>
  40528c:	2300      	movs	r3, #0
  40528e:	6033      	str	r3, [r6, #0]
  405290:	4b9d      	ldr	r3, [pc, #628]	; (405508 <_dtoa_r+0x2a8>)
  405292:	43ab      	bics	r3, r5
  405294:	d015      	beq.n	4052c2 <_dtoa_r+0x62>
  405296:	4650      	mov	r0, sl
  405298:	4659      	mov	r1, fp
  40529a:	2200      	movs	r2, #0
  40529c:	2300      	movs	r3, #0
  40529e:	f003 f935 	bl	40850c <__aeabi_dcmpeq>
  4052a2:	4680      	mov	r8, r0
  4052a4:	2800      	cmp	r0, #0
  4052a6:	d02d      	beq.n	405304 <_dtoa_r+0xa4>
  4052a8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4052aa:	2301      	movs	r3, #1
  4052ac:	6013      	str	r3, [r2, #0]
  4052ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4052b0:	2b00      	cmp	r3, #0
  4052b2:	f000 80bd 	beq.w	405430 <_dtoa_r+0x1d0>
  4052b6:	4895      	ldr	r0, [pc, #596]	; (40550c <_dtoa_r+0x2ac>)
  4052b8:	6018      	str	r0, [r3, #0]
  4052ba:	3801      	subs	r0, #1
  4052bc:	b01b      	add	sp, #108	; 0x6c
  4052be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4052c2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4052c4:	f242 730f 	movw	r3, #9999	; 0x270f
  4052c8:	6013      	str	r3, [r2, #0]
  4052ca:	f1ba 0f00 	cmp.w	sl, #0
  4052ce:	d10d      	bne.n	4052ec <_dtoa_r+0x8c>
  4052d0:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4052d4:	b955      	cbnz	r5, 4052ec <_dtoa_r+0x8c>
  4052d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4052d8:	488d      	ldr	r0, [pc, #564]	; (405510 <_dtoa_r+0x2b0>)
  4052da:	2b00      	cmp	r3, #0
  4052dc:	d0ee      	beq.n	4052bc <_dtoa_r+0x5c>
  4052de:	f100 0308 	add.w	r3, r0, #8
  4052e2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4052e4:	6013      	str	r3, [r2, #0]
  4052e6:	b01b      	add	sp, #108	; 0x6c
  4052e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4052ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4052ee:	4889      	ldr	r0, [pc, #548]	; (405514 <_dtoa_r+0x2b4>)
  4052f0:	2b00      	cmp	r3, #0
  4052f2:	d0e3      	beq.n	4052bc <_dtoa_r+0x5c>
  4052f4:	1cc3      	adds	r3, r0, #3
  4052f6:	e7f4      	b.n	4052e2 <_dtoa_r+0x82>
  4052f8:	2301      	movs	r3, #1
  4052fa:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4052fe:	6033      	str	r3, [r6, #0]
  405300:	46ab      	mov	fp, r5
  405302:	e7c5      	b.n	405290 <_dtoa_r+0x30>
  405304:	aa18      	add	r2, sp, #96	; 0x60
  405306:	ab19      	add	r3, sp, #100	; 0x64
  405308:	9201      	str	r2, [sp, #4]
  40530a:	9300      	str	r3, [sp, #0]
  40530c:	4652      	mov	r2, sl
  40530e:	465b      	mov	r3, fp
  405310:	4620      	mov	r0, r4
  405312:	f002 f819 	bl	407348 <__d2b>
  405316:	0d2b      	lsrs	r3, r5, #20
  405318:	4681      	mov	r9, r0
  40531a:	d071      	beq.n	405400 <_dtoa_r+0x1a0>
  40531c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  405320:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  405324:	9f18      	ldr	r7, [sp, #96]	; 0x60
  405326:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40532a:	4650      	mov	r0, sl
  40532c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  405330:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  405334:	2200      	movs	r2, #0
  405336:	4b78      	ldr	r3, [pc, #480]	; (405518 <_dtoa_r+0x2b8>)
  405338:	f002 fccc 	bl	407cd4 <__aeabi_dsub>
  40533c:	a36c      	add	r3, pc, #432	; (adr r3, 4054f0 <_dtoa_r+0x290>)
  40533e:	e9d3 2300 	ldrd	r2, r3, [r3]
  405342:	f002 fe7b 	bl	40803c <__aeabi_dmul>
  405346:	a36c      	add	r3, pc, #432	; (adr r3, 4054f8 <_dtoa_r+0x298>)
  405348:	e9d3 2300 	ldrd	r2, r3, [r3]
  40534c:	f002 fcc4 	bl	407cd8 <__adddf3>
  405350:	e9cd 0102 	strd	r0, r1, [sp, #8]
  405354:	4630      	mov	r0, r6
  405356:	f002 fe0b 	bl	407f70 <__aeabi_i2d>
  40535a:	a369      	add	r3, pc, #420	; (adr r3, 405500 <_dtoa_r+0x2a0>)
  40535c:	e9d3 2300 	ldrd	r2, r3, [r3]
  405360:	f002 fe6c 	bl	40803c <__aeabi_dmul>
  405364:	4602      	mov	r2, r0
  405366:	460b      	mov	r3, r1
  405368:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40536c:	f002 fcb4 	bl	407cd8 <__adddf3>
  405370:	e9cd 0104 	strd	r0, r1, [sp, #16]
  405374:	f003 f912 	bl	40859c <__aeabi_d2iz>
  405378:	2200      	movs	r2, #0
  40537a:	9002      	str	r0, [sp, #8]
  40537c:	2300      	movs	r3, #0
  40537e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405382:	f003 f8cd 	bl	408520 <__aeabi_dcmplt>
  405386:	2800      	cmp	r0, #0
  405388:	f040 8173 	bne.w	405672 <_dtoa_r+0x412>
  40538c:	9d02      	ldr	r5, [sp, #8]
  40538e:	2d16      	cmp	r5, #22
  405390:	f200 815d 	bhi.w	40564e <_dtoa_r+0x3ee>
  405394:	4b61      	ldr	r3, [pc, #388]	; (40551c <_dtoa_r+0x2bc>)
  405396:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40539a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40539e:	4652      	mov	r2, sl
  4053a0:	465b      	mov	r3, fp
  4053a2:	f003 f8db 	bl	40855c <__aeabi_dcmpgt>
  4053a6:	2800      	cmp	r0, #0
  4053a8:	f000 81c5 	beq.w	405736 <_dtoa_r+0x4d6>
  4053ac:	1e6b      	subs	r3, r5, #1
  4053ae:	9302      	str	r3, [sp, #8]
  4053b0:	2300      	movs	r3, #0
  4053b2:	930e      	str	r3, [sp, #56]	; 0x38
  4053b4:	1bbf      	subs	r7, r7, r6
  4053b6:	1e7b      	subs	r3, r7, #1
  4053b8:	9306      	str	r3, [sp, #24]
  4053ba:	f100 8154 	bmi.w	405666 <_dtoa_r+0x406>
  4053be:	2300      	movs	r3, #0
  4053c0:	9308      	str	r3, [sp, #32]
  4053c2:	9b02      	ldr	r3, [sp, #8]
  4053c4:	2b00      	cmp	r3, #0
  4053c6:	f2c0 8145 	blt.w	405654 <_dtoa_r+0x3f4>
  4053ca:	9a06      	ldr	r2, [sp, #24]
  4053cc:	930d      	str	r3, [sp, #52]	; 0x34
  4053ce:	4611      	mov	r1, r2
  4053d0:	4419      	add	r1, r3
  4053d2:	2300      	movs	r3, #0
  4053d4:	9106      	str	r1, [sp, #24]
  4053d6:	930c      	str	r3, [sp, #48]	; 0x30
  4053d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4053da:	2b09      	cmp	r3, #9
  4053dc:	d82a      	bhi.n	405434 <_dtoa_r+0x1d4>
  4053de:	2b05      	cmp	r3, #5
  4053e0:	f340 865b 	ble.w	40609a <_dtoa_r+0xe3a>
  4053e4:	3b04      	subs	r3, #4
  4053e6:	9324      	str	r3, [sp, #144]	; 0x90
  4053e8:	2500      	movs	r5, #0
  4053ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4053ec:	3b02      	subs	r3, #2
  4053ee:	2b03      	cmp	r3, #3
  4053f0:	f200 8642 	bhi.w	406078 <_dtoa_r+0xe18>
  4053f4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4053f8:	02c903d4 	.word	0x02c903d4
  4053fc:	046103df 	.word	0x046103df
  405400:	9f18      	ldr	r7, [sp, #96]	; 0x60
  405402:	9e19      	ldr	r6, [sp, #100]	; 0x64
  405404:	443e      	add	r6, r7
  405406:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40540a:	2b20      	cmp	r3, #32
  40540c:	f340 818e 	ble.w	40572c <_dtoa_r+0x4cc>
  405410:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  405414:	f206 4012 	addw	r0, r6, #1042	; 0x412
  405418:	409d      	lsls	r5, r3
  40541a:	fa2a f000 	lsr.w	r0, sl, r0
  40541e:	4328      	orrs	r0, r5
  405420:	f002 fd96 	bl	407f50 <__aeabi_ui2d>
  405424:	2301      	movs	r3, #1
  405426:	3e01      	subs	r6, #1
  405428:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40542c:	9314      	str	r3, [sp, #80]	; 0x50
  40542e:	e781      	b.n	405334 <_dtoa_r+0xd4>
  405430:	483b      	ldr	r0, [pc, #236]	; (405520 <_dtoa_r+0x2c0>)
  405432:	e743      	b.n	4052bc <_dtoa_r+0x5c>
  405434:	2100      	movs	r1, #0
  405436:	6461      	str	r1, [r4, #68]	; 0x44
  405438:	4620      	mov	r0, r4
  40543a:	9125      	str	r1, [sp, #148]	; 0x94
  40543c:	f001 fce6 	bl	406e0c <_Balloc>
  405440:	f04f 33ff 	mov.w	r3, #4294967295
  405444:	930a      	str	r3, [sp, #40]	; 0x28
  405446:	9a25      	ldr	r2, [sp, #148]	; 0x94
  405448:	930f      	str	r3, [sp, #60]	; 0x3c
  40544a:	2301      	movs	r3, #1
  40544c:	9004      	str	r0, [sp, #16]
  40544e:	6420      	str	r0, [r4, #64]	; 0x40
  405450:	9224      	str	r2, [sp, #144]	; 0x90
  405452:	930b      	str	r3, [sp, #44]	; 0x2c
  405454:	9b19      	ldr	r3, [sp, #100]	; 0x64
  405456:	2b00      	cmp	r3, #0
  405458:	f2c0 80d9 	blt.w	40560e <_dtoa_r+0x3ae>
  40545c:	9a02      	ldr	r2, [sp, #8]
  40545e:	2a0e      	cmp	r2, #14
  405460:	f300 80d5 	bgt.w	40560e <_dtoa_r+0x3ae>
  405464:	4b2d      	ldr	r3, [pc, #180]	; (40551c <_dtoa_r+0x2bc>)
  405466:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40546a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40546e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  405472:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405474:	2b00      	cmp	r3, #0
  405476:	f2c0 83ba 	blt.w	405bee <_dtoa_r+0x98e>
  40547a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40547e:	4650      	mov	r0, sl
  405480:	462a      	mov	r2, r5
  405482:	4633      	mov	r3, r6
  405484:	4659      	mov	r1, fp
  405486:	f002 ff03 	bl	408290 <__aeabi_ddiv>
  40548a:	f003 f887 	bl	40859c <__aeabi_d2iz>
  40548e:	4680      	mov	r8, r0
  405490:	f002 fd6e 	bl	407f70 <__aeabi_i2d>
  405494:	462a      	mov	r2, r5
  405496:	4633      	mov	r3, r6
  405498:	f002 fdd0 	bl	40803c <__aeabi_dmul>
  40549c:	460b      	mov	r3, r1
  40549e:	4602      	mov	r2, r0
  4054a0:	4659      	mov	r1, fp
  4054a2:	4650      	mov	r0, sl
  4054a4:	f002 fc16 	bl	407cd4 <__aeabi_dsub>
  4054a8:	9d04      	ldr	r5, [sp, #16]
  4054aa:	f108 0330 	add.w	r3, r8, #48	; 0x30
  4054ae:	702b      	strb	r3, [r5, #0]
  4054b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4054b2:	2b01      	cmp	r3, #1
  4054b4:	4606      	mov	r6, r0
  4054b6:	460f      	mov	r7, r1
  4054b8:	f105 0501 	add.w	r5, r5, #1
  4054bc:	d068      	beq.n	405590 <_dtoa_r+0x330>
  4054be:	2200      	movs	r2, #0
  4054c0:	4b18      	ldr	r3, [pc, #96]	; (405524 <_dtoa_r+0x2c4>)
  4054c2:	f002 fdbb 	bl	40803c <__aeabi_dmul>
  4054c6:	2200      	movs	r2, #0
  4054c8:	2300      	movs	r3, #0
  4054ca:	4606      	mov	r6, r0
  4054cc:	460f      	mov	r7, r1
  4054ce:	f003 f81d 	bl	40850c <__aeabi_dcmpeq>
  4054d2:	2800      	cmp	r0, #0
  4054d4:	f040 8088 	bne.w	4055e8 <_dtoa_r+0x388>
  4054d8:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4054dc:	f04f 0a00 	mov.w	sl, #0
  4054e0:	f8df b040 	ldr.w	fp, [pc, #64]	; 405524 <_dtoa_r+0x2c4>
  4054e4:	940c      	str	r4, [sp, #48]	; 0x30
  4054e6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4054ea:	e028      	b.n	40553e <_dtoa_r+0x2de>
  4054ec:	f3af 8000 	nop.w
  4054f0:	636f4361 	.word	0x636f4361
  4054f4:	3fd287a7 	.word	0x3fd287a7
  4054f8:	8b60c8b3 	.word	0x8b60c8b3
  4054fc:	3fc68a28 	.word	0x3fc68a28
  405500:	509f79fb 	.word	0x509f79fb
  405504:	3fd34413 	.word	0x3fd34413
  405508:	7ff00000 	.word	0x7ff00000
  40550c:	004089fd 	.word	0x004089fd
  405510:	00408a40 	.word	0x00408a40
  405514:	00408a4c 	.word	0x00408a4c
  405518:	3ff80000 	.word	0x3ff80000
  40551c:	00408a88 	.word	0x00408a88
  405520:	004089fc 	.word	0x004089fc
  405524:	40240000 	.word	0x40240000
  405528:	f002 fd88 	bl	40803c <__aeabi_dmul>
  40552c:	2200      	movs	r2, #0
  40552e:	2300      	movs	r3, #0
  405530:	4606      	mov	r6, r0
  405532:	460f      	mov	r7, r1
  405534:	f002 ffea 	bl	40850c <__aeabi_dcmpeq>
  405538:	2800      	cmp	r0, #0
  40553a:	f040 83c1 	bne.w	405cc0 <_dtoa_r+0xa60>
  40553e:	4642      	mov	r2, r8
  405540:	464b      	mov	r3, r9
  405542:	4630      	mov	r0, r6
  405544:	4639      	mov	r1, r7
  405546:	f002 fea3 	bl	408290 <__aeabi_ddiv>
  40554a:	f003 f827 	bl	40859c <__aeabi_d2iz>
  40554e:	4604      	mov	r4, r0
  405550:	f002 fd0e 	bl	407f70 <__aeabi_i2d>
  405554:	4642      	mov	r2, r8
  405556:	464b      	mov	r3, r9
  405558:	f002 fd70 	bl	40803c <__aeabi_dmul>
  40555c:	4602      	mov	r2, r0
  40555e:	460b      	mov	r3, r1
  405560:	4630      	mov	r0, r6
  405562:	4639      	mov	r1, r7
  405564:	f002 fbb6 	bl	407cd4 <__aeabi_dsub>
  405568:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40556c:	9e04      	ldr	r6, [sp, #16]
  40556e:	f805 eb01 	strb.w	lr, [r5], #1
  405572:	eba5 0e06 	sub.w	lr, r5, r6
  405576:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  405578:	45b6      	cmp	lr, r6
  40557a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40557e:	4652      	mov	r2, sl
  405580:	465b      	mov	r3, fp
  405582:	d1d1      	bne.n	405528 <_dtoa_r+0x2c8>
  405584:	46a0      	mov	r8, r4
  405586:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40558a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40558c:	4606      	mov	r6, r0
  40558e:	460f      	mov	r7, r1
  405590:	4632      	mov	r2, r6
  405592:	463b      	mov	r3, r7
  405594:	4630      	mov	r0, r6
  405596:	4639      	mov	r1, r7
  405598:	f002 fb9e 	bl	407cd8 <__adddf3>
  40559c:	4606      	mov	r6, r0
  40559e:	460f      	mov	r7, r1
  4055a0:	4602      	mov	r2, r0
  4055a2:	460b      	mov	r3, r1
  4055a4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4055a8:	f002 ffba 	bl	408520 <__aeabi_dcmplt>
  4055ac:	b948      	cbnz	r0, 4055c2 <_dtoa_r+0x362>
  4055ae:	4632      	mov	r2, r6
  4055b0:	463b      	mov	r3, r7
  4055b2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4055b6:	f002 ffa9 	bl	40850c <__aeabi_dcmpeq>
  4055ba:	b1a8      	cbz	r0, 4055e8 <_dtoa_r+0x388>
  4055bc:	f018 0f01 	tst.w	r8, #1
  4055c0:	d012      	beq.n	4055e8 <_dtoa_r+0x388>
  4055c2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4055c6:	9a04      	ldr	r2, [sp, #16]
  4055c8:	1e6b      	subs	r3, r5, #1
  4055ca:	e004      	b.n	4055d6 <_dtoa_r+0x376>
  4055cc:	429a      	cmp	r2, r3
  4055ce:	f000 8401 	beq.w	405dd4 <_dtoa_r+0xb74>
  4055d2:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4055d6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4055da:	f103 0501 	add.w	r5, r3, #1
  4055de:	d0f5      	beq.n	4055cc <_dtoa_r+0x36c>
  4055e0:	f108 0801 	add.w	r8, r8, #1
  4055e4:	f883 8000 	strb.w	r8, [r3]
  4055e8:	4649      	mov	r1, r9
  4055ea:	4620      	mov	r0, r4
  4055ec:	f001 fc34 	bl	406e58 <_Bfree>
  4055f0:	2200      	movs	r2, #0
  4055f2:	9b02      	ldr	r3, [sp, #8]
  4055f4:	702a      	strb	r2, [r5, #0]
  4055f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4055f8:	3301      	adds	r3, #1
  4055fa:	6013      	str	r3, [r2, #0]
  4055fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4055fe:	2b00      	cmp	r3, #0
  405600:	f000 839e 	beq.w	405d40 <_dtoa_r+0xae0>
  405604:	9804      	ldr	r0, [sp, #16]
  405606:	601d      	str	r5, [r3, #0]
  405608:	b01b      	add	sp, #108	; 0x6c
  40560a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40560e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405610:	2a00      	cmp	r2, #0
  405612:	d03e      	beq.n	405692 <_dtoa_r+0x432>
  405614:	9a24      	ldr	r2, [sp, #144]	; 0x90
  405616:	2a01      	cmp	r2, #1
  405618:	f340 8311 	ble.w	405c3e <_dtoa_r+0x9de>
  40561c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40561e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405620:	1e5f      	subs	r7, r3, #1
  405622:	42ba      	cmp	r2, r7
  405624:	f2c0 838f 	blt.w	405d46 <_dtoa_r+0xae6>
  405628:	1bd7      	subs	r7, r2, r7
  40562a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40562c:	2b00      	cmp	r3, #0
  40562e:	f2c0 848b 	blt.w	405f48 <_dtoa_r+0xce8>
  405632:	9d08      	ldr	r5, [sp, #32]
  405634:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405636:	9a08      	ldr	r2, [sp, #32]
  405638:	441a      	add	r2, r3
  40563a:	9208      	str	r2, [sp, #32]
  40563c:	9a06      	ldr	r2, [sp, #24]
  40563e:	2101      	movs	r1, #1
  405640:	441a      	add	r2, r3
  405642:	4620      	mov	r0, r4
  405644:	9206      	str	r2, [sp, #24]
  405646:	f001 fca1 	bl	406f8c <__i2b>
  40564a:	4606      	mov	r6, r0
  40564c:	e024      	b.n	405698 <_dtoa_r+0x438>
  40564e:	2301      	movs	r3, #1
  405650:	930e      	str	r3, [sp, #56]	; 0x38
  405652:	e6af      	b.n	4053b4 <_dtoa_r+0x154>
  405654:	9a08      	ldr	r2, [sp, #32]
  405656:	9b02      	ldr	r3, [sp, #8]
  405658:	1ad2      	subs	r2, r2, r3
  40565a:	425b      	negs	r3, r3
  40565c:	930c      	str	r3, [sp, #48]	; 0x30
  40565e:	2300      	movs	r3, #0
  405660:	9208      	str	r2, [sp, #32]
  405662:	930d      	str	r3, [sp, #52]	; 0x34
  405664:	e6b8      	b.n	4053d8 <_dtoa_r+0x178>
  405666:	f1c7 0301 	rsb	r3, r7, #1
  40566a:	9308      	str	r3, [sp, #32]
  40566c:	2300      	movs	r3, #0
  40566e:	9306      	str	r3, [sp, #24]
  405670:	e6a7      	b.n	4053c2 <_dtoa_r+0x162>
  405672:	9d02      	ldr	r5, [sp, #8]
  405674:	4628      	mov	r0, r5
  405676:	f002 fc7b 	bl	407f70 <__aeabi_i2d>
  40567a:	4602      	mov	r2, r0
  40567c:	460b      	mov	r3, r1
  40567e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405682:	f002 ff43 	bl	40850c <__aeabi_dcmpeq>
  405686:	2800      	cmp	r0, #0
  405688:	f47f ae80 	bne.w	40538c <_dtoa_r+0x12c>
  40568c:	1e6b      	subs	r3, r5, #1
  40568e:	9302      	str	r3, [sp, #8]
  405690:	e67c      	b.n	40538c <_dtoa_r+0x12c>
  405692:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405694:	9d08      	ldr	r5, [sp, #32]
  405696:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  405698:	2d00      	cmp	r5, #0
  40569a:	dd0c      	ble.n	4056b6 <_dtoa_r+0x456>
  40569c:	9906      	ldr	r1, [sp, #24]
  40569e:	2900      	cmp	r1, #0
  4056a0:	460b      	mov	r3, r1
  4056a2:	dd08      	ble.n	4056b6 <_dtoa_r+0x456>
  4056a4:	42a9      	cmp	r1, r5
  4056a6:	9a08      	ldr	r2, [sp, #32]
  4056a8:	bfa8      	it	ge
  4056aa:	462b      	movge	r3, r5
  4056ac:	1ad2      	subs	r2, r2, r3
  4056ae:	1aed      	subs	r5, r5, r3
  4056b0:	1acb      	subs	r3, r1, r3
  4056b2:	9208      	str	r2, [sp, #32]
  4056b4:	9306      	str	r3, [sp, #24]
  4056b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4056b8:	b1d3      	cbz	r3, 4056f0 <_dtoa_r+0x490>
  4056ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4056bc:	2b00      	cmp	r3, #0
  4056be:	f000 82b7 	beq.w	405c30 <_dtoa_r+0x9d0>
  4056c2:	2f00      	cmp	r7, #0
  4056c4:	dd10      	ble.n	4056e8 <_dtoa_r+0x488>
  4056c6:	4631      	mov	r1, r6
  4056c8:	463a      	mov	r2, r7
  4056ca:	4620      	mov	r0, r4
  4056cc:	f001 fcfa 	bl	4070c4 <__pow5mult>
  4056d0:	464a      	mov	r2, r9
  4056d2:	4601      	mov	r1, r0
  4056d4:	4606      	mov	r6, r0
  4056d6:	4620      	mov	r0, r4
  4056d8:	f001 fc62 	bl	406fa0 <__multiply>
  4056dc:	4649      	mov	r1, r9
  4056de:	4680      	mov	r8, r0
  4056e0:	4620      	mov	r0, r4
  4056e2:	f001 fbb9 	bl	406e58 <_Bfree>
  4056e6:	46c1      	mov	r9, r8
  4056e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4056ea:	1bda      	subs	r2, r3, r7
  4056ec:	f040 82a1 	bne.w	405c32 <_dtoa_r+0x9d2>
  4056f0:	2101      	movs	r1, #1
  4056f2:	4620      	mov	r0, r4
  4056f4:	f001 fc4a 	bl	406f8c <__i2b>
  4056f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4056fa:	2b00      	cmp	r3, #0
  4056fc:	4680      	mov	r8, r0
  4056fe:	dd1c      	ble.n	40573a <_dtoa_r+0x4da>
  405700:	4601      	mov	r1, r0
  405702:	461a      	mov	r2, r3
  405704:	4620      	mov	r0, r4
  405706:	f001 fcdd 	bl	4070c4 <__pow5mult>
  40570a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40570c:	2b01      	cmp	r3, #1
  40570e:	4680      	mov	r8, r0
  405710:	f340 8254 	ble.w	405bbc <_dtoa_r+0x95c>
  405714:	2300      	movs	r3, #0
  405716:	930c      	str	r3, [sp, #48]	; 0x30
  405718:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40571c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  405720:	6918      	ldr	r0, [r3, #16]
  405722:	f001 fbe3 	bl	406eec <__hi0bits>
  405726:	f1c0 0020 	rsb	r0, r0, #32
  40572a:	e010      	b.n	40574e <_dtoa_r+0x4ee>
  40572c:	f1c3 0520 	rsb	r5, r3, #32
  405730:	fa0a f005 	lsl.w	r0, sl, r5
  405734:	e674      	b.n	405420 <_dtoa_r+0x1c0>
  405736:	900e      	str	r0, [sp, #56]	; 0x38
  405738:	e63c      	b.n	4053b4 <_dtoa_r+0x154>
  40573a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40573c:	2b01      	cmp	r3, #1
  40573e:	f340 8287 	ble.w	405c50 <_dtoa_r+0x9f0>
  405742:	2300      	movs	r3, #0
  405744:	930c      	str	r3, [sp, #48]	; 0x30
  405746:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  405748:	2001      	movs	r0, #1
  40574a:	2b00      	cmp	r3, #0
  40574c:	d1e4      	bne.n	405718 <_dtoa_r+0x4b8>
  40574e:	9a06      	ldr	r2, [sp, #24]
  405750:	4410      	add	r0, r2
  405752:	f010 001f 	ands.w	r0, r0, #31
  405756:	f000 80a1 	beq.w	40589c <_dtoa_r+0x63c>
  40575a:	f1c0 0320 	rsb	r3, r0, #32
  40575e:	2b04      	cmp	r3, #4
  405760:	f340 849e 	ble.w	4060a0 <_dtoa_r+0xe40>
  405764:	9b08      	ldr	r3, [sp, #32]
  405766:	f1c0 001c 	rsb	r0, r0, #28
  40576a:	4403      	add	r3, r0
  40576c:	9308      	str	r3, [sp, #32]
  40576e:	4613      	mov	r3, r2
  405770:	4403      	add	r3, r0
  405772:	4405      	add	r5, r0
  405774:	9306      	str	r3, [sp, #24]
  405776:	9b08      	ldr	r3, [sp, #32]
  405778:	2b00      	cmp	r3, #0
  40577a:	dd05      	ble.n	405788 <_dtoa_r+0x528>
  40577c:	4649      	mov	r1, r9
  40577e:	461a      	mov	r2, r3
  405780:	4620      	mov	r0, r4
  405782:	f001 fcef 	bl	407164 <__lshift>
  405786:	4681      	mov	r9, r0
  405788:	9b06      	ldr	r3, [sp, #24]
  40578a:	2b00      	cmp	r3, #0
  40578c:	dd05      	ble.n	40579a <_dtoa_r+0x53a>
  40578e:	4641      	mov	r1, r8
  405790:	461a      	mov	r2, r3
  405792:	4620      	mov	r0, r4
  405794:	f001 fce6 	bl	407164 <__lshift>
  405798:	4680      	mov	r8, r0
  40579a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40579c:	2b00      	cmp	r3, #0
  40579e:	f040 8086 	bne.w	4058ae <_dtoa_r+0x64e>
  4057a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4057a4:	2b00      	cmp	r3, #0
  4057a6:	f340 8266 	ble.w	405c76 <_dtoa_r+0xa16>
  4057aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4057ac:	2b00      	cmp	r3, #0
  4057ae:	f000 8098 	beq.w	4058e2 <_dtoa_r+0x682>
  4057b2:	2d00      	cmp	r5, #0
  4057b4:	dd05      	ble.n	4057c2 <_dtoa_r+0x562>
  4057b6:	4631      	mov	r1, r6
  4057b8:	462a      	mov	r2, r5
  4057ba:	4620      	mov	r0, r4
  4057bc:	f001 fcd2 	bl	407164 <__lshift>
  4057c0:	4606      	mov	r6, r0
  4057c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4057c4:	2b00      	cmp	r3, #0
  4057c6:	f040 8337 	bne.w	405e38 <_dtoa_r+0xbd8>
  4057ca:	9606      	str	r6, [sp, #24]
  4057cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4057ce:	9a04      	ldr	r2, [sp, #16]
  4057d0:	f8dd b018 	ldr.w	fp, [sp, #24]
  4057d4:	3b01      	subs	r3, #1
  4057d6:	18d3      	adds	r3, r2, r3
  4057d8:	930b      	str	r3, [sp, #44]	; 0x2c
  4057da:	f00a 0301 	and.w	r3, sl, #1
  4057de:	930c      	str	r3, [sp, #48]	; 0x30
  4057e0:	4617      	mov	r7, r2
  4057e2:	46c2      	mov	sl, r8
  4057e4:	4651      	mov	r1, sl
  4057e6:	4648      	mov	r0, r9
  4057e8:	f7ff fca4 	bl	405134 <quorem>
  4057ec:	4631      	mov	r1, r6
  4057ee:	4605      	mov	r5, r0
  4057f0:	4648      	mov	r0, r9
  4057f2:	f001 fd09 	bl	407208 <__mcmp>
  4057f6:	465a      	mov	r2, fp
  4057f8:	900a      	str	r0, [sp, #40]	; 0x28
  4057fa:	4651      	mov	r1, sl
  4057fc:	4620      	mov	r0, r4
  4057fe:	f001 fd1f 	bl	407240 <__mdiff>
  405802:	68c2      	ldr	r2, [r0, #12]
  405804:	4680      	mov	r8, r0
  405806:	f105 0330 	add.w	r3, r5, #48	; 0x30
  40580a:	2a00      	cmp	r2, #0
  40580c:	f040 822b 	bne.w	405c66 <_dtoa_r+0xa06>
  405810:	4601      	mov	r1, r0
  405812:	4648      	mov	r0, r9
  405814:	9308      	str	r3, [sp, #32]
  405816:	f001 fcf7 	bl	407208 <__mcmp>
  40581a:	4641      	mov	r1, r8
  40581c:	9006      	str	r0, [sp, #24]
  40581e:	4620      	mov	r0, r4
  405820:	f001 fb1a 	bl	406e58 <_Bfree>
  405824:	9a06      	ldr	r2, [sp, #24]
  405826:	9b08      	ldr	r3, [sp, #32]
  405828:	b932      	cbnz	r2, 405838 <_dtoa_r+0x5d8>
  40582a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40582c:	b921      	cbnz	r1, 405838 <_dtoa_r+0x5d8>
  40582e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405830:	2a00      	cmp	r2, #0
  405832:	f000 83ef 	beq.w	406014 <_dtoa_r+0xdb4>
  405836:	9a24      	ldr	r2, [sp, #144]	; 0x90
  405838:	990a      	ldr	r1, [sp, #40]	; 0x28
  40583a:	2900      	cmp	r1, #0
  40583c:	f2c0 829f 	blt.w	405d7e <_dtoa_r+0xb1e>
  405840:	d105      	bne.n	40584e <_dtoa_r+0x5ee>
  405842:	9924      	ldr	r1, [sp, #144]	; 0x90
  405844:	b919      	cbnz	r1, 40584e <_dtoa_r+0x5ee>
  405846:	990c      	ldr	r1, [sp, #48]	; 0x30
  405848:	2900      	cmp	r1, #0
  40584a:	f000 8298 	beq.w	405d7e <_dtoa_r+0xb1e>
  40584e:	2a00      	cmp	r2, #0
  405850:	f300 8306 	bgt.w	405e60 <_dtoa_r+0xc00>
  405854:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405856:	703b      	strb	r3, [r7, #0]
  405858:	f107 0801 	add.w	r8, r7, #1
  40585c:	4297      	cmp	r7, r2
  40585e:	4645      	mov	r5, r8
  405860:	f000 830c 	beq.w	405e7c <_dtoa_r+0xc1c>
  405864:	4649      	mov	r1, r9
  405866:	2300      	movs	r3, #0
  405868:	220a      	movs	r2, #10
  40586a:	4620      	mov	r0, r4
  40586c:	f001 fafe 	bl	406e6c <__multadd>
  405870:	455e      	cmp	r6, fp
  405872:	4681      	mov	r9, r0
  405874:	4631      	mov	r1, r6
  405876:	f04f 0300 	mov.w	r3, #0
  40587a:	f04f 020a 	mov.w	r2, #10
  40587e:	4620      	mov	r0, r4
  405880:	f000 81eb 	beq.w	405c5a <_dtoa_r+0x9fa>
  405884:	f001 faf2 	bl	406e6c <__multadd>
  405888:	4659      	mov	r1, fp
  40588a:	4606      	mov	r6, r0
  40588c:	2300      	movs	r3, #0
  40588e:	220a      	movs	r2, #10
  405890:	4620      	mov	r0, r4
  405892:	f001 faeb 	bl	406e6c <__multadd>
  405896:	4647      	mov	r7, r8
  405898:	4683      	mov	fp, r0
  40589a:	e7a3      	b.n	4057e4 <_dtoa_r+0x584>
  40589c:	201c      	movs	r0, #28
  40589e:	9b08      	ldr	r3, [sp, #32]
  4058a0:	4403      	add	r3, r0
  4058a2:	9308      	str	r3, [sp, #32]
  4058a4:	9b06      	ldr	r3, [sp, #24]
  4058a6:	4403      	add	r3, r0
  4058a8:	4405      	add	r5, r0
  4058aa:	9306      	str	r3, [sp, #24]
  4058ac:	e763      	b.n	405776 <_dtoa_r+0x516>
  4058ae:	4641      	mov	r1, r8
  4058b0:	4648      	mov	r0, r9
  4058b2:	f001 fca9 	bl	407208 <__mcmp>
  4058b6:	2800      	cmp	r0, #0
  4058b8:	f6bf af73 	bge.w	4057a2 <_dtoa_r+0x542>
  4058bc:	9f02      	ldr	r7, [sp, #8]
  4058be:	4649      	mov	r1, r9
  4058c0:	2300      	movs	r3, #0
  4058c2:	220a      	movs	r2, #10
  4058c4:	4620      	mov	r0, r4
  4058c6:	3f01      	subs	r7, #1
  4058c8:	9702      	str	r7, [sp, #8]
  4058ca:	f001 facf 	bl	406e6c <__multadd>
  4058ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4058d0:	4681      	mov	r9, r0
  4058d2:	2b00      	cmp	r3, #0
  4058d4:	f040 83b6 	bne.w	406044 <_dtoa_r+0xde4>
  4058d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4058da:	2b00      	cmp	r3, #0
  4058dc:	f340 83bf 	ble.w	40605e <_dtoa_r+0xdfe>
  4058e0:	930a      	str	r3, [sp, #40]	; 0x28
  4058e2:	f8dd b010 	ldr.w	fp, [sp, #16]
  4058e6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4058e8:	465d      	mov	r5, fp
  4058ea:	e002      	b.n	4058f2 <_dtoa_r+0x692>
  4058ec:	f001 fabe 	bl	406e6c <__multadd>
  4058f0:	4681      	mov	r9, r0
  4058f2:	4641      	mov	r1, r8
  4058f4:	4648      	mov	r0, r9
  4058f6:	f7ff fc1d 	bl	405134 <quorem>
  4058fa:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4058fe:	f805 ab01 	strb.w	sl, [r5], #1
  405902:	eba5 030b 	sub.w	r3, r5, fp
  405906:	42bb      	cmp	r3, r7
  405908:	f04f 020a 	mov.w	r2, #10
  40590c:	f04f 0300 	mov.w	r3, #0
  405910:	4649      	mov	r1, r9
  405912:	4620      	mov	r0, r4
  405914:	dbea      	blt.n	4058ec <_dtoa_r+0x68c>
  405916:	9b04      	ldr	r3, [sp, #16]
  405918:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40591a:	2a01      	cmp	r2, #1
  40591c:	bfac      	ite	ge
  40591e:	189b      	addge	r3, r3, r2
  405920:	3301      	addlt	r3, #1
  405922:	461d      	mov	r5, r3
  405924:	f04f 0b00 	mov.w	fp, #0
  405928:	4649      	mov	r1, r9
  40592a:	2201      	movs	r2, #1
  40592c:	4620      	mov	r0, r4
  40592e:	f001 fc19 	bl	407164 <__lshift>
  405932:	4641      	mov	r1, r8
  405934:	4681      	mov	r9, r0
  405936:	f001 fc67 	bl	407208 <__mcmp>
  40593a:	2800      	cmp	r0, #0
  40593c:	f340 823d 	ble.w	405dba <_dtoa_r+0xb5a>
  405940:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  405944:	9904      	ldr	r1, [sp, #16]
  405946:	1e6b      	subs	r3, r5, #1
  405948:	e004      	b.n	405954 <_dtoa_r+0x6f4>
  40594a:	428b      	cmp	r3, r1
  40594c:	f000 81ae 	beq.w	405cac <_dtoa_r+0xa4c>
  405950:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  405954:	2a39      	cmp	r2, #57	; 0x39
  405956:	f103 0501 	add.w	r5, r3, #1
  40595a:	d0f6      	beq.n	40594a <_dtoa_r+0x6ea>
  40595c:	3201      	adds	r2, #1
  40595e:	701a      	strb	r2, [r3, #0]
  405960:	4641      	mov	r1, r8
  405962:	4620      	mov	r0, r4
  405964:	f001 fa78 	bl	406e58 <_Bfree>
  405968:	2e00      	cmp	r6, #0
  40596a:	f43f ae3d 	beq.w	4055e8 <_dtoa_r+0x388>
  40596e:	f1bb 0f00 	cmp.w	fp, #0
  405972:	d005      	beq.n	405980 <_dtoa_r+0x720>
  405974:	45b3      	cmp	fp, r6
  405976:	d003      	beq.n	405980 <_dtoa_r+0x720>
  405978:	4659      	mov	r1, fp
  40597a:	4620      	mov	r0, r4
  40597c:	f001 fa6c 	bl	406e58 <_Bfree>
  405980:	4631      	mov	r1, r6
  405982:	4620      	mov	r0, r4
  405984:	f001 fa68 	bl	406e58 <_Bfree>
  405988:	e62e      	b.n	4055e8 <_dtoa_r+0x388>
  40598a:	2300      	movs	r3, #0
  40598c:	930b      	str	r3, [sp, #44]	; 0x2c
  40598e:	9b02      	ldr	r3, [sp, #8]
  405990:	9a25      	ldr	r2, [sp, #148]	; 0x94
  405992:	4413      	add	r3, r2
  405994:	930f      	str	r3, [sp, #60]	; 0x3c
  405996:	3301      	adds	r3, #1
  405998:	2b01      	cmp	r3, #1
  40599a:	461f      	mov	r7, r3
  40599c:	461e      	mov	r6, r3
  40599e:	930a      	str	r3, [sp, #40]	; 0x28
  4059a0:	bfb8      	it	lt
  4059a2:	2701      	movlt	r7, #1
  4059a4:	2100      	movs	r1, #0
  4059a6:	2f17      	cmp	r7, #23
  4059a8:	6461      	str	r1, [r4, #68]	; 0x44
  4059aa:	d90a      	bls.n	4059c2 <_dtoa_r+0x762>
  4059ac:	2201      	movs	r2, #1
  4059ae:	2304      	movs	r3, #4
  4059b0:	005b      	lsls	r3, r3, #1
  4059b2:	f103 0014 	add.w	r0, r3, #20
  4059b6:	4287      	cmp	r7, r0
  4059b8:	4611      	mov	r1, r2
  4059ba:	f102 0201 	add.w	r2, r2, #1
  4059be:	d2f7      	bcs.n	4059b0 <_dtoa_r+0x750>
  4059c0:	6461      	str	r1, [r4, #68]	; 0x44
  4059c2:	4620      	mov	r0, r4
  4059c4:	f001 fa22 	bl	406e0c <_Balloc>
  4059c8:	2e0e      	cmp	r6, #14
  4059ca:	9004      	str	r0, [sp, #16]
  4059cc:	6420      	str	r0, [r4, #64]	; 0x40
  4059ce:	f63f ad41 	bhi.w	405454 <_dtoa_r+0x1f4>
  4059d2:	2d00      	cmp	r5, #0
  4059d4:	f43f ad3e 	beq.w	405454 <_dtoa_r+0x1f4>
  4059d8:	9902      	ldr	r1, [sp, #8]
  4059da:	2900      	cmp	r1, #0
  4059dc:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4059e0:	f340 8202 	ble.w	405de8 <_dtoa_r+0xb88>
  4059e4:	4bb8      	ldr	r3, [pc, #736]	; (405cc8 <_dtoa_r+0xa68>)
  4059e6:	f001 020f 	and.w	r2, r1, #15
  4059ea:	110d      	asrs	r5, r1, #4
  4059ec:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4059f0:	06e9      	lsls	r1, r5, #27
  4059f2:	e9d3 6700 	ldrd	r6, r7, [r3]
  4059f6:	f140 81ae 	bpl.w	405d56 <_dtoa_r+0xaf6>
  4059fa:	4bb4      	ldr	r3, [pc, #720]	; (405ccc <_dtoa_r+0xa6c>)
  4059fc:	4650      	mov	r0, sl
  4059fe:	4659      	mov	r1, fp
  405a00:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  405a04:	f002 fc44 	bl	408290 <__aeabi_ddiv>
  405a08:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  405a0c:	f005 050f 	and.w	r5, r5, #15
  405a10:	f04f 0a03 	mov.w	sl, #3
  405a14:	b18d      	cbz	r5, 405a3a <_dtoa_r+0x7da>
  405a16:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 405ccc <_dtoa_r+0xa6c>
  405a1a:	07ea      	lsls	r2, r5, #31
  405a1c:	d509      	bpl.n	405a32 <_dtoa_r+0x7d2>
  405a1e:	4630      	mov	r0, r6
  405a20:	4639      	mov	r1, r7
  405a22:	e9d8 2300 	ldrd	r2, r3, [r8]
  405a26:	f002 fb09 	bl	40803c <__aeabi_dmul>
  405a2a:	f10a 0a01 	add.w	sl, sl, #1
  405a2e:	4606      	mov	r6, r0
  405a30:	460f      	mov	r7, r1
  405a32:	106d      	asrs	r5, r5, #1
  405a34:	f108 0808 	add.w	r8, r8, #8
  405a38:	d1ef      	bne.n	405a1a <_dtoa_r+0x7ba>
  405a3a:	463b      	mov	r3, r7
  405a3c:	4632      	mov	r2, r6
  405a3e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  405a42:	f002 fc25 	bl	408290 <__aeabi_ddiv>
  405a46:	4607      	mov	r7, r0
  405a48:	4688      	mov	r8, r1
  405a4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405a4c:	b143      	cbz	r3, 405a60 <_dtoa_r+0x800>
  405a4e:	2200      	movs	r2, #0
  405a50:	4b9f      	ldr	r3, [pc, #636]	; (405cd0 <_dtoa_r+0xa70>)
  405a52:	4638      	mov	r0, r7
  405a54:	4641      	mov	r1, r8
  405a56:	f002 fd63 	bl	408520 <__aeabi_dcmplt>
  405a5a:	2800      	cmp	r0, #0
  405a5c:	f040 8286 	bne.w	405f6c <_dtoa_r+0xd0c>
  405a60:	4650      	mov	r0, sl
  405a62:	f002 fa85 	bl	407f70 <__aeabi_i2d>
  405a66:	463a      	mov	r2, r7
  405a68:	4643      	mov	r3, r8
  405a6a:	f002 fae7 	bl	40803c <__aeabi_dmul>
  405a6e:	4b99      	ldr	r3, [pc, #612]	; (405cd4 <_dtoa_r+0xa74>)
  405a70:	2200      	movs	r2, #0
  405a72:	f002 f931 	bl	407cd8 <__adddf3>
  405a76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a78:	4605      	mov	r5, r0
  405a7a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405a7e:	2b00      	cmp	r3, #0
  405a80:	f000 813e 	beq.w	405d00 <_dtoa_r+0xaa0>
  405a84:	9b02      	ldr	r3, [sp, #8]
  405a86:	9315      	str	r3, [sp, #84]	; 0x54
  405a88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a8a:	9312      	str	r3, [sp, #72]	; 0x48
  405a8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405a8e:	2b00      	cmp	r3, #0
  405a90:	f000 81fa 	beq.w	405e88 <_dtoa_r+0xc28>
  405a94:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405a96:	4b8c      	ldr	r3, [pc, #560]	; (405cc8 <_dtoa_r+0xa68>)
  405a98:	498f      	ldr	r1, [pc, #572]	; (405cd8 <_dtoa_r+0xa78>)
  405a9a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405a9e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  405aa2:	2000      	movs	r0, #0
  405aa4:	f002 fbf4 	bl	408290 <__aeabi_ddiv>
  405aa8:	462a      	mov	r2, r5
  405aaa:	4633      	mov	r3, r6
  405aac:	f002 f912 	bl	407cd4 <__aeabi_dsub>
  405ab0:	4682      	mov	sl, r0
  405ab2:	468b      	mov	fp, r1
  405ab4:	4638      	mov	r0, r7
  405ab6:	4641      	mov	r1, r8
  405ab8:	f002 fd70 	bl	40859c <__aeabi_d2iz>
  405abc:	4605      	mov	r5, r0
  405abe:	f002 fa57 	bl	407f70 <__aeabi_i2d>
  405ac2:	4602      	mov	r2, r0
  405ac4:	460b      	mov	r3, r1
  405ac6:	4638      	mov	r0, r7
  405ac8:	4641      	mov	r1, r8
  405aca:	f002 f903 	bl	407cd4 <__aeabi_dsub>
  405ace:	3530      	adds	r5, #48	; 0x30
  405ad0:	fa5f f885 	uxtb.w	r8, r5
  405ad4:	9d04      	ldr	r5, [sp, #16]
  405ad6:	4606      	mov	r6, r0
  405ad8:	460f      	mov	r7, r1
  405ada:	f885 8000 	strb.w	r8, [r5]
  405ade:	4602      	mov	r2, r0
  405ae0:	460b      	mov	r3, r1
  405ae2:	4650      	mov	r0, sl
  405ae4:	4659      	mov	r1, fp
  405ae6:	3501      	adds	r5, #1
  405ae8:	f002 fd38 	bl	40855c <__aeabi_dcmpgt>
  405aec:	2800      	cmp	r0, #0
  405aee:	d154      	bne.n	405b9a <_dtoa_r+0x93a>
  405af0:	4632      	mov	r2, r6
  405af2:	463b      	mov	r3, r7
  405af4:	2000      	movs	r0, #0
  405af6:	4976      	ldr	r1, [pc, #472]	; (405cd0 <_dtoa_r+0xa70>)
  405af8:	f002 f8ec 	bl	407cd4 <__aeabi_dsub>
  405afc:	4602      	mov	r2, r0
  405afe:	460b      	mov	r3, r1
  405b00:	4650      	mov	r0, sl
  405b02:	4659      	mov	r1, fp
  405b04:	f002 fd2a 	bl	40855c <__aeabi_dcmpgt>
  405b08:	2800      	cmp	r0, #0
  405b0a:	f040 8270 	bne.w	405fee <_dtoa_r+0xd8e>
  405b0e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405b10:	2a01      	cmp	r2, #1
  405b12:	f000 8111 	beq.w	405d38 <_dtoa_r+0xad8>
  405b16:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405b18:	9a04      	ldr	r2, [sp, #16]
  405b1a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405b1e:	4413      	add	r3, r2
  405b20:	4699      	mov	r9, r3
  405b22:	e00d      	b.n	405b40 <_dtoa_r+0x8e0>
  405b24:	2000      	movs	r0, #0
  405b26:	496a      	ldr	r1, [pc, #424]	; (405cd0 <_dtoa_r+0xa70>)
  405b28:	f002 f8d4 	bl	407cd4 <__aeabi_dsub>
  405b2c:	4652      	mov	r2, sl
  405b2e:	465b      	mov	r3, fp
  405b30:	f002 fcf6 	bl	408520 <__aeabi_dcmplt>
  405b34:	2800      	cmp	r0, #0
  405b36:	f040 8258 	bne.w	405fea <_dtoa_r+0xd8a>
  405b3a:	454d      	cmp	r5, r9
  405b3c:	f000 80fa 	beq.w	405d34 <_dtoa_r+0xad4>
  405b40:	4650      	mov	r0, sl
  405b42:	4659      	mov	r1, fp
  405b44:	2200      	movs	r2, #0
  405b46:	4b65      	ldr	r3, [pc, #404]	; (405cdc <_dtoa_r+0xa7c>)
  405b48:	f002 fa78 	bl	40803c <__aeabi_dmul>
  405b4c:	2200      	movs	r2, #0
  405b4e:	4b63      	ldr	r3, [pc, #396]	; (405cdc <_dtoa_r+0xa7c>)
  405b50:	4682      	mov	sl, r0
  405b52:	468b      	mov	fp, r1
  405b54:	4630      	mov	r0, r6
  405b56:	4639      	mov	r1, r7
  405b58:	f002 fa70 	bl	40803c <__aeabi_dmul>
  405b5c:	460f      	mov	r7, r1
  405b5e:	4606      	mov	r6, r0
  405b60:	f002 fd1c 	bl	40859c <__aeabi_d2iz>
  405b64:	4680      	mov	r8, r0
  405b66:	f002 fa03 	bl	407f70 <__aeabi_i2d>
  405b6a:	4602      	mov	r2, r0
  405b6c:	460b      	mov	r3, r1
  405b6e:	4630      	mov	r0, r6
  405b70:	4639      	mov	r1, r7
  405b72:	f002 f8af 	bl	407cd4 <__aeabi_dsub>
  405b76:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405b7a:	fa5f f888 	uxtb.w	r8, r8
  405b7e:	4652      	mov	r2, sl
  405b80:	465b      	mov	r3, fp
  405b82:	f805 8b01 	strb.w	r8, [r5], #1
  405b86:	4606      	mov	r6, r0
  405b88:	460f      	mov	r7, r1
  405b8a:	f002 fcc9 	bl	408520 <__aeabi_dcmplt>
  405b8e:	4632      	mov	r2, r6
  405b90:	463b      	mov	r3, r7
  405b92:	2800      	cmp	r0, #0
  405b94:	d0c6      	beq.n	405b24 <_dtoa_r+0x8c4>
  405b96:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405b9a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405b9c:	9302      	str	r3, [sp, #8]
  405b9e:	e523      	b.n	4055e8 <_dtoa_r+0x388>
  405ba0:	2300      	movs	r3, #0
  405ba2:	930b      	str	r3, [sp, #44]	; 0x2c
  405ba4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405ba6:	2b00      	cmp	r3, #0
  405ba8:	f340 80dc 	ble.w	405d64 <_dtoa_r+0xb04>
  405bac:	461f      	mov	r7, r3
  405bae:	461e      	mov	r6, r3
  405bb0:	930f      	str	r3, [sp, #60]	; 0x3c
  405bb2:	930a      	str	r3, [sp, #40]	; 0x28
  405bb4:	e6f6      	b.n	4059a4 <_dtoa_r+0x744>
  405bb6:	2301      	movs	r3, #1
  405bb8:	930b      	str	r3, [sp, #44]	; 0x2c
  405bba:	e7f3      	b.n	405ba4 <_dtoa_r+0x944>
  405bbc:	f1ba 0f00 	cmp.w	sl, #0
  405bc0:	f47f ada8 	bne.w	405714 <_dtoa_r+0x4b4>
  405bc4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  405bc8:	2b00      	cmp	r3, #0
  405bca:	f47f adba 	bne.w	405742 <_dtoa_r+0x4e2>
  405bce:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  405bd2:	0d3f      	lsrs	r7, r7, #20
  405bd4:	053f      	lsls	r7, r7, #20
  405bd6:	2f00      	cmp	r7, #0
  405bd8:	f000 820d 	beq.w	405ff6 <_dtoa_r+0xd96>
  405bdc:	9b08      	ldr	r3, [sp, #32]
  405bde:	3301      	adds	r3, #1
  405be0:	9308      	str	r3, [sp, #32]
  405be2:	9b06      	ldr	r3, [sp, #24]
  405be4:	3301      	adds	r3, #1
  405be6:	9306      	str	r3, [sp, #24]
  405be8:	2301      	movs	r3, #1
  405bea:	930c      	str	r3, [sp, #48]	; 0x30
  405bec:	e5ab      	b.n	405746 <_dtoa_r+0x4e6>
  405bee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405bf0:	2b00      	cmp	r3, #0
  405bf2:	f73f ac42 	bgt.w	40547a <_dtoa_r+0x21a>
  405bf6:	f040 8221 	bne.w	40603c <_dtoa_r+0xddc>
  405bfa:	2200      	movs	r2, #0
  405bfc:	4b38      	ldr	r3, [pc, #224]	; (405ce0 <_dtoa_r+0xa80>)
  405bfe:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405c02:	f002 fa1b 	bl	40803c <__aeabi_dmul>
  405c06:	4652      	mov	r2, sl
  405c08:	465b      	mov	r3, fp
  405c0a:	f002 fc9d 	bl	408548 <__aeabi_dcmpge>
  405c0e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  405c12:	4646      	mov	r6, r8
  405c14:	2800      	cmp	r0, #0
  405c16:	d041      	beq.n	405c9c <_dtoa_r+0xa3c>
  405c18:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405c1a:	9d04      	ldr	r5, [sp, #16]
  405c1c:	43db      	mvns	r3, r3
  405c1e:	9302      	str	r3, [sp, #8]
  405c20:	4641      	mov	r1, r8
  405c22:	4620      	mov	r0, r4
  405c24:	f001 f918 	bl	406e58 <_Bfree>
  405c28:	2e00      	cmp	r6, #0
  405c2a:	f43f acdd 	beq.w	4055e8 <_dtoa_r+0x388>
  405c2e:	e6a7      	b.n	405980 <_dtoa_r+0x720>
  405c30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405c32:	4649      	mov	r1, r9
  405c34:	4620      	mov	r0, r4
  405c36:	f001 fa45 	bl	4070c4 <__pow5mult>
  405c3a:	4681      	mov	r9, r0
  405c3c:	e558      	b.n	4056f0 <_dtoa_r+0x490>
  405c3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  405c40:	2a00      	cmp	r2, #0
  405c42:	f000 8187 	beq.w	405f54 <_dtoa_r+0xcf4>
  405c46:	f203 4333 	addw	r3, r3, #1075	; 0x433
  405c4a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405c4c:	9d08      	ldr	r5, [sp, #32]
  405c4e:	e4f2      	b.n	405636 <_dtoa_r+0x3d6>
  405c50:	f1ba 0f00 	cmp.w	sl, #0
  405c54:	f47f ad75 	bne.w	405742 <_dtoa_r+0x4e2>
  405c58:	e7b4      	b.n	405bc4 <_dtoa_r+0x964>
  405c5a:	f001 f907 	bl	406e6c <__multadd>
  405c5e:	4647      	mov	r7, r8
  405c60:	4606      	mov	r6, r0
  405c62:	4683      	mov	fp, r0
  405c64:	e5be      	b.n	4057e4 <_dtoa_r+0x584>
  405c66:	4601      	mov	r1, r0
  405c68:	4620      	mov	r0, r4
  405c6a:	9306      	str	r3, [sp, #24]
  405c6c:	f001 f8f4 	bl	406e58 <_Bfree>
  405c70:	2201      	movs	r2, #1
  405c72:	9b06      	ldr	r3, [sp, #24]
  405c74:	e5e0      	b.n	405838 <_dtoa_r+0x5d8>
  405c76:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405c78:	2b02      	cmp	r3, #2
  405c7a:	f77f ad96 	ble.w	4057aa <_dtoa_r+0x54a>
  405c7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405c80:	2b00      	cmp	r3, #0
  405c82:	d1c9      	bne.n	405c18 <_dtoa_r+0x9b8>
  405c84:	4641      	mov	r1, r8
  405c86:	2205      	movs	r2, #5
  405c88:	4620      	mov	r0, r4
  405c8a:	f001 f8ef 	bl	406e6c <__multadd>
  405c8e:	4601      	mov	r1, r0
  405c90:	4680      	mov	r8, r0
  405c92:	4648      	mov	r0, r9
  405c94:	f001 fab8 	bl	407208 <__mcmp>
  405c98:	2800      	cmp	r0, #0
  405c9a:	ddbd      	ble.n	405c18 <_dtoa_r+0x9b8>
  405c9c:	9a02      	ldr	r2, [sp, #8]
  405c9e:	9904      	ldr	r1, [sp, #16]
  405ca0:	2331      	movs	r3, #49	; 0x31
  405ca2:	3201      	adds	r2, #1
  405ca4:	9202      	str	r2, [sp, #8]
  405ca6:	700b      	strb	r3, [r1, #0]
  405ca8:	1c4d      	adds	r5, r1, #1
  405caa:	e7b9      	b.n	405c20 <_dtoa_r+0x9c0>
  405cac:	9a02      	ldr	r2, [sp, #8]
  405cae:	3201      	adds	r2, #1
  405cb0:	9202      	str	r2, [sp, #8]
  405cb2:	9a04      	ldr	r2, [sp, #16]
  405cb4:	2331      	movs	r3, #49	; 0x31
  405cb6:	7013      	strb	r3, [r2, #0]
  405cb8:	e652      	b.n	405960 <_dtoa_r+0x700>
  405cba:	2301      	movs	r3, #1
  405cbc:	930b      	str	r3, [sp, #44]	; 0x2c
  405cbe:	e666      	b.n	40598e <_dtoa_r+0x72e>
  405cc0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  405cc4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405cc6:	e48f      	b.n	4055e8 <_dtoa_r+0x388>
  405cc8:	00408a88 	.word	0x00408a88
  405ccc:	00408a60 	.word	0x00408a60
  405cd0:	3ff00000 	.word	0x3ff00000
  405cd4:	401c0000 	.word	0x401c0000
  405cd8:	3fe00000 	.word	0x3fe00000
  405cdc:	40240000 	.word	0x40240000
  405ce0:	40140000 	.word	0x40140000
  405ce4:	4650      	mov	r0, sl
  405ce6:	f002 f943 	bl	407f70 <__aeabi_i2d>
  405cea:	463a      	mov	r2, r7
  405cec:	4643      	mov	r3, r8
  405cee:	f002 f9a5 	bl	40803c <__aeabi_dmul>
  405cf2:	2200      	movs	r2, #0
  405cf4:	4bc1      	ldr	r3, [pc, #772]	; (405ffc <_dtoa_r+0xd9c>)
  405cf6:	f001 ffef 	bl	407cd8 <__adddf3>
  405cfa:	4605      	mov	r5, r0
  405cfc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405d00:	4641      	mov	r1, r8
  405d02:	2200      	movs	r2, #0
  405d04:	4bbe      	ldr	r3, [pc, #760]	; (406000 <_dtoa_r+0xda0>)
  405d06:	4638      	mov	r0, r7
  405d08:	f001 ffe4 	bl	407cd4 <__aeabi_dsub>
  405d0c:	462a      	mov	r2, r5
  405d0e:	4633      	mov	r3, r6
  405d10:	4682      	mov	sl, r0
  405d12:	468b      	mov	fp, r1
  405d14:	f002 fc22 	bl	40855c <__aeabi_dcmpgt>
  405d18:	4680      	mov	r8, r0
  405d1a:	2800      	cmp	r0, #0
  405d1c:	f040 8110 	bne.w	405f40 <_dtoa_r+0xce0>
  405d20:	462a      	mov	r2, r5
  405d22:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  405d26:	4650      	mov	r0, sl
  405d28:	4659      	mov	r1, fp
  405d2a:	f002 fbf9 	bl	408520 <__aeabi_dcmplt>
  405d2e:	b118      	cbz	r0, 405d38 <_dtoa_r+0xad8>
  405d30:	4646      	mov	r6, r8
  405d32:	e771      	b.n	405c18 <_dtoa_r+0x9b8>
  405d34:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405d38:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  405d3c:	f7ff bb8a 	b.w	405454 <_dtoa_r+0x1f4>
  405d40:	9804      	ldr	r0, [sp, #16]
  405d42:	f7ff babb 	b.w	4052bc <_dtoa_r+0x5c>
  405d46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405d48:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  405d4a:	970c      	str	r7, [sp, #48]	; 0x30
  405d4c:	1afb      	subs	r3, r7, r3
  405d4e:	441a      	add	r2, r3
  405d50:	920d      	str	r2, [sp, #52]	; 0x34
  405d52:	2700      	movs	r7, #0
  405d54:	e469      	b.n	40562a <_dtoa_r+0x3ca>
  405d56:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  405d5a:	f04f 0a02 	mov.w	sl, #2
  405d5e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  405d62:	e657      	b.n	405a14 <_dtoa_r+0x7b4>
  405d64:	2100      	movs	r1, #0
  405d66:	2301      	movs	r3, #1
  405d68:	6461      	str	r1, [r4, #68]	; 0x44
  405d6a:	4620      	mov	r0, r4
  405d6c:	9325      	str	r3, [sp, #148]	; 0x94
  405d6e:	f001 f84d 	bl	406e0c <_Balloc>
  405d72:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405d74:	9004      	str	r0, [sp, #16]
  405d76:	6420      	str	r0, [r4, #64]	; 0x40
  405d78:	930a      	str	r3, [sp, #40]	; 0x28
  405d7a:	930f      	str	r3, [sp, #60]	; 0x3c
  405d7c:	e629      	b.n	4059d2 <_dtoa_r+0x772>
  405d7e:	2a00      	cmp	r2, #0
  405d80:	46d0      	mov	r8, sl
  405d82:	f8cd b018 	str.w	fp, [sp, #24]
  405d86:	469a      	mov	sl, r3
  405d88:	dd11      	ble.n	405dae <_dtoa_r+0xb4e>
  405d8a:	4649      	mov	r1, r9
  405d8c:	2201      	movs	r2, #1
  405d8e:	4620      	mov	r0, r4
  405d90:	f001 f9e8 	bl	407164 <__lshift>
  405d94:	4641      	mov	r1, r8
  405d96:	4681      	mov	r9, r0
  405d98:	f001 fa36 	bl	407208 <__mcmp>
  405d9c:	2800      	cmp	r0, #0
  405d9e:	f340 8146 	ble.w	40602e <_dtoa_r+0xdce>
  405da2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  405da6:	f000 8106 	beq.w	405fb6 <_dtoa_r+0xd56>
  405daa:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  405dae:	46b3      	mov	fp, r6
  405db0:	f887 a000 	strb.w	sl, [r7]
  405db4:	1c7d      	adds	r5, r7, #1
  405db6:	9e06      	ldr	r6, [sp, #24]
  405db8:	e5d2      	b.n	405960 <_dtoa_r+0x700>
  405dba:	d104      	bne.n	405dc6 <_dtoa_r+0xb66>
  405dbc:	f01a 0f01 	tst.w	sl, #1
  405dc0:	d001      	beq.n	405dc6 <_dtoa_r+0xb66>
  405dc2:	e5bd      	b.n	405940 <_dtoa_r+0x6e0>
  405dc4:	4615      	mov	r5, r2
  405dc6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405dca:	2b30      	cmp	r3, #48	; 0x30
  405dcc:	f105 32ff 	add.w	r2, r5, #4294967295
  405dd0:	d0f8      	beq.n	405dc4 <_dtoa_r+0xb64>
  405dd2:	e5c5      	b.n	405960 <_dtoa_r+0x700>
  405dd4:	9904      	ldr	r1, [sp, #16]
  405dd6:	2230      	movs	r2, #48	; 0x30
  405dd8:	700a      	strb	r2, [r1, #0]
  405dda:	9a02      	ldr	r2, [sp, #8]
  405ddc:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405de0:	3201      	adds	r2, #1
  405de2:	9202      	str	r2, [sp, #8]
  405de4:	f7ff bbfc 	b.w	4055e0 <_dtoa_r+0x380>
  405de8:	f000 80bb 	beq.w	405f62 <_dtoa_r+0xd02>
  405dec:	9b02      	ldr	r3, [sp, #8]
  405dee:	425d      	negs	r5, r3
  405df0:	4b84      	ldr	r3, [pc, #528]	; (406004 <_dtoa_r+0xda4>)
  405df2:	f005 020f 	and.w	r2, r5, #15
  405df6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405dfa:	e9d3 2300 	ldrd	r2, r3, [r3]
  405dfe:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  405e02:	f002 f91b 	bl	40803c <__aeabi_dmul>
  405e06:	112d      	asrs	r5, r5, #4
  405e08:	4607      	mov	r7, r0
  405e0a:	4688      	mov	r8, r1
  405e0c:	f000 812c 	beq.w	406068 <_dtoa_r+0xe08>
  405e10:	4e7d      	ldr	r6, [pc, #500]	; (406008 <_dtoa_r+0xda8>)
  405e12:	f04f 0a02 	mov.w	sl, #2
  405e16:	07eb      	lsls	r3, r5, #31
  405e18:	d509      	bpl.n	405e2e <_dtoa_r+0xbce>
  405e1a:	4638      	mov	r0, r7
  405e1c:	4641      	mov	r1, r8
  405e1e:	e9d6 2300 	ldrd	r2, r3, [r6]
  405e22:	f002 f90b 	bl	40803c <__aeabi_dmul>
  405e26:	f10a 0a01 	add.w	sl, sl, #1
  405e2a:	4607      	mov	r7, r0
  405e2c:	4688      	mov	r8, r1
  405e2e:	106d      	asrs	r5, r5, #1
  405e30:	f106 0608 	add.w	r6, r6, #8
  405e34:	d1ef      	bne.n	405e16 <_dtoa_r+0xbb6>
  405e36:	e608      	b.n	405a4a <_dtoa_r+0x7ea>
  405e38:	6871      	ldr	r1, [r6, #4]
  405e3a:	4620      	mov	r0, r4
  405e3c:	f000 ffe6 	bl	406e0c <_Balloc>
  405e40:	6933      	ldr	r3, [r6, #16]
  405e42:	3302      	adds	r3, #2
  405e44:	009a      	lsls	r2, r3, #2
  405e46:	4605      	mov	r5, r0
  405e48:	f106 010c 	add.w	r1, r6, #12
  405e4c:	300c      	adds	r0, #12
  405e4e:	f000 fedf 	bl	406c10 <memcpy>
  405e52:	4629      	mov	r1, r5
  405e54:	2201      	movs	r2, #1
  405e56:	4620      	mov	r0, r4
  405e58:	f001 f984 	bl	407164 <__lshift>
  405e5c:	9006      	str	r0, [sp, #24]
  405e5e:	e4b5      	b.n	4057cc <_dtoa_r+0x56c>
  405e60:	2b39      	cmp	r3, #57	; 0x39
  405e62:	f8cd b018 	str.w	fp, [sp, #24]
  405e66:	46d0      	mov	r8, sl
  405e68:	f000 80a5 	beq.w	405fb6 <_dtoa_r+0xd56>
  405e6c:	f103 0a01 	add.w	sl, r3, #1
  405e70:	46b3      	mov	fp, r6
  405e72:	f887 a000 	strb.w	sl, [r7]
  405e76:	1c7d      	adds	r5, r7, #1
  405e78:	9e06      	ldr	r6, [sp, #24]
  405e7a:	e571      	b.n	405960 <_dtoa_r+0x700>
  405e7c:	465a      	mov	r2, fp
  405e7e:	46d0      	mov	r8, sl
  405e80:	46b3      	mov	fp, r6
  405e82:	469a      	mov	sl, r3
  405e84:	4616      	mov	r6, r2
  405e86:	e54f      	b.n	405928 <_dtoa_r+0x6c8>
  405e88:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405e8a:	495e      	ldr	r1, [pc, #376]	; (406004 <_dtoa_r+0xda4>)
  405e8c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  405e90:	462a      	mov	r2, r5
  405e92:	4633      	mov	r3, r6
  405e94:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  405e98:	f002 f8d0 	bl	40803c <__aeabi_dmul>
  405e9c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  405ea0:	4638      	mov	r0, r7
  405ea2:	4641      	mov	r1, r8
  405ea4:	f002 fb7a 	bl	40859c <__aeabi_d2iz>
  405ea8:	4605      	mov	r5, r0
  405eaa:	f002 f861 	bl	407f70 <__aeabi_i2d>
  405eae:	460b      	mov	r3, r1
  405eb0:	4602      	mov	r2, r0
  405eb2:	4641      	mov	r1, r8
  405eb4:	4638      	mov	r0, r7
  405eb6:	f001 ff0d 	bl	407cd4 <__aeabi_dsub>
  405eba:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405ebc:	460f      	mov	r7, r1
  405ebe:	9904      	ldr	r1, [sp, #16]
  405ec0:	3530      	adds	r5, #48	; 0x30
  405ec2:	2b01      	cmp	r3, #1
  405ec4:	700d      	strb	r5, [r1, #0]
  405ec6:	4606      	mov	r6, r0
  405ec8:	f101 0501 	add.w	r5, r1, #1
  405ecc:	d026      	beq.n	405f1c <_dtoa_r+0xcbc>
  405ece:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405ed0:	9a04      	ldr	r2, [sp, #16]
  405ed2:	f8df b13c 	ldr.w	fp, [pc, #316]	; 406010 <_dtoa_r+0xdb0>
  405ed6:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405eda:	4413      	add	r3, r2
  405edc:	f04f 0a00 	mov.w	sl, #0
  405ee0:	4699      	mov	r9, r3
  405ee2:	4652      	mov	r2, sl
  405ee4:	465b      	mov	r3, fp
  405ee6:	4630      	mov	r0, r6
  405ee8:	4639      	mov	r1, r7
  405eea:	f002 f8a7 	bl	40803c <__aeabi_dmul>
  405eee:	460f      	mov	r7, r1
  405ef0:	4606      	mov	r6, r0
  405ef2:	f002 fb53 	bl	40859c <__aeabi_d2iz>
  405ef6:	4680      	mov	r8, r0
  405ef8:	f002 f83a 	bl	407f70 <__aeabi_i2d>
  405efc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405f00:	4602      	mov	r2, r0
  405f02:	460b      	mov	r3, r1
  405f04:	4630      	mov	r0, r6
  405f06:	4639      	mov	r1, r7
  405f08:	f001 fee4 	bl	407cd4 <__aeabi_dsub>
  405f0c:	f805 8b01 	strb.w	r8, [r5], #1
  405f10:	454d      	cmp	r5, r9
  405f12:	4606      	mov	r6, r0
  405f14:	460f      	mov	r7, r1
  405f16:	d1e4      	bne.n	405ee2 <_dtoa_r+0xc82>
  405f18:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405f1c:	4b3b      	ldr	r3, [pc, #236]	; (40600c <_dtoa_r+0xdac>)
  405f1e:	2200      	movs	r2, #0
  405f20:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  405f24:	f001 fed8 	bl	407cd8 <__adddf3>
  405f28:	4632      	mov	r2, r6
  405f2a:	463b      	mov	r3, r7
  405f2c:	f002 faf8 	bl	408520 <__aeabi_dcmplt>
  405f30:	2800      	cmp	r0, #0
  405f32:	d046      	beq.n	405fc2 <_dtoa_r+0xd62>
  405f34:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405f36:	9302      	str	r3, [sp, #8]
  405f38:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405f3c:	f7ff bb43 	b.w	4055c6 <_dtoa_r+0x366>
  405f40:	f04f 0800 	mov.w	r8, #0
  405f44:	4646      	mov	r6, r8
  405f46:	e6a9      	b.n	405c9c <_dtoa_r+0xa3c>
  405f48:	9b08      	ldr	r3, [sp, #32]
  405f4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405f4c:	1a9d      	subs	r5, r3, r2
  405f4e:	2300      	movs	r3, #0
  405f50:	f7ff bb71 	b.w	405636 <_dtoa_r+0x3d6>
  405f54:	9b18      	ldr	r3, [sp, #96]	; 0x60
  405f56:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405f58:	9d08      	ldr	r5, [sp, #32]
  405f5a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  405f5e:	f7ff bb6a 	b.w	405636 <_dtoa_r+0x3d6>
  405f62:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  405f66:	f04f 0a02 	mov.w	sl, #2
  405f6a:	e56e      	b.n	405a4a <_dtoa_r+0x7ea>
  405f6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405f6e:	2b00      	cmp	r3, #0
  405f70:	f43f aeb8 	beq.w	405ce4 <_dtoa_r+0xa84>
  405f74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405f76:	2b00      	cmp	r3, #0
  405f78:	f77f aede 	ble.w	405d38 <_dtoa_r+0xad8>
  405f7c:	2200      	movs	r2, #0
  405f7e:	4b24      	ldr	r3, [pc, #144]	; (406010 <_dtoa_r+0xdb0>)
  405f80:	4638      	mov	r0, r7
  405f82:	4641      	mov	r1, r8
  405f84:	f002 f85a 	bl	40803c <__aeabi_dmul>
  405f88:	4607      	mov	r7, r0
  405f8a:	4688      	mov	r8, r1
  405f8c:	f10a 0001 	add.w	r0, sl, #1
  405f90:	f001 ffee 	bl	407f70 <__aeabi_i2d>
  405f94:	463a      	mov	r2, r7
  405f96:	4643      	mov	r3, r8
  405f98:	f002 f850 	bl	40803c <__aeabi_dmul>
  405f9c:	2200      	movs	r2, #0
  405f9e:	4b17      	ldr	r3, [pc, #92]	; (405ffc <_dtoa_r+0xd9c>)
  405fa0:	f001 fe9a 	bl	407cd8 <__adddf3>
  405fa4:	9a02      	ldr	r2, [sp, #8]
  405fa6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405fa8:	9312      	str	r3, [sp, #72]	; 0x48
  405faa:	3a01      	subs	r2, #1
  405fac:	4605      	mov	r5, r0
  405fae:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405fb2:	9215      	str	r2, [sp, #84]	; 0x54
  405fb4:	e56a      	b.n	405a8c <_dtoa_r+0x82c>
  405fb6:	2239      	movs	r2, #57	; 0x39
  405fb8:	46b3      	mov	fp, r6
  405fba:	703a      	strb	r2, [r7, #0]
  405fbc:	9e06      	ldr	r6, [sp, #24]
  405fbe:	1c7d      	adds	r5, r7, #1
  405fc0:	e4c0      	b.n	405944 <_dtoa_r+0x6e4>
  405fc2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  405fc6:	2000      	movs	r0, #0
  405fc8:	4910      	ldr	r1, [pc, #64]	; (40600c <_dtoa_r+0xdac>)
  405fca:	f001 fe83 	bl	407cd4 <__aeabi_dsub>
  405fce:	4632      	mov	r2, r6
  405fd0:	463b      	mov	r3, r7
  405fd2:	f002 fac3 	bl	40855c <__aeabi_dcmpgt>
  405fd6:	b908      	cbnz	r0, 405fdc <_dtoa_r+0xd7c>
  405fd8:	e6ae      	b.n	405d38 <_dtoa_r+0xad8>
  405fda:	4615      	mov	r5, r2
  405fdc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405fe0:	2b30      	cmp	r3, #48	; 0x30
  405fe2:	f105 32ff 	add.w	r2, r5, #4294967295
  405fe6:	d0f8      	beq.n	405fda <_dtoa_r+0xd7a>
  405fe8:	e5d7      	b.n	405b9a <_dtoa_r+0x93a>
  405fea:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405fee:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405ff0:	9302      	str	r3, [sp, #8]
  405ff2:	f7ff bae8 	b.w	4055c6 <_dtoa_r+0x366>
  405ff6:	970c      	str	r7, [sp, #48]	; 0x30
  405ff8:	f7ff bba5 	b.w	405746 <_dtoa_r+0x4e6>
  405ffc:	401c0000 	.word	0x401c0000
  406000:	40140000 	.word	0x40140000
  406004:	00408a88 	.word	0x00408a88
  406008:	00408a60 	.word	0x00408a60
  40600c:	3fe00000 	.word	0x3fe00000
  406010:	40240000 	.word	0x40240000
  406014:	2b39      	cmp	r3, #57	; 0x39
  406016:	f8cd b018 	str.w	fp, [sp, #24]
  40601a:	46d0      	mov	r8, sl
  40601c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  406020:	469a      	mov	sl, r3
  406022:	d0c8      	beq.n	405fb6 <_dtoa_r+0xd56>
  406024:	f1bb 0f00 	cmp.w	fp, #0
  406028:	f73f aebf 	bgt.w	405daa <_dtoa_r+0xb4a>
  40602c:	e6bf      	b.n	405dae <_dtoa_r+0xb4e>
  40602e:	f47f aebe 	bne.w	405dae <_dtoa_r+0xb4e>
  406032:	f01a 0f01 	tst.w	sl, #1
  406036:	f43f aeba 	beq.w	405dae <_dtoa_r+0xb4e>
  40603a:	e6b2      	b.n	405da2 <_dtoa_r+0xb42>
  40603c:	f04f 0800 	mov.w	r8, #0
  406040:	4646      	mov	r6, r8
  406042:	e5e9      	b.n	405c18 <_dtoa_r+0x9b8>
  406044:	4631      	mov	r1, r6
  406046:	2300      	movs	r3, #0
  406048:	220a      	movs	r2, #10
  40604a:	4620      	mov	r0, r4
  40604c:	f000 ff0e 	bl	406e6c <__multadd>
  406050:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406052:	2b00      	cmp	r3, #0
  406054:	4606      	mov	r6, r0
  406056:	dd0a      	ble.n	40606e <_dtoa_r+0xe0e>
  406058:	930a      	str	r3, [sp, #40]	; 0x28
  40605a:	f7ff bbaa 	b.w	4057b2 <_dtoa_r+0x552>
  40605e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406060:	2b02      	cmp	r3, #2
  406062:	dc23      	bgt.n	4060ac <_dtoa_r+0xe4c>
  406064:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406066:	e43b      	b.n	4058e0 <_dtoa_r+0x680>
  406068:	f04f 0a02 	mov.w	sl, #2
  40606c:	e4ed      	b.n	405a4a <_dtoa_r+0x7ea>
  40606e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406070:	2b02      	cmp	r3, #2
  406072:	dc1b      	bgt.n	4060ac <_dtoa_r+0xe4c>
  406074:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406076:	e7ef      	b.n	406058 <_dtoa_r+0xdf8>
  406078:	2500      	movs	r5, #0
  40607a:	6465      	str	r5, [r4, #68]	; 0x44
  40607c:	4629      	mov	r1, r5
  40607e:	4620      	mov	r0, r4
  406080:	f000 fec4 	bl	406e0c <_Balloc>
  406084:	f04f 33ff 	mov.w	r3, #4294967295
  406088:	930a      	str	r3, [sp, #40]	; 0x28
  40608a:	930f      	str	r3, [sp, #60]	; 0x3c
  40608c:	2301      	movs	r3, #1
  40608e:	9004      	str	r0, [sp, #16]
  406090:	9525      	str	r5, [sp, #148]	; 0x94
  406092:	6420      	str	r0, [r4, #64]	; 0x40
  406094:	930b      	str	r3, [sp, #44]	; 0x2c
  406096:	f7ff b9dd 	b.w	405454 <_dtoa_r+0x1f4>
  40609a:	2501      	movs	r5, #1
  40609c:	f7ff b9a5 	b.w	4053ea <_dtoa_r+0x18a>
  4060a0:	f43f ab69 	beq.w	405776 <_dtoa_r+0x516>
  4060a4:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4060a8:	f7ff bbf9 	b.w	40589e <_dtoa_r+0x63e>
  4060ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4060ae:	930a      	str	r3, [sp, #40]	; 0x28
  4060b0:	e5e5      	b.n	405c7e <_dtoa_r+0xa1e>
  4060b2:	bf00      	nop

004060b4 <__sflush_r>:
  4060b4:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  4060b8:	b29a      	uxth	r2, r3
  4060ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4060be:	460d      	mov	r5, r1
  4060c0:	0711      	lsls	r1, r2, #28
  4060c2:	4680      	mov	r8, r0
  4060c4:	d43a      	bmi.n	40613c <__sflush_r+0x88>
  4060c6:	686a      	ldr	r2, [r5, #4]
  4060c8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4060cc:	2a00      	cmp	r2, #0
  4060ce:	81ab      	strh	r3, [r5, #12]
  4060d0:	dd6f      	ble.n	4061b2 <__sflush_r+0xfe>
  4060d2:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4060d4:	2c00      	cmp	r4, #0
  4060d6:	d049      	beq.n	40616c <__sflush_r+0xb8>
  4060d8:	2200      	movs	r2, #0
  4060da:	b29b      	uxth	r3, r3
  4060dc:	f8d8 6000 	ldr.w	r6, [r8]
  4060e0:	f8c8 2000 	str.w	r2, [r8]
  4060e4:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  4060e8:	d067      	beq.n	4061ba <__sflush_r+0x106>
  4060ea:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  4060ec:	075f      	lsls	r7, r3, #29
  4060ee:	d505      	bpl.n	4060fc <__sflush_r+0x48>
  4060f0:	6869      	ldr	r1, [r5, #4]
  4060f2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4060f4:	1a52      	subs	r2, r2, r1
  4060f6:	b10b      	cbz	r3, 4060fc <__sflush_r+0x48>
  4060f8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4060fa:	1ad2      	subs	r2, r2, r3
  4060fc:	2300      	movs	r3, #0
  4060fe:	69e9      	ldr	r1, [r5, #28]
  406100:	4640      	mov	r0, r8
  406102:	47a0      	blx	r4
  406104:	1c44      	adds	r4, r0, #1
  406106:	d03c      	beq.n	406182 <__sflush_r+0xce>
  406108:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  40610c:	692a      	ldr	r2, [r5, #16]
  40610e:	602a      	str	r2, [r5, #0]
  406110:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  406114:	2200      	movs	r2, #0
  406116:	81ab      	strh	r3, [r5, #12]
  406118:	04db      	lsls	r3, r3, #19
  40611a:	606a      	str	r2, [r5, #4]
  40611c:	d447      	bmi.n	4061ae <__sflush_r+0xfa>
  40611e:	6b29      	ldr	r1, [r5, #48]	; 0x30
  406120:	f8c8 6000 	str.w	r6, [r8]
  406124:	b311      	cbz	r1, 40616c <__sflush_r+0xb8>
  406126:	f105 0340 	add.w	r3, r5, #64	; 0x40
  40612a:	4299      	cmp	r1, r3
  40612c:	d002      	beq.n	406134 <__sflush_r+0x80>
  40612e:	4640      	mov	r0, r8
  406130:	f000 f9de 	bl	4064f0 <_free_r>
  406134:	2000      	movs	r0, #0
  406136:	6328      	str	r0, [r5, #48]	; 0x30
  406138:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40613c:	692e      	ldr	r6, [r5, #16]
  40613e:	b1ae      	cbz	r6, 40616c <__sflush_r+0xb8>
  406140:	682c      	ldr	r4, [r5, #0]
  406142:	602e      	str	r6, [r5, #0]
  406144:	0791      	lsls	r1, r2, #30
  406146:	bf0c      	ite	eq
  406148:	696b      	ldreq	r3, [r5, #20]
  40614a:	2300      	movne	r3, #0
  40614c:	1ba4      	subs	r4, r4, r6
  40614e:	60ab      	str	r3, [r5, #8]
  406150:	e00a      	b.n	406168 <__sflush_r+0xb4>
  406152:	4623      	mov	r3, r4
  406154:	4632      	mov	r2, r6
  406156:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  406158:	69e9      	ldr	r1, [r5, #28]
  40615a:	4640      	mov	r0, r8
  40615c:	47b8      	blx	r7
  40615e:	2800      	cmp	r0, #0
  406160:	eba4 0400 	sub.w	r4, r4, r0
  406164:	4406      	add	r6, r0
  406166:	dd04      	ble.n	406172 <__sflush_r+0xbe>
  406168:	2c00      	cmp	r4, #0
  40616a:	dcf2      	bgt.n	406152 <__sflush_r+0x9e>
  40616c:	2000      	movs	r0, #0
  40616e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406172:	89ab      	ldrh	r3, [r5, #12]
  406174:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  406178:	81ab      	strh	r3, [r5, #12]
  40617a:	f04f 30ff 	mov.w	r0, #4294967295
  40617e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406182:	f8d8 4000 	ldr.w	r4, [r8]
  406186:	2c1d      	cmp	r4, #29
  406188:	d8f3      	bhi.n	406172 <__sflush_r+0xbe>
  40618a:	4b19      	ldr	r3, [pc, #100]	; (4061f0 <__sflush_r+0x13c>)
  40618c:	40e3      	lsrs	r3, r4
  40618e:	43db      	mvns	r3, r3
  406190:	f013 0301 	ands.w	r3, r3, #1
  406194:	d1ed      	bne.n	406172 <__sflush_r+0xbe>
  406196:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40619a:	606b      	str	r3, [r5, #4]
  40619c:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  4061a0:	6929      	ldr	r1, [r5, #16]
  4061a2:	81ab      	strh	r3, [r5, #12]
  4061a4:	04da      	lsls	r2, r3, #19
  4061a6:	6029      	str	r1, [r5, #0]
  4061a8:	d5b9      	bpl.n	40611e <__sflush_r+0x6a>
  4061aa:	2c00      	cmp	r4, #0
  4061ac:	d1b7      	bne.n	40611e <__sflush_r+0x6a>
  4061ae:	6528      	str	r0, [r5, #80]	; 0x50
  4061b0:	e7b5      	b.n	40611e <__sflush_r+0x6a>
  4061b2:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  4061b4:	2a00      	cmp	r2, #0
  4061b6:	dc8c      	bgt.n	4060d2 <__sflush_r+0x1e>
  4061b8:	e7d8      	b.n	40616c <__sflush_r+0xb8>
  4061ba:	2301      	movs	r3, #1
  4061bc:	69e9      	ldr	r1, [r5, #28]
  4061be:	4640      	mov	r0, r8
  4061c0:	47a0      	blx	r4
  4061c2:	1c43      	adds	r3, r0, #1
  4061c4:	4602      	mov	r2, r0
  4061c6:	d002      	beq.n	4061ce <__sflush_r+0x11a>
  4061c8:	89ab      	ldrh	r3, [r5, #12]
  4061ca:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4061cc:	e78e      	b.n	4060ec <__sflush_r+0x38>
  4061ce:	f8d8 3000 	ldr.w	r3, [r8]
  4061d2:	2b00      	cmp	r3, #0
  4061d4:	d0f8      	beq.n	4061c8 <__sflush_r+0x114>
  4061d6:	2b1d      	cmp	r3, #29
  4061d8:	d001      	beq.n	4061de <__sflush_r+0x12a>
  4061da:	2b16      	cmp	r3, #22
  4061dc:	d102      	bne.n	4061e4 <__sflush_r+0x130>
  4061de:	f8c8 6000 	str.w	r6, [r8]
  4061e2:	e7c3      	b.n	40616c <__sflush_r+0xb8>
  4061e4:	89ab      	ldrh	r3, [r5, #12]
  4061e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4061ea:	81ab      	strh	r3, [r5, #12]
  4061ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4061f0:	20400001 	.word	0x20400001

004061f4 <_fflush_r>:
  4061f4:	b538      	push	{r3, r4, r5, lr}
  4061f6:	460d      	mov	r5, r1
  4061f8:	4604      	mov	r4, r0
  4061fa:	b108      	cbz	r0, 406200 <_fflush_r+0xc>
  4061fc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4061fe:	b1bb      	cbz	r3, 406230 <_fflush_r+0x3c>
  406200:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  406204:	b188      	cbz	r0, 40622a <_fflush_r+0x36>
  406206:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  406208:	07db      	lsls	r3, r3, #31
  40620a:	d401      	bmi.n	406210 <_fflush_r+0x1c>
  40620c:	0581      	lsls	r1, r0, #22
  40620e:	d517      	bpl.n	406240 <_fflush_r+0x4c>
  406210:	4620      	mov	r0, r4
  406212:	4629      	mov	r1, r5
  406214:	f7ff ff4e 	bl	4060b4 <__sflush_r>
  406218:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40621a:	07da      	lsls	r2, r3, #31
  40621c:	4604      	mov	r4, r0
  40621e:	d402      	bmi.n	406226 <_fflush_r+0x32>
  406220:	89ab      	ldrh	r3, [r5, #12]
  406222:	059b      	lsls	r3, r3, #22
  406224:	d507      	bpl.n	406236 <_fflush_r+0x42>
  406226:	4620      	mov	r0, r4
  406228:	bd38      	pop	{r3, r4, r5, pc}
  40622a:	4604      	mov	r4, r0
  40622c:	4620      	mov	r0, r4
  40622e:	bd38      	pop	{r3, r4, r5, pc}
  406230:	f000 f838 	bl	4062a4 <__sinit>
  406234:	e7e4      	b.n	406200 <_fflush_r+0xc>
  406236:	6da8      	ldr	r0, [r5, #88]	; 0x58
  406238:	f000 fc04 	bl	406a44 <__retarget_lock_release_recursive>
  40623c:	4620      	mov	r0, r4
  40623e:	bd38      	pop	{r3, r4, r5, pc}
  406240:	6da8      	ldr	r0, [r5, #88]	; 0x58
  406242:	f000 fbfd 	bl	406a40 <__retarget_lock_acquire_recursive>
  406246:	e7e3      	b.n	406210 <_fflush_r+0x1c>

00406248 <_cleanup_r>:
  406248:	4901      	ldr	r1, [pc, #4]	; (406250 <_cleanup_r+0x8>)
  40624a:	f000 bbaf 	b.w	4069ac <_fwalk_reent>
  40624e:	bf00      	nop
  406250:	00407b65 	.word	0x00407b65

00406254 <std.isra.0>:
  406254:	b510      	push	{r4, lr}
  406256:	2300      	movs	r3, #0
  406258:	4604      	mov	r4, r0
  40625a:	8181      	strh	r1, [r0, #12]
  40625c:	81c2      	strh	r2, [r0, #14]
  40625e:	6003      	str	r3, [r0, #0]
  406260:	6043      	str	r3, [r0, #4]
  406262:	6083      	str	r3, [r0, #8]
  406264:	6643      	str	r3, [r0, #100]	; 0x64
  406266:	6103      	str	r3, [r0, #16]
  406268:	6143      	str	r3, [r0, #20]
  40626a:	6183      	str	r3, [r0, #24]
  40626c:	4619      	mov	r1, r3
  40626e:	2208      	movs	r2, #8
  406270:	305c      	adds	r0, #92	; 0x5c
  406272:	f7fc fb9d 	bl	4029b0 <memset>
  406276:	4807      	ldr	r0, [pc, #28]	; (406294 <std.isra.0+0x40>)
  406278:	4907      	ldr	r1, [pc, #28]	; (406298 <std.isra.0+0x44>)
  40627a:	4a08      	ldr	r2, [pc, #32]	; (40629c <std.isra.0+0x48>)
  40627c:	4b08      	ldr	r3, [pc, #32]	; (4062a0 <std.isra.0+0x4c>)
  40627e:	6220      	str	r0, [r4, #32]
  406280:	61e4      	str	r4, [r4, #28]
  406282:	6261      	str	r1, [r4, #36]	; 0x24
  406284:	62a2      	str	r2, [r4, #40]	; 0x28
  406286:	62e3      	str	r3, [r4, #44]	; 0x2c
  406288:	f104 0058 	add.w	r0, r4, #88	; 0x58
  40628c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  406290:	f000 bbd2 	b.w	406a38 <__retarget_lock_init_recursive>
  406294:	0040774d 	.word	0x0040774d
  406298:	00407771 	.word	0x00407771
  40629c:	004077ad 	.word	0x004077ad
  4062a0:	004077cd 	.word	0x004077cd

004062a4 <__sinit>:
  4062a4:	b510      	push	{r4, lr}
  4062a6:	4604      	mov	r4, r0
  4062a8:	4812      	ldr	r0, [pc, #72]	; (4062f4 <__sinit+0x50>)
  4062aa:	f000 fbc9 	bl	406a40 <__retarget_lock_acquire_recursive>
  4062ae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  4062b0:	b9d2      	cbnz	r2, 4062e8 <__sinit+0x44>
  4062b2:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  4062b6:	4810      	ldr	r0, [pc, #64]	; (4062f8 <__sinit+0x54>)
  4062b8:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  4062bc:	2103      	movs	r1, #3
  4062be:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  4062c2:	63e0      	str	r0, [r4, #60]	; 0x3c
  4062c4:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  4062c8:	6860      	ldr	r0, [r4, #4]
  4062ca:	2104      	movs	r1, #4
  4062cc:	f7ff ffc2 	bl	406254 <std.isra.0>
  4062d0:	2201      	movs	r2, #1
  4062d2:	2109      	movs	r1, #9
  4062d4:	68a0      	ldr	r0, [r4, #8]
  4062d6:	f7ff ffbd 	bl	406254 <std.isra.0>
  4062da:	2202      	movs	r2, #2
  4062dc:	2112      	movs	r1, #18
  4062de:	68e0      	ldr	r0, [r4, #12]
  4062e0:	f7ff ffb8 	bl	406254 <std.isra.0>
  4062e4:	2301      	movs	r3, #1
  4062e6:	63a3      	str	r3, [r4, #56]	; 0x38
  4062e8:	4802      	ldr	r0, [pc, #8]	; (4062f4 <__sinit+0x50>)
  4062ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4062ee:	f000 bba9 	b.w	406a44 <__retarget_lock_release_recursive>
  4062f2:	bf00      	nop
  4062f4:	20400e70 	.word	0x20400e70
  4062f8:	00406249 	.word	0x00406249

004062fc <__sfp_lock_acquire>:
  4062fc:	4801      	ldr	r0, [pc, #4]	; (406304 <__sfp_lock_acquire+0x8>)
  4062fe:	f000 bb9f 	b.w	406a40 <__retarget_lock_acquire_recursive>
  406302:	bf00      	nop
  406304:	20400e84 	.word	0x20400e84

00406308 <__sfp_lock_release>:
  406308:	4801      	ldr	r0, [pc, #4]	; (406310 <__sfp_lock_release+0x8>)
  40630a:	f000 bb9b 	b.w	406a44 <__retarget_lock_release_recursive>
  40630e:	bf00      	nop
  406310:	20400e84 	.word	0x20400e84

00406314 <__libc_fini_array>:
  406314:	b538      	push	{r3, r4, r5, lr}
  406316:	4c0a      	ldr	r4, [pc, #40]	; (406340 <__libc_fini_array+0x2c>)
  406318:	4d0a      	ldr	r5, [pc, #40]	; (406344 <__libc_fini_array+0x30>)
  40631a:	1b64      	subs	r4, r4, r5
  40631c:	10a4      	asrs	r4, r4, #2
  40631e:	d00a      	beq.n	406336 <__libc_fini_array+0x22>
  406320:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  406324:	3b01      	subs	r3, #1
  406326:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40632a:	3c01      	subs	r4, #1
  40632c:	f855 3904 	ldr.w	r3, [r5], #-4
  406330:	4798      	blx	r3
  406332:	2c00      	cmp	r4, #0
  406334:	d1f9      	bne.n	40632a <__libc_fini_array+0x16>
  406336:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40633a:	f002 bc9b 	b.w	408c74 <_fini>
  40633e:	bf00      	nop
  406340:	00408c84 	.word	0x00408c84
  406344:	00408c80 	.word	0x00408c80

00406348 <__fputwc>:
  406348:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40634c:	b082      	sub	sp, #8
  40634e:	4680      	mov	r8, r0
  406350:	4689      	mov	r9, r1
  406352:	4614      	mov	r4, r2
  406354:	f000 fb54 	bl	406a00 <__locale_mb_cur_max>
  406358:	2801      	cmp	r0, #1
  40635a:	d036      	beq.n	4063ca <__fputwc+0x82>
  40635c:	464a      	mov	r2, r9
  40635e:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  406362:	a901      	add	r1, sp, #4
  406364:	4640      	mov	r0, r8
  406366:	f001 fb0b 	bl	407980 <_wcrtomb_r>
  40636a:	1c42      	adds	r2, r0, #1
  40636c:	4606      	mov	r6, r0
  40636e:	d025      	beq.n	4063bc <__fputwc+0x74>
  406370:	b3a8      	cbz	r0, 4063de <__fputwc+0x96>
  406372:	f89d e004 	ldrb.w	lr, [sp, #4]
  406376:	2500      	movs	r5, #0
  406378:	f10d 0a04 	add.w	sl, sp, #4
  40637c:	e009      	b.n	406392 <__fputwc+0x4a>
  40637e:	6823      	ldr	r3, [r4, #0]
  406380:	1c5a      	adds	r2, r3, #1
  406382:	6022      	str	r2, [r4, #0]
  406384:	f883 e000 	strb.w	lr, [r3]
  406388:	3501      	adds	r5, #1
  40638a:	42b5      	cmp	r5, r6
  40638c:	d227      	bcs.n	4063de <__fputwc+0x96>
  40638e:	f815 e00a 	ldrb.w	lr, [r5, sl]
  406392:	68a3      	ldr	r3, [r4, #8]
  406394:	3b01      	subs	r3, #1
  406396:	2b00      	cmp	r3, #0
  406398:	60a3      	str	r3, [r4, #8]
  40639a:	daf0      	bge.n	40637e <__fputwc+0x36>
  40639c:	69a7      	ldr	r7, [r4, #24]
  40639e:	42bb      	cmp	r3, r7
  4063a0:	4671      	mov	r1, lr
  4063a2:	4622      	mov	r2, r4
  4063a4:	4640      	mov	r0, r8
  4063a6:	db02      	blt.n	4063ae <__fputwc+0x66>
  4063a8:	f1be 0f0a 	cmp.w	lr, #10
  4063ac:	d1e7      	bne.n	40637e <__fputwc+0x36>
  4063ae:	f001 fa8f 	bl	4078d0 <__swbuf_r>
  4063b2:	1c43      	adds	r3, r0, #1
  4063b4:	d1e8      	bne.n	406388 <__fputwc+0x40>
  4063b6:	b002      	add	sp, #8
  4063b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063bc:	89a3      	ldrh	r3, [r4, #12]
  4063be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4063c2:	81a3      	strh	r3, [r4, #12]
  4063c4:	b002      	add	sp, #8
  4063c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063ca:	f109 33ff 	add.w	r3, r9, #4294967295
  4063ce:	2bfe      	cmp	r3, #254	; 0xfe
  4063d0:	d8c4      	bhi.n	40635c <__fputwc+0x14>
  4063d2:	fa5f fe89 	uxtb.w	lr, r9
  4063d6:	4606      	mov	r6, r0
  4063d8:	f88d e004 	strb.w	lr, [sp, #4]
  4063dc:	e7cb      	b.n	406376 <__fputwc+0x2e>
  4063de:	4648      	mov	r0, r9
  4063e0:	b002      	add	sp, #8
  4063e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063e6:	bf00      	nop

004063e8 <_fputwc_r>:
  4063e8:	b530      	push	{r4, r5, lr}
  4063ea:	6e53      	ldr	r3, [r2, #100]	; 0x64
  4063ec:	f013 0f01 	tst.w	r3, #1
  4063f0:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4063f4:	4614      	mov	r4, r2
  4063f6:	b083      	sub	sp, #12
  4063f8:	4605      	mov	r5, r0
  4063fa:	b29a      	uxth	r2, r3
  4063fc:	d101      	bne.n	406402 <_fputwc_r+0x1a>
  4063fe:	0590      	lsls	r0, r2, #22
  406400:	d51c      	bpl.n	40643c <_fputwc_r+0x54>
  406402:	0490      	lsls	r0, r2, #18
  406404:	d406      	bmi.n	406414 <_fputwc_r+0x2c>
  406406:	6e62      	ldr	r2, [r4, #100]	; 0x64
  406408:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40640c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  406410:	81a3      	strh	r3, [r4, #12]
  406412:	6662      	str	r2, [r4, #100]	; 0x64
  406414:	4628      	mov	r0, r5
  406416:	4622      	mov	r2, r4
  406418:	f7ff ff96 	bl	406348 <__fputwc>
  40641c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40641e:	07da      	lsls	r2, r3, #31
  406420:	4605      	mov	r5, r0
  406422:	d402      	bmi.n	40642a <_fputwc_r+0x42>
  406424:	89a3      	ldrh	r3, [r4, #12]
  406426:	059b      	lsls	r3, r3, #22
  406428:	d502      	bpl.n	406430 <_fputwc_r+0x48>
  40642a:	4628      	mov	r0, r5
  40642c:	b003      	add	sp, #12
  40642e:	bd30      	pop	{r4, r5, pc}
  406430:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406432:	f000 fb07 	bl	406a44 <__retarget_lock_release_recursive>
  406436:	4628      	mov	r0, r5
  406438:	b003      	add	sp, #12
  40643a:	bd30      	pop	{r4, r5, pc}
  40643c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40643e:	9101      	str	r1, [sp, #4]
  406440:	f000 fafe 	bl	406a40 <__retarget_lock_acquire_recursive>
  406444:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406448:	9901      	ldr	r1, [sp, #4]
  40644a:	b29a      	uxth	r2, r3
  40644c:	e7d9      	b.n	406402 <_fputwc_r+0x1a>
  40644e:	bf00      	nop

00406450 <_malloc_trim_r>:
  406450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406452:	4f24      	ldr	r7, [pc, #144]	; (4064e4 <_malloc_trim_r+0x94>)
  406454:	460c      	mov	r4, r1
  406456:	4606      	mov	r6, r0
  406458:	f7fc faf8 	bl	402a4c <__malloc_lock>
  40645c:	68bb      	ldr	r3, [r7, #8]
  40645e:	685d      	ldr	r5, [r3, #4]
  406460:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  406464:	310f      	adds	r1, #15
  406466:	f025 0503 	bic.w	r5, r5, #3
  40646a:	4429      	add	r1, r5
  40646c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  406470:	f021 010f 	bic.w	r1, r1, #15
  406474:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  406478:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  40647c:	db07      	blt.n	40648e <_malloc_trim_r+0x3e>
  40647e:	2100      	movs	r1, #0
  406480:	4630      	mov	r0, r6
  406482:	f7fc faef 	bl	402a64 <_sbrk_r>
  406486:	68bb      	ldr	r3, [r7, #8]
  406488:	442b      	add	r3, r5
  40648a:	4298      	cmp	r0, r3
  40648c:	d004      	beq.n	406498 <_malloc_trim_r+0x48>
  40648e:	4630      	mov	r0, r6
  406490:	f7fc fae2 	bl	402a58 <__malloc_unlock>
  406494:	2000      	movs	r0, #0
  406496:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406498:	4261      	negs	r1, r4
  40649a:	4630      	mov	r0, r6
  40649c:	f7fc fae2 	bl	402a64 <_sbrk_r>
  4064a0:	3001      	adds	r0, #1
  4064a2:	d00d      	beq.n	4064c0 <_malloc_trim_r+0x70>
  4064a4:	4b10      	ldr	r3, [pc, #64]	; (4064e8 <_malloc_trim_r+0x98>)
  4064a6:	68ba      	ldr	r2, [r7, #8]
  4064a8:	6819      	ldr	r1, [r3, #0]
  4064aa:	1b2d      	subs	r5, r5, r4
  4064ac:	f045 0501 	orr.w	r5, r5, #1
  4064b0:	4630      	mov	r0, r6
  4064b2:	1b09      	subs	r1, r1, r4
  4064b4:	6055      	str	r5, [r2, #4]
  4064b6:	6019      	str	r1, [r3, #0]
  4064b8:	f7fc face 	bl	402a58 <__malloc_unlock>
  4064bc:	2001      	movs	r0, #1
  4064be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4064c0:	2100      	movs	r1, #0
  4064c2:	4630      	mov	r0, r6
  4064c4:	f7fc face 	bl	402a64 <_sbrk_r>
  4064c8:	68ba      	ldr	r2, [r7, #8]
  4064ca:	1a83      	subs	r3, r0, r2
  4064cc:	2b0f      	cmp	r3, #15
  4064ce:	ddde      	ble.n	40648e <_malloc_trim_r+0x3e>
  4064d0:	4c06      	ldr	r4, [pc, #24]	; (4064ec <_malloc_trim_r+0x9c>)
  4064d2:	4905      	ldr	r1, [pc, #20]	; (4064e8 <_malloc_trim_r+0x98>)
  4064d4:	6824      	ldr	r4, [r4, #0]
  4064d6:	f043 0301 	orr.w	r3, r3, #1
  4064da:	1b00      	subs	r0, r0, r4
  4064dc:	6053      	str	r3, [r2, #4]
  4064de:	6008      	str	r0, [r1, #0]
  4064e0:	e7d5      	b.n	40648e <_malloc_trim_r+0x3e>
  4064e2:	bf00      	nop
  4064e4:	20400440 	.word	0x20400440
  4064e8:	20400e14 	.word	0x20400e14
  4064ec:	20400848 	.word	0x20400848

004064f0 <_free_r>:
  4064f0:	2900      	cmp	r1, #0
  4064f2:	d044      	beq.n	40657e <_free_r+0x8e>
  4064f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4064f8:	460d      	mov	r5, r1
  4064fa:	4680      	mov	r8, r0
  4064fc:	f7fc faa6 	bl	402a4c <__malloc_lock>
  406500:	f855 7c04 	ldr.w	r7, [r5, #-4]
  406504:	4969      	ldr	r1, [pc, #420]	; (4066ac <_free_r+0x1bc>)
  406506:	f027 0301 	bic.w	r3, r7, #1
  40650a:	f1a5 0408 	sub.w	r4, r5, #8
  40650e:	18e2      	adds	r2, r4, r3
  406510:	688e      	ldr	r6, [r1, #8]
  406512:	6850      	ldr	r0, [r2, #4]
  406514:	42b2      	cmp	r2, r6
  406516:	f020 0003 	bic.w	r0, r0, #3
  40651a:	d05e      	beq.n	4065da <_free_r+0xea>
  40651c:	07fe      	lsls	r6, r7, #31
  40651e:	6050      	str	r0, [r2, #4]
  406520:	d40b      	bmi.n	40653a <_free_r+0x4a>
  406522:	f855 7c08 	ldr.w	r7, [r5, #-8]
  406526:	1be4      	subs	r4, r4, r7
  406528:	f101 0e08 	add.w	lr, r1, #8
  40652c:	68a5      	ldr	r5, [r4, #8]
  40652e:	4575      	cmp	r5, lr
  406530:	443b      	add	r3, r7
  406532:	d06d      	beq.n	406610 <_free_r+0x120>
  406534:	68e7      	ldr	r7, [r4, #12]
  406536:	60ef      	str	r7, [r5, #12]
  406538:	60bd      	str	r5, [r7, #8]
  40653a:	1815      	adds	r5, r2, r0
  40653c:	686d      	ldr	r5, [r5, #4]
  40653e:	07ed      	lsls	r5, r5, #31
  406540:	d53e      	bpl.n	4065c0 <_free_r+0xd0>
  406542:	f043 0201 	orr.w	r2, r3, #1
  406546:	6062      	str	r2, [r4, #4]
  406548:	50e3      	str	r3, [r4, r3]
  40654a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40654e:	d217      	bcs.n	406580 <_free_r+0x90>
  406550:	08db      	lsrs	r3, r3, #3
  406552:	1c58      	adds	r0, r3, #1
  406554:	109a      	asrs	r2, r3, #2
  406556:	684d      	ldr	r5, [r1, #4]
  406558:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  40655c:	60a7      	str	r7, [r4, #8]
  40655e:	2301      	movs	r3, #1
  406560:	4093      	lsls	r3, r2
  406562:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  406566:	432b      	orrs	r3, r5
  406568:	3a08      	subs	r2, #8
  40656a:	60e2      	str	r2, [r4, #12]
  40656c:	604b      	str	r3, [r1, #4]
  40656e:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  406572:	60fc      	str	r4, [r7, #12]
  406574:	4640      	mov	r0, r8
  406576:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40657a:	f7fc ba6d 	b.w	402a58 <__malloc_unlock>
  40657e:	4770      	bx	lr
  406580:	0a5a      	lsrs	r2, r3, #9
  406582:	2a04      	cmp	r2, #4
  406584:	d852      	bhi.n	40662c <_free_r+0x13c>
  406586:	099a      	lsrs	r2, r3, #6
  406588:	f102 0739 	add.w	r7, r2, #57	; 0x39
  40658c:	00ff      	lsls	r7, r7, #3
  40658e:	f102 0538 	add.w	r5, r2, #56	; 0x38
  406592:	19c8      	adds	r0, r1, r7
  406594:	59ca      	ldr	r2, [r1, r7]
  406596:	3808      	subs	r0, #8
  406598:	4290      	cmp	r0, r2
  40659a:	d04f      	beq.n	40663c <_free_r+0x14c>
  40659c:	6851      	ldr	r1, [r2, #4]
  40659e:	f021 0103 	bic.w	r1, r1, #3
  4065a2:	428b      	cmp	r3, r1
  4065a4:	d232      	bcs.n	40660c <_free_r+0x11c>
  4065a6:	6892      	ldr	r2, [r2, #8]
  4065a8:	4290      	cmp	r0, r2
  4065aa:	d1f7      	bne.n	40659c <_free_r+0xac>
  4065ac:	68c3      	ldr	r3, [r0, #12]
  4065ae:	60a0      	str	r0, [r4, #8]
  4065b0:	60e3      	str	r3, [r4, #12]
  4065b2:	609c      	str	r4, [r3, #8]
  4065b4:	60c4      	str	r4, [r0, #12]
  4065b6:	4640      	mov	r0, r8
  4065b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4065bc:	f7fc ba4c 	b.w	402a58 <__malloc_unlock>
  4065c0:	6895      	ldr	r5, [r2, #8]
  4065c2:	4f3b      	ldr	r7, [pc, #236]	; (4066b0 <_free_r+0x1c0>)
  4065c4:	42bd      	cmp	r5, r7
  4065c6:	4403      	add	r3, r0
  4065c8:	d040      	beq.n	40664c <_free_r+0x15c>
  4065ca:	68d0      	ldr	r0, [r2, #12]
  4065cc:	60e8      	str	r0, [r5, #12]
  4065ce:	f043 0201 	orr.w	r2, r3, #1
  4065d2:	6085      	str	r5, [r0, #8]
  4065d4:	6062      	str	r2, [r4, #4]
  4065d6:	50e3      	str	r3, [r4, r3]
  4065d8:	e7b7      	b.n	40654a <_free_r+0x5a>
  4065da:	07ff      	lsls	r7, r7, #31
  4065dc:	4403      	add	r3, r0
  4065de:	d407      	bmi.n	4065f0 <_free_r+0x100>
  4065e0:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4065e4:	1aa4      	subs	r4, r4, r2
  4065e6:	4413      	add	r3, r2
  4065e8:	68a0      	ldr	r0, [r4, #8]
  4065ea:	68e2      	ldr	r2, [r4, #12]
  4065ec:	60c2      	str	r2, [r0, #12]
  4065ee:	6090      	str	r0, [r2, #8]
  4065f0:	4a30      	ldr	r2, [pc, #192]	; (4066b4 <_free_r+0x1c4>)
  4065f2:	6812      	ldr	r2, [r2, #0]
  4065f4:	f043 0001 	orr.w	r0, r3, #1
  4065f8:	4293      	cmp	r3, r2
  4065fa:	6060      	str	r0, [r4, #4]
  4065fc:	608c      	str	r4, [r1, #8]
  4065fe:	d3b9      	bcc.n	406574 <_free_r+0x84>
  406600:	4b2d      	ldr	r3, [pc, #180]	; (4066b8 <_free_r+0x1c8>)
  406602:	4640      	mov	r0, r8
  406604:	6819      	ldr	r1, [r3, #0]
  406606:	f7ff ff23 	bl	406450 <_malloc_trim_r>
  40660a:	e7b3      	b.n	406574 <_free_r+0x84>
  40660c:	4610      	mov	r0, r2
  40660e:	e7cd      	b.n	4065ac <_free_r+0xbc>
  406610:	1811      	adds	r1, r2, r0
  406612:	6849      	ldr	r1, [r1, #4]
  406614:	07c9      	lsls	r1, r1, #31
  406616:	d444      	bmi.n	4066a2 <_free_r+0x1b2>
  406618:	6891      	ldr	r1, [r2, #8]
  40661a:	68d2      	ldr	r2, [r2, #12]
  40661c:	60ca      	str	r2, [r1, #12]
  40661e:	4403      	add	r3, r0
  406620:	f043 0001 	orr.w	r0, r3, #1
  406624:	6091      	str	r1, [r2, #8]
  406626:	6060      	str	r0, [r4, #4]
  406628:	50e3      	str	r3, [r4, r3]
  40662a:	e7a3      	b.n	406574 <_free_r+0x84>
  40662c:	2a14      	cmp	r2, #20
  40662e:	d816      	bhi.n	40665e <_free_r+0x16e>
  406630:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  406634:	00ff      	lsls	r7, r7, #3
  406636:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40663a:	e7aa      	b.n	406592 <_free_r+0xa2>
  40663c:	10aa      	asrs	r2, r5, #2
  40663e:	2301      	movs	r3, #1
  406640:	684d      	ldr	r5, [r1, #4]
  406642:	4093      	lsls	r3, r2
  406644:	432b      	orrs	r3, r5
  406646:	604b      	str	r3, [r1, #4]
  406648:	4603      	mov	r3, r0
  40664a:	e7b0      	b.n	4065ae <_free_r+0xbe>
  40664c:	f043 0201 	orr.w	r2, r3, #1
  406650:	614c      	str	r4, [r1, #20]
  406652:	610c      	str	r4, [r1, #16]
  406654:	60e5      	str	r5, [r4, #12]
  406656:	60a5      	str	r5, [r4, #8]
  406658:	6062      	str	r2, [r4, #4]
  40665a:	50e3      	str	r3, [r4, r3]
  40665c:	e78a      	b.n	406574 <_free_r+0x84>
  40665e:	2a54      	cmp	r2, #84	; 0x54
  406660:	d806      	bhi.n	406670 <_free_r+0x180>
  406662:	0b1a      	lsrs	r2, r3, #12
  406664:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  406668:	00ff      	lsls	r7, r7, #3
  40666a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40666e:	e790      	b.n	406592 <_free_r+0xa2>
  406670:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  406674:	d806      	bhi.n	406684 <_free_r+0x194>
  406676:	0bda      	lsrs	r2, r3, #15
  406678:	f102 0778 	add.w	r7, r2, #120	; 0x78
  40667c:	00ff      	lsls	r7, r7, #3
  40667e:	f102 0577 	add.w	r5, r2, #119	; 0x77
  406682:	e786      	b.n	406592 <_free_r+0xa2>
  406684:	f240 5054 	movw	r0, #1364	; 0x554
  406688:	4282      	cmp	r2, r0
  40668a:	d806      	bhi.n	40669a <_free_r+0x1aa>
  40668c:	0c9a      	lsrs	r2, r3, #18
  40668e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  406692:	00ff      	lsls	r7, r7, #3
  406694:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  406698:	e77b      	b.n	406592 <_free_r+0xa2>
  40669a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40669e:	257e      	movs	r5, #126	; 0x7e
  4066a0:	e777      	b.n	406592 <_free_r+0xa2>
  4066a2:	f043 0101 	orr.w	r1, r3, #1
  4066a6:	6061      	str	r1, [r4, #4]
  4066a8:	6013      	str	r3, [r2, #0]
  4066aa:	e763      	b.n	406574 <_free_r+0x84>
  4066ac:	20400440 	.word	0x20400440
  4066b0:	20400448 	.word	0x20400448
  4066b4:	2040084c 	.word	0x2040084c
  4066b8:	20400e44 	.word	0x20400e44

004066bc <__sfvwrite_r>:
  4066bc:	6893      	ldr	r3, [r2, #8]
  4066be:	2b00      	cmp	r3, #0
  4066c0:	d073      	beq.n	4067aa <__sfvwrite_r+0xee>
  4066c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4066c6:	898b      	ldrh	r3, [r1, #12]
  4066c8:	b083      	sub	sp, #12
  4066ca:	460c      	mov	r4, r1
  4066cc:	0719      	lsls	r1, r3, #28
  4066ce:	9000      	str	r0, [sp, #0]
  4066d0:	4616      	mov	r6, r2
  4066d2:	d526      	bpl.n	406722 <__sfvwrite_r+0x66>
  4066d4:	6922      	ldr	r2, [r4, #16]
  4066d6:	b322      	cbz	r2, 406722 <__sfvwrite_r+0x66>
  4066d8:	f013 0002 	ands.w	r0, r3, #2
  4066dc:	6835      	ldr	r5, [r6, #0]
  4066de:	d02c      	beq.n	40673a <__sfvwrite_r+0x7e>
  4066e0:	f04f 0900 	mov.w	r9, #0
  4066e4:	4fb0      	ldr	r7, [pc, #704]	; (4069a8 <__sfvwrite_r+0x2ec>)
  4066e6:	46c8      	mov	r8, r9
  4066e8:	46b2      	mov	sl, r6
  4066ea:	45b8      	cmp	r8, r7
  4066ec:	4643      	mov	r3, r8
  4066ee:	464a      	mov	r2, r9
  4066f0:	bf28      	it	cs
  4066f2:	463b      	movcs	r3, r7
  4066f4:	9800      	ldr	r0, [sp, #0]
  4066f6:	f1b8 0f00 	cmp.w	r8, #0
  4066fa:	d050      	beq.n	40679e <__sfvwrite_r+0xe2>
  4066fc:	69e1      	ldr	r1, [r4, #28]
  4066fe:	6a66      	ldr	r6, [r4, #36]	; 0x24
  406700:	47b0      	blx	r6
  406702:	2800      	cmp	r0, #0
  406704:	dd58      	ble.n	4067b8 <__sfvwrite_r+0xfc>
  406706:	f8da 3008 	ldr.w	r3, [sl, #8]
  40670a:	1a1b      	subs	r3, r3, r0
  40670c:	4481      	add	r9, r0
  40670e:	eba8 0800 	sub.w	r8, r8, r0
  406712:	f8ca 3008 	str.w	r3, [sl, #8]
  406716:	2b00      	cmp	r3, #0
  406718:	d1e7      	bne.n	4066ea <__sfvwrite_r+0x2e>
  40671a:	2000      	movs	r0, #0
  40671c:	b003      	add	sp, #12
  40671e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406722:	4621      	mov	r1, r4
  406724:	9800      	ldr	r0, [sp, #0]
  406726:	f7fe fc91 	bl	40504c <__swsetup_r>
  40672a:	2800      	cmp	r0, #0
  40672c:	f040 8133 	bne.w	406996 <__sfvwrite_r+0x2da>
  406730:	89a3      	ldrh	r3, [r4, #12]
  406732:	6835      	ldr	r5, [r6, #0]
  406734:	f013 0002 	ands.w	r0, r3, #2
  406738:	d1d2      	bne.n	4066e0 <__sfvwrite_r+0x24>
  40673a:	f013 0901 	ands.w	r9, r3, #1
  40673e:	d145      	bne.n	4067cc <__sfvwrite_r+0x110>
  406740:	464f      	mov	r7, r9
  406742:	9601      	str	r6, [sp, #4]
  406744:	b337      	cbz	r7, 406794 <__sfvwrite_r+0xd8>
  406746:	059a      	lsls	r2, r3, #22
  406748:	f8d4 8008 	ldr.w	r8, [r4, #8]
  40674c:	f140 8083 	bpl.w	406856 <__sfvwrite_r+0x19a>
  406750:	4547      	cmp	r7, r8
  406752:	46c3      	mov	fp, r8
  406754:	f0c0 80ab 	bcc.w	4068ae <__sfvwrite_r+0x1f2>
  406758:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40675c:	f040 80ac 	bne.w	4068b8 <__sfvwrite_r+0x1fc>
  406760:	6820      	ldr	r0, [r4, #0]
  406762:	46ba      	mov	sl, r7
  406764:	465a      	mov	r2, fp
  406766:	4649      	mov	r1, r9
  406768:	f000 faec 	bl	406d44 <memmove>
  40676c:	68a2      	ldr	r2, [r4, #8]
  40676e:	6823      	ldr	r3, [r4, #0]
  406770:	eba2 0208 	sub.w	r2, r2, r8
  406774:	445b      	add	r3, fp
  406776:	60a2      	str	r2, [r4, #8]
  406778:	6023      	str	r3, [r4, #0]
  40677a:	9a01      	ldr	r2, [sp, #4]
  40677c:	6893      	ldr	r3, [r2, #8]
  40677e:	eba3 030a 	sub.w	r3, r3, sl
  406782:	44d1      	add	r9, sl
  406784:	eba7 070a 	sub.w	r7, r7, sl
  406788:	6093      	str	r3, [r2, #8]
  40678a:	2b00      	cmp	r3, #0
  40678c:	d0c5      	beq.n	40671a <__sfvwrite_r+0x5e>
  40678e:	89a3      	ldrh	r3, [r4, #12]
  406790:	2f00      	cmp	r7, #0
  406792:	d1d8      	bne.n	406746 <__sfvwrite_r+0x8a>
  406794:	f8d5 9000 	ldr.w	r9, [r5]
  406798:	686f      	ldr	r7, [r5, #4]
  40679a:	3508      	adds	r5, #8
  40679c:	e7d2      	b.n	406744 <__sfvwrite_r+0x88>
  40679e:	f8d5 9000 	ldr.w	r9, [r5]
  4067a2:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4067a6:	3508      	adds	r5, #8
  4067a8:	e79f      	b.n	4066ea <__sfvwrite_r+0x2e>
  4067aa:	2000      	movs	r0, #0
  4067ac:	4770      	bx	lr
  4067ae:	4621      	mov	r1, r4
  4067b0:	9800      	ldr	r0, [sp, #0]
  4067b2:	f7ff fd1f 	bl	4061f4 <_fflush_r>
  4067b6:	b370      	cbz	r0, 406816 <__sfvwrite_r+0x15a>
  4067b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4067bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4067c0:	f04f 30ff 	mov.w	r0, #4294967295
  4067c4:	81a3      	strh	r3, [r4, #12]
  4067c6:	b003      	add	sp, #12
  4067c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4067cc:	4681      	mov	r9, r0
  4067ce:	4633      	mov	r3, r6
  4067d0:	464e      	mov	r6, r9
  4067d2:	46a8      	mov	r8, r5
  4067d4:	469a      	mov	sl, r3
  4067d6:	464d      	mov	r5, r9
  4067d8:	b34e      	cbz	r6, 40682e <__sfvwrite_r+0x172>
  4067da:	b380      	cbz	r0, 40683e <__sfvwrite_r+0x182>
  4067dc:	6820      	ldr	r0, [r4, #0]
  4067de:	6923      	ldr	r3, [r4, #16]
  4067e0:	6962      	ldr	r2, [r4, #20]
  4067e2:	45b1      	cmp	r9, r6
  4067e4:	46cb      	mov	fp, r9
  4067e6:	bf28      	it	cs
  4067e8:	46b3      	movcs	fp, r6
  4067ea:	4298      	cmp	r0, r3
  4067ec:	465f      	mov	r7, fp
  4067ee:	d904      	bls.n	4067fa <__sfvwrite_r+0x13e>
  4067f0:	68a3      	ldr	r3, [r4, #8]
  4067f2:	4413      	add	r3, r2
  4067f4:	459b      	cmp	fp, r3
  4067f6:	f300 80a6 	bgt.w	406946 <__sfvwrite_r+0x28a>
  4067fa:	4593      	cmp	fp, r2
  4067fc:	db4b      	blt.n	406896 <__sfvwrite_r+0x1da>
  4067fe:	4613      	mov	r3, r2
  406800:	6a67      	ldr	r7, [r4, #36]	; 0x24
  406802:	69e1      	ldr	r1, [r4, #28]
  406804:	9800      	ldr	r0, [sp, #0]
  406806:	462a      	mov	r2, r5
  406808:	47b8      	blx	r7
  40680a:	1e07      	subs	r7, r0, #0
  40680c:	ddd4      	ble.n	4067b8 <__sfvwrite_r+0xfc>
  40680e:	ebb9 0907 	subs.w	r9, r9, r7
  406812:	d0cc      	beq.n	4067ae <__sfvwrite_r+0xf2>
  406814:	2001      	movs	r0, #1
  406816:	f8da 3008 	ldr.w	r3, [sl, #8]
  40681a:	1bdb      	subs	r3, r3, r7
  40681c:	443d      	add	r5, r7
  40681e:	1bf6      	subs	r6, r6, r7
  406820:	f8ca 3008 	str.w	r3, [sl, #8]
  406824:	2b00      	cmp	r3, #0
  406826:	f43f af78 	beq.w	40671a <__sfvwrite_r+0x5e>
  40682a:	2e00      	cmp	r6, #0
  40682c:	d1d5      	bne.n	4067da <__sfvwrite_r+0x11e>
  40682e:	f108 0308 	add.w	r3, r8, #8
  406832:	e913 0060 	ldmdb	r3, {r5, r6}
  406836:	4698      	mov	r8, r3
  406838:	3308      	adds	r3, #8
  40683a:	2e00      	cmp	r6, #0
  40683c:	d0f9      	beq.n	406832 <__sfvwrite_r+0x176>
  40683e:	4632      	mov	r2, r6
  406840:	210a      	movs	r1, #10
  406842:	4628      	mov	r0, r5
  406844:	f000 f994 	bl	406b70 <memchr>
  406848:	2800      	cmp	r0, #0
  40684a:	f000 80a1 	beq.w	406990 <__sfvwrite_r+0x2d4>
  40684e:	3001      	adds	r0, #1
  406850:	eba0 0905 	sub.w	r9, r0, r5
  406854:	e7c2      	b.n	4067dc <__sfvwrite_r+0x120>
  406856:	6820      	ldr	r0, [r4, #0]
  406858:	6923      	ldr	r3, [r4, #16]
  40685a:	4298      	cmp	r0, r3
  40685c:	d802      	bhi.n	406864 <__sfvwrite_r+0x1a8>
  40685e:	6963      	ldr	r3, [r4, #20]
  406860:	429f      	cmp	r7, r3
  406862:	d25d      	bcs.n	406920 <__sfvwrite_r+0x264>
  406864:	45b8      	cmp	r8, r7
  406866:	bf28      	it	cs
  406868:	46b8      	movcs	r8, r7
  40686a:	4642      	mov	r2, r8
  40686c:	4649      	mov	r1, r9
  40686e:	f000 fa69 	bl	406d44 <memmove>
  406872:	68a3      	ldr	r3, [r4, #8]
  406874:	6822      	ldr	r2, [r4, #0]
  406876:	eba3 0308 	sub.w	r3, r3, r8
  40687a:	4442      	add	r2, r8
  40687c:	60a3      	str	r3, [r4, #8]
  40687e:	6022      	str	r2, [r4, #0]
  406880:	b10b      	cbz	r3, 406886 <__sfvwrite_r+0x1ca>
  406882:	46c2      	mov	sl, r8
  406884:	e779      	b.n	40677a <__sfvwrite_r+0xbe>
  406886:	4621      	mov	r1, r4
  406888:	9800      	ldr	r0, [sp, #0]
  40688a:	f7ff fcb3 	bl	4061f4 <_fflush_r>
  40688e:	2800      	cmp	r0, #0
  406890:	d192      	bne.n	4067b8 <__sfvwrite_r+0xfc>
  406892:	46c2      	mov	sl, r8
  406894:	e771      	b.n	40677a <__sfvwrite_r+0xbe>
  406896:	465a      	mov	r2, fp
  406898:	4629      	mov	r1, r5
  40689a:	f000 fa53 	bl	406d44 <memmove>
  40689e:	68a2      	ldr	r2, [r4, #8]
  4068a0:	6823      	ldr	r3, [r4, #0]
  4068a2:	eba2 020b 	sub.w	r2, r2, fp
  4068a6:	445b      	add	r3, fp
  4068a8:	60a2      	str	r2, [r4, #8]
  4068aa:	6023      	str	r3, [r4, #0]
  4068ac:	e7af      	b.n	40680e <__sfvwrite_r+0x152>
  4068ae:	6820      	ldr	r0, [r4, #0]
  4068b0:	46b8      	mov	r8, r7
  4068b2:	46ba      	mov	sl, r7
  4068b4:	46bb      	mov	fp, r7
  4068b6:	e755      	b.n	406764 <__sfvwrite_r+0xa8>
  4068b8:	6962      	ldr	r2, [r4, #20]
  4068ba:	6820      	ldr	r0, [r4, #0]
  4068bc:	6921      	ldr	r1, [r4, #16]
  4068be:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  4068c2:	eba0 0a01 	sub.w	sl, r0, r1
  4068c6:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  4068ca:	f10a 0001 	add.w	r0, sl, #1
  4068ce:	ea4f 0868 	mov.w	r8, r8, asr #1
  4068d2:	4438      	add	r0, r7
  4068d4:	4540      	cmp	r0, r8
  4068d6:	4642      	mov	r2, r8
  4068d8:	bf84      	itt	hi
  4068da:	4680      	movhi	r8, r0
  4068dc:	4642      	movhi	r2, r8
  4068de:	055b      	lsls	r3, r3, #21
  4068e0:	d544      	bpl.n	40696c <__sfvwrite_r+0x2b0>
  4068e2:	4611      	mov	r1, r2
  4068e4:	9800      	ldr	r0, [sp, #0]
  4068e6:	f7fb fdb3 	bl	402450 <_malloc_r>
  4068ea:	4683      	mov	fp, r0
  4068ec:	2800      	cmp	r0, #0
  4068ee:	d055      	beq.n	40699c <__sfvwrite_r+0x2e0>
  4068f0:	4652      	mov	r2, sl
  4068f2:	6921      	ldr	r1, [r4, #16]
  4068f4:	f000 f98c 	bl	406c10 <memcpy>
  4068f8:	89a3      	ldrh	r3, [r4, #12]
  4068fa:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  4068fe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  406902:	81a3      	strh	r3, [r4, #12]
  406904:	eb0b 000a 	add.w	r0, fp, sl
  406908:	eba8 030a 	sub.w	r3, r8, sl
  40690c:	f8c4 b010 	str.w	fp, [r4, #16]
  406910:	f8c4 8014 	str.w	r8, [r4, #20]
  406914:	6020      	str	r0, [r4, #0]
  406916:	60a3      	str	r3, [r4, #8]
  406918:	46b8      	mov	r8, r7
  40691a:	46ba      	mov	sl, r7
  40691c:	46bb      	mov	fp, r7
  40691e:	e721      	b.n	406764 <__sfvwrite_r+0xa8>
  406920:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  406924:	42b9      	cmp	r1, r7
  406926:	bf28      	it	cs
  406928:	4639      	movcs	r1, r7
  40692a:	464a      	mov	r2, r9
  40692c:	fb91 f1f3 	sdiv	r1, r1, r3
  406930:	9800      	ldr	r0, [sp, #0]
  406932:	6a66      	ldr	r6, [r4, #36]	; 0x24
  406934:	fb03 f301 	mul.w	r3, r3, r1
  406938:	69e1      	ldr	r1, [r4, #28]
  40693a:	47b0      	blx	r6
  40693c:	f1b0 0a00 	subs.w	sl, r0, #0
  406940:	f73f af1b 	bgt.w	40677a <__sfvwrite_r+0xbe>
  406944:	e738      	b.n	4067b8 <__sfvwrite_r+0xfc>
  406946:	461a      	mov	r2, r3
  406948:	4629      	mov	r1, r5
  40694a:	9301      	str	r3, [sp, #4]
  40694c:	f000 f9fa 	bl	406d44 <memmove>
  406950:	6822      	ldr	r2, [r4, #0]
  406952:	9b01      	ldr	r3, [sp, #4]
  406954:	9800      	ldr	r0, [sp, #0]
  406956:	441a      	add	r2, r3
  406958:	6022      	str	r2, [r4, #0]
  40695a:	4621      	mov	r1, r4
  40695c:	f7ff fc4a 	bl	4061f4 <_fflush_r>
  406960:	9b01      	ldr	r3, [sp, #4]
  406962:	2800      	cmp	r0, #0
  406964:	f47f af28 	bne.w	4067b8 <__sfvwrite_r+0xfc>
  406968:	461f      	mov	r7, r3
  40696a:	e750      	b.n	40680e <__sfvwrite_r+0x152>
  40696c:	9800      	ldr	r0, [sp, #0]
  40696e:	f000 fd47 	bl	407400 <_realloc_r>
  406972:	4683      	mov	fp, r0
  406974:	2800      	cmp	r0, #0
  406976:	d1c5      	bne.n	406904 <__sfvwrite_r+0x248>
  406978:	9d00      	ldr	r5, [sp, #0]
  40697a:	6921      	ldr	r1, [r4, #16]
  40697c:	4628      	mov	r0, r5
  40697e:	f7ff fdb7 	bl	4064f0 <_free_r>
  406982:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406986:	220c      	movs	r2, #12
  406988:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40698c:	602a      	str	r2, [r5, #0]
  40698e:	e715      	b.n	4067bc <__sfvwrite_r+0x100>
  406990:	f106 0901 	add.w	r9, r6, #1
  406994:	e722      	b.n	4067dc <__sfvwrite_r+0x120>
  406996:	f04f 30ff 	mov.w	r0, #4294967295
  40699a:	e6bf      	b.n	40671c <__sfvwrite_r+0x60>
  40699c:	9a00      	ldr	r2, [sp, #0]
  40699e:	230c      	movs	r3, #12
  4069a0:	6013      	str	r3, [r2, #0]
  4069a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4069a6:	e709      	b.n	4067bc <__sfvwrite_r+0x100>
  4069a8:	7ffffc00 	.word	0x7ffffc00

004069ac <_fwalk_reent>:
  4069ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4069b0:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4069b4:	d01f      	beq.n	4069f6 <_fwalk_reent+0x4a>
  4069b6:	4688      	mov	r8, r1
  4069b8:	4606      	mov	r6, r0
  4069ba:	f04f 0900 	mov.w	r9, #0
  4069be:	687d      	ldr	r5, [r7, #4]
  4069c0:	68bc      	ldr	r4, [r7, #8]
  4069c2:	3d01      	subs	r5, #1
  4069c4:	d411      	bmi.n	4069ea <_fwalk_reent+0x3e>
  4069c6:	89a3      	ldrh	r3, [r4, #12]
  4069c8:	2b01      	cmp	r3, #1
  4069ca:	f105 35ff 	add.w	r5, r5, #4294967295
  4069ce:	d908      	bls.n	4069e2 <_fwalk_reent+0x36>
  4069d0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4069d4:	3301      	adds	r3, #1
  4069d6:	4621      	mov	r1, r4
  4069d8:	4630      	mov	r0, r6
  4069da:	d002      	beq.n	4069e2 <_fwalk_reent+0x36>
  4069dc:	47c0      	blx	r8
  4069de:	ea49 0900 	orr.w	r9, r9, r0
  4069e2:	1c6b      	adds	r3, r5, #1
  4069e4:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4069e8:	d1ed      	bne.n	4069c6 <_fwalk_reent+0x1a>
  4069ea:	683f      	ldr	r7, [r7, #0]
  4069ec:	2f00      	cmp	r7, #0
  4069ee:	d1e6      	bne.n	4069be <_fwalk_reent+0x12>
  4069f0:	4648      	mov	r0, r9
  4069f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4069f6:	46b9      	mov	r9, r7
  4069f8:	4648      	mov	r0, r9
  4069fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4069fe:	bf00      	nop

00406a00 <__locale_mb_cur_max>:
  406a00:	4b04      	ldr	r3, [pc, #16]	; (406a14 <__locale_mb_cur_max+0x14>)
  406a02:	4a05      	ldr	r2, [pc, #20]	; (406a18 <__locale_mb_cur_max+0x18>)
  406a04:	681b      	ldr	r3, [r3, #0]
  406a06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  406a08:	2b00      	cmp	r3, #0
  406a0a:	bf08      	it	eq
  406a0c:	4613      	moveq	r3, r2
  406a0e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  406a12:	4770      	bx	lr
  406a14:	20400014 	.word	0x20400014
  406a18:	20400854 	.word	0x20400854

00406a1c <_localeconv_r>:
  406a1c:	4a04      	ldr	r2, [pc, #16]	; (406a30 <_localeconv_r+0x14>)
  406a1e:	4b05      	ldr	r3, [pc, #20]	; (406a34 <_localeconv_r+0x18>)
  406a20:	6812      	ldr	r2, [r2, #0]
  406a22:	6b50      	ldr	r0, [r2, #52]	; 0x34
  406a24:	2800      	cmp	r0, #0
  406a26:	bf08      	it	eq
  406a28:	4618      	moveq	r0, r3
  406a2a:	30f0      	adds	r0, #240	; 0xf0
  406a2c:	4770      	bx	lr
  406a2e:	bf00      	nop
  406a30:	20400014 	.word	0x20400014
  406a34:	20400854 	.word	0x20400854

00406a38 <__retarget_lock_init_recursive>:
  406a38:	4770      	bx	lr
  406a3a:	bf00      	nop

00406a3c <__retarget_lock_close_recursive>:
  406a3c:	4770      	bx	lr
  406a3e:	bf00      	nop

00406a40 <__retarget_lock_acquire_recursive>:
  406a40:	4770      	bx	lr
  406a42:	bf00      	nop

00406a44 <__retarget_lock_release_recursive>:
  406a44:	4770      	bx	lr
  406a46:	bf00      	nop

00406a48 <__swhatbuf_r>:
  406a48:	b570      	push	{r4, r5, r6, lr}
  406a4a:	460c      	mov	r4, r1
  406a4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406a50:	2900      	cmp	r1, #0
  406a52:	b090      	sub	sp, #64	; 0x40
  406a54:	4615      	mov	r5, r2
  406a56:	461e      	mov	r6, r3
  406a58:	db14      	blt.n	406a84 <__swhatbuf_r+0x3c>
  406a5a:	aa01      	add	r2, sp, #4
  406a5c:	f001 f8e4 	bl	407c28 <_fstat_r>
  406a60:	2800      	cmp	r0, #0
  406a62:	db0f      	blt.n	406a84 <__swhatbuf_r+0x3c>
  406a64:	9a02      	ldr	r2, [sp, #8]
  406a66:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  406a6a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  406a6e:	fab2 f282 	clz	r2, r2
  406a72:	0952      	lsrs	r2, r2, #5
  406a74:	f44f 6380 	mov.w	r3, #1024	; 0x400
  406a78:	f44f 6000 	mov.w	r0, #2048	; 0x800
  406a7c:	6032      	str	r2, [r6, #0]
  406a7e:	602b      	str	r3, [r5, #0]
  406a80:	b010      	add	sp, #64	; 0x40
  406a82:	bd70      	pop	{r4, r5, r6, pc}
  406a84:	89a2      	ldrh	r2, [r4, #12]
  406a86:	2300      	movs	r3, #0
  406a88:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  406a8c:	6033      	str	r3, [r6, #0]
  406a8e:	d004      	beq.n	406a9a <__swhatbuf_r+0x52>
  406a90:	2240      	movs	r2, #64	; 0x40
  406a92:	4618      	mov	r0, r3
  406a94:	602a      	str	r2, [r5, #0]
  406a96:	b010      	add	sp, #64	; 0x40
  406a98:	bd70      	pop	{r4, r5, r6, pc}
  406a9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  406a9e:	602b      	str	r3, [r5, #0]
  406aa0:	b010      	add	sp, #64	; 0x40
  406aa2:	bd70      	pop	{r4, r5, r6, pc}

00406aa4 <__smakebuf_r>:
  406aa4:	898a      	ldrh	r2, [r1, #12]
  406aa6:	0792      	lsls	r2, r2, #30
  406aa8:	460b      	mov	r3, r1
  406aaa:	d506      	bpl.n	406aba <__smakebuf_r+0x16>
  406aac:	f101 0243 	add.w	r2, r1, #67	; 0x43
  406ab0:	2101      	movs	r1, #1
  406ab2:	601a      	str	r2, [r3, #0]
  406ab4:	611a      	str	r2, [r3, #16]
  406ab6:	6159      	str	r1, [r3, #20]
  406ab8:	4770      	bx	lr
  406aba:	b5f0      	push	{r4, r5, r6, r7, lr}
  406abc:	b083      	sub	sp, #12
  406abe:	ab01      	add	r3, sp, #4
  406ac0:	466a      	mov	r2, sp
  406ac2:	460c      	mov	r4, r1
  406ac4:	4606      	mov	r6, r0
  406ac6:	f7ff ffbf 	bl	406a48 <__swhatbuf_r>
  406aca:	9900      	ldr	r1, [sp, #0]
  406acc:	4605      	mov	r5, r0
  406ace:	4630      	mov	r0, r6
  406ad0:	f7fb fcbe 	bl	402450 <_malloc_r>
  406ad4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406ad8:	b1d8      	cbz	r0, 406b12 <__smakebuf_r+0x6e>
  406ada:	9a01      	ldr	r2, [sp, #4]
  406adc:	4f15      	ldr	r7, [pc, #84]	; (406b34 <__smakebuf_r+0x90>)
  406ade:	9900      	ldr	r1, [sp, #0]
  406ae0:	63f7      	str	r7, [r6, #60]	; 0x3c
  406ae2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  406ae6:	81a3      	strh	r3, [r4, #12]
  406ae8:	6020      	str	r0, [r4, #0]
  406aea:	6120      	str	r0, [r4, #16]
  406aec:	6161      	str	r1, [r4, #20]
  406aee:	b91a      	cbnz	r2, 406af8 <__smakebuf_r+0x54>
  406af0:	432b      	orrs	r3, r5
  406af2:	81a3      	strh	r3, [r4, #12]
  406af4:	b003      	add	sp, #12
  406af6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406af8:	4630      	mov	r0, r6
  406afa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  406afe:	f001 f8a7 	bl	407c50 <_isatty_r>
  406b02:	b1a0      	cbz	r0, 406b2e <__smakebuf_r+0x8a>
  406b04:	89a3      	ldrh	r3, [r4, #12]
  406b06:	f023 0303 	bic.w	r3, r3, #3
  406b0a:	f043 0301 	orr.w	r3, r3, #1
  406b0e:	b21b      	sxth	r3, r3
  406b10:	e7ee      	b.n	406af0 <__smakebuf_r+0x4c>
  406b12:	059a      	lsls	r2, r3, #22
  406b14:	d4ee      	bmi.n	406af4 <__smakebuf_r+0x50>
  406b16:	f023 0303 	bic.w	r3, r3, #3
  406b1a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  406b1e:	f043 0302 	orr.w	r3, r3, #2
  406b22:	2101      	movs	r1, #1
  406b24:	81a3      	strh	r3, [r4, #12]
  406b26:	6022      	str	r2, [r4, #0]
  406b28:	6122      	str	r2, [r4, #16]
  406b2a:	6161      	str	r1, [r4, #20]
  406b2c:	e7e2      	b.n	406af4 <__smakebuf_r+0x50>
  406b2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406b32:	e7dd      	b.n	406af0 <__smakebuf_r+0x4c>
  406b34:	00406249 	.word	0x00406249

00406b38 <__ascii_mbtowc>:
  406b38:	b082      	sub	sp, #8
  406b3a:	b149      	cbz	r1, 406b50 <__ascii_mbtowc+0x18>
  406b3c:	b15a      	cbz	r2, 406b56 <__ascii_mbtowc+0x1e>
  406b3e:	b16b      	cbz	r3, 406b5c <__ascii_mbtowc+0x24>
  406b40:	7813      	ldrb	r3, [r2, #0]
  406b42:	600b      	str	r3, [r1, #0]
  406b44:	7812      	ldrb	r2, [r2, #0]
  406b46:	1c10      	adds	r0, r2, #0
  406b48:	bf18      	it	ne
  406b4a:	2001      	movne	r0, #1
  406b4c:	b002      	add	sp, #8
  406b4e:	4770      	bx	lr
  406b50:	a901      	add	r1, sp, #4
  406b52:	2a00      	cmp	r2, #0
  406b54:	d1f3      	bne.n	406b3e <__ascii_mbtowc+0x6>
  406b56:	4610      	mov	r0, r2
  406b58:	b002      	add	sp, #8
  406b5a:	4770      	bx	lr
  406b5c:	f06f 0001 	mvn.w	r0, #1
  406b60:	e7f4      	b.n	406b4c <__ascii_mbtowc+0x14>
  406b62:	bf00      	nop
	...

00406b70 <memchr>:
  406b70:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406b74:	2a10      	cmp	r2, #16
  406b76:	db2b      	blt.n	406bd0 <memchr+0x60>
  406b78:	f010 0f07 	tst.w	r0, #7
  406b7c:	d008      	beq.n	406b90 <memchr+0x20>
  406b7e:	f810 3b01 	ldrb.w	r3, [r0], #1
  406b82:	3a01      	subs	r2, #1
  406b84:	428b      	cmp	r3, r1
  406b86:	d02d      	beq.n	406be4 <memchr+0x74>
  406b88:	f010 0f07 	tst.w	r0, #7
  406b8c:	b342      	cbz	r2, 406be0 <memchr+0x70>
  406b8e:	d1f6      	bne.n	406b7e <memchr+0xe>
  406b90:	b4f0      	push	{r4, r5, r6, r7}
  406b92:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  406b96:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  406b9a:	f022 0407 	bic.w	r4, r2, #7
  406b9e:	f07f 0700 	mvns.w	r7, #0
  406ba2:	2300      	movs	r3, #0
  406ba4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  406ba8:	3c08      	subs	r4, #8
  406baa:	ea85 0501 	eor.w	r5, r5, r1
  406bae:	ea86 0601 	eor.w	r6, r6, r1
  406bb2:	fa85 f547 	uadd8	r5, r5, r7
  406bb6:	faa3 f587 	sel	r5, r3, r7
  406bba:	fa86 f647 	uadd8	r6, r6, r7
  406bbe:	faa5 f687 	sel	r6, r5, r7
  406bc2:	b98e      	cbnz	r6, 406be8 <memchr+0x78>
  406bc4:	d1ee      	bne.n	406ba4 <memchr+0x34>
  406bc6:	bcf0      	pop	{r4, r5, r6, r7}
  406bc8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406bcc:	f002 0207 	and.w	r2, r2, #7
  406bd0:	b132      	cbz	r2, 406be0 <memchr+0x70>
  406bd2:	f810 3b01 	ldrb.w	r3, [r0], #1
  406bd6:	3a01      	subs	r2, #1
  406bd8:	ea83 0301 	eor.w	r3, r3, r1
  406bdc:	b113      	cbz	r3, 406be4 <memchr+0x74>
  406bde:	d1f8      	bne.n	406bd2 <memchr+0x62>
  406be0:	2000      	movs	r0, #0
  406be2:	4770      	bx	lr
  406be4:	3801      	subs	r0, #1
  406be6:	4770      	bx	lr
  406be8:	2d00      	cmp	r5, #0
  406bea:	bf06      	itte	eq
  406bec:	4635      	moveq	r5, r6
  406bee:	3803      	subeq	r0, #3
  406bf0:	3807      	subne	r0, #7
  406bf2:	f015 0f01 	tst.w	r5, #1
  406bf6:	d107      	bne.n	406c08 <memchr+0x98>
  406bf8:	3001      	adds	r0, #1
  406bfa:	f415 7f80 	tst.w	r5, #256	; 0x100
  406bfe:	bf02      	ittt	eq
  406c00:	3001      	addeq	r0, #1
  406c02:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  406c06:	3001      	addeq	r0, #1
  406c08:	bcf0      	pop	{r4, r5, r6, r7}
  406c0a:	3801      	subs	r0, #1
  406c0c:	4770      	bx	lr
  406c0e:	bf00      	nop

00406c10 <memcpy>:
  406c10:	4684      	mov	ip, r0
  406c12:	ea41 0300 	orr.w	r3, r1, r0
  406c16:	f013 0303 	ands.w	r3, r3, #3
  406c1a:	d16d      	bne.n	406cf8 <memcpy+0xe8>
  406c1c:	3a40      	subs	r2, #64	; 0x40
  406c1e:	d341      	bcc.n	406ca4 <memcpy+0x94>
  406c20:	f851 3b04 	ldr.w	r3, [r1], #4
  406c24:	f840 3b04 	str.w	r3, [r0], #4
  406c28:	f851 3b04 	ldr.w	r3, [r1], #4
  406c2c:	f840 3b04 	str.w	r3, [r0], #4
  406c30:	f851 3b04 	ldr.w	r3, [r1], #4
  406c34:	f840 3b04 	str.w	r3, [r0], #4
  406c38:	f851 3b04 	ldr.w	r3, [r1], #4
  406c3c:	f840 3b04 	str.w	r3, [r0], #4
  406c40:	f851 3b04 	ldr.w	r3, [r1], #4
  406c44:	f840 3b04 	str.w	r3, [r0], #4
  406c48:	f851 3b04 	ldr.w	r3, [r1], #4
  406c4c:	f840 3b04 	str.w	r3, [r0], #4
  406c50:	f851 3b04 	ldr.w	r3, [r1], #4
  406c54:	f840 3b04 	str.w	r3, [r0], #4
  406c58:	f851 3b04 	ldr.w	r3, [r1], #4
  406c5c:	f840 3b04 	str.w	r3, [r0], #4
  406c60:	f851 3b04 	ldr.w	r3, [r1], #4
  406c64:	f840 3b04 	str.w	r3, [r0], #4
  406c68:	f851 3b04 	ldr.w	r3, [r1], #4
  406c6c:	f840 3b04 	str.w	r3, [r0], #4
  406c70:	f851 3b04 	ldr.w	r3, [r1], #4
  406c74:	f840 3b04 	str.w	r3, [r0], #4
  406c78:	f851 3b04 	ldr.w	r3, [r1], #4
  406c7c:	f840 3b04 	str.w	r3, [r0], #4
  406c80:	f851 3b04 	ldr.w	r3, [r1], #4
  406c84:	f840 3b04 	str.w	r3, [r0], #4
  406c88:	f851 3b04 	ldr.w	r3, [r1], #4
  406c8c:	f840 3b04 	str.w	r3, [r0], #4
  406c90:	f851 3b04 	ldr.w	r3, [r1], #4
  406c94:	f840 3b04 	str.w	r3, [r0], #4
  406c98:	f851 3b04 	ldr.w	r3, [r1], #4
  406c9c:	f840 3b04 	str.w	r3, [r0], #4
  406ca0:	3a40      	subs	r2, #64	; 0x40
  406ca2:	d2bd      	bcs.n	406c20 <memcpy+0x10>
  406ca4:	3230      	adds	r2, #48	; 0x30
  406ca6:	d311      	bcc.n	406ccc <memcpy+0xbc>
  406ca8:	f851 3b04 	ldr.w	r3, [r1], #4
  406cac:	f840 3b04 	str.w	r3, [r0], #4
  406cb0:	f851 3b04 	ldr.w	r3, [r1], #4
  406cb4:	f840 3b04 	str.w	r3, [r0], #4
  406cb8:	f851 3b04 	ldr.w	r3, [r1], #4
  406cbc:	f840 3b04 	str.w	r3, [r0], #4
  406cc0:	f851 3b04 	ldr.w	r3, [r1], #4
  406cc4:	f840 3b04 	str.w	r3, [r0], #4
  406cc8:	3a10      	subs	r2, #16
  406cca:	d2ed      	bcs.n	406ca8 <memcpy+0x98>
  406ccc:	320c      	adds	r2, #12
  406cce:	d305      	bcc.n	406cdc <memcpy+0xcc>
  406cd0:	f851 3b04 	ldr.w	r3, [r1], #4
  406cd4:	f840 3b04 	str.w	r3, [r0], #4
  406cd8:	3a04      	subs	r2, #4
  406cda:	d2f9      	bcs.n	406cd0 <memcpy+0xc0>
  406cdc:	3204      	adds	r2, #4
  406cde:	d008      	beq.n	406cf2 <memcpy+0xe2>
  406ce0:	07d2      	lsls	r2, r2, #31
  406ce2:	bf1c      	itt	ne
  406ce4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  406ce8:	f800 3b01 	strbne.w	r3, [r0], #1
  406cec:	d301      	bcc.n	406cf2 <memcpy+0xe2>
  406cee:	880b      	ldrh	r3, [r1, #0]
  406cf0:	8003      	strh	r3, [r0, #0]
  406cf2:	4660      	mov	r0, ip
  406cf4:	4770      	bx	lr
  406cf6:	bf00      	nop
  406cf8:	2a08      	cmp	r2, #8
  406cfa:	d313      	bcc.n	406d24 <memcpy+0x114>
  406cfc:	078b      	lsls	r3, r1, #30
  406cfe:	d08d      	beq.n	406c1c <memcpy+0xc>
  406d00:	f010 0303 	ands.w	r3, r0, #3
  406d04:	d08a      	beq.n	406c1c <memcpy+0xc>
  406d06:	f1c3 0304 	rsb	r3, r3, #4
  406d0a:	1ad2      	subs	r2, r2, r3
  406d0c:	07db      	lsls	r3, r3, #31
  406d0e:	bf1c      	itt	ne
  406d10:	f811 3b01 	ldrbne.w	r3, [r1], #1
  406d14:	f800 3b01 	strbne.w	r3, [r0], #1
  406d18:	d380      	bcc.n	406c1c <memcpy+0xc>
  406d1a:	f831 3b02 	ldrh.w	r3, [r1], #2
  406d1e:	f820 3b02 	strh.w	r3, [r0], #2
  406d22:	e77b      	b.n	406c1c <memcpy+0xc>
  406d24:	3a04      	subs	r2, #4
  406d26:	d3d9      	bcc.n	406cdc <memcpy+0xcc>
  406d28:	3a01      	subs	r2, #1
  406d2a:	f811 3b01 	ldrb.w	r3, [r1], #1
  406d2e:	f800 3b01 	strb.w	r3, [r0], #1
  406d32:	d2f9      	bcs.n	406d28 <memcpy+0x118>
  406d34:	780b      	ldrb	r3, [r1, #0]
  406d36:	7003      	strb	r3, [r0, #0]
  406d38:	784b      	ldrb	r3, [r1, #1]
  406d3a:	7043      	strb	r3, [r0, #1]
  406d3c:	788b      	ldrb	r3, [r1, #2]
  406d3e:	7083      	strb	r3, [r0, #2]
  406d40:	4660      	mov	r0, ip
  406d42:	4770      	bx	lr

00406d44 <memmove>:
  406d44:	4288      	cmp	r0, r1
  406d46:	b5f0      	push	{r4, r5, r6, r7, lr}
  406d48:	d90d      	bls.n	406d66 <memmove+0x22>
  406d4a:	188b      	adds	r3, r1, r2
  406d4c:	4298      	cmp	r0, r3
  406d4e:	d20a      	bcs.n	406d66 <memmove+0x22>
  406d50:	1884      	adds	r4, r0, r2
  406d52:	2a00      	cmp	r2, #0
  406d54:	d051      	beq.n	406dfa <memmove+0xb6>
  406d56:	4622      	mov	r2, r4
  406d58:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  406d5c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  406d60:	4299      	cmp	r1, r3
  406d62:	d1f9      	bne.n	406d58 <memmove+0x14>
  406d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406d66:	2a0f      	cmp	r2, #15
  406d68:	d948      	bls.n	406dfc <memmove+0xb8>
  406d6a:	ea41 0300 	orr.w	r3, r1, r0
  406d6e:	079b      	lsls	r3, r3, #30
  406d70:	d146      	bne.n	406e00 <memmove+0xbc>
  406d72:	f100 0410 	add.w	r4, r0, #16
  406d76:	f101 0310 	add.w	r3, r1, #16
  406d7a:	4615      	mov	r5, r2
  406d7c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  406d80:	f844 6c10 	str.w	r6, [r4, #-16]
  406d84:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  406d88:	f844 6c0c 	str.w	r6, [r4, #-12]
  406d8c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  406d90:	f844 6c08 	str.w	r6, [r4, #-8]
  406d94:	3d10      	subs	r5, #16
  406d96:	f853 6c04 	ldr.w	r6, [r3, #-4]
  406d9a:	f844 6c04 	str.w	r6, [r4, #-4]
  406d9e:	2d0f      	cmp	r5, #15
  406da0:	f103 0310 	add.w	r3, r3, #16
  406da4:	f104 0410 	add.w	r4, r4, #16
  406da8:	d8e8      	bhi.n	406d7c <memmove+0x38>
  406daa:	f1a2 0310 	sub.w	r3, r2, #16
  406dae:	f023 030f 	bic.w	r3, r3, #15
  406db2:	f002 0e0f 	and.w	lr, r2, #15
  406db6:	3310      	adds	r3, #16
  406db8:	f1be 0f03 	cmp.w	lr, #3
  406dbc:	4419      	add	r1, r3
  406dbe:	4403      	add	r3, r0
  406dc0:	d921      	bls.n	406e06 <memmove+0xc2>
  406dc2:	1f1e      	subs	r6, r3, #4
  406dc4:	460d      	mov	r5, r1
  406dc6:	4674      	mov	r4, lr
  406dc8:	3c04      	subs	r4, #4
  406dca:	f855 7b04 	ldr.w	r7, [r5], #4
  406dce:	f846 7f04 	str.w	r7, [r6, #4]!
  406dd2:	2c03      	cmp	r4, #3
  406dd4:	d8f8      	bhi.n	406dc8 <memmove+0x84>
  406dd6:	f1ae 0404 	sub.w	r4, lr, #4
  406dda:	f024 0403 	bic.w	r4, r4, #3
  406dde:	3404      	adds	r4, #4
  406de0:	4421      	add	r1, r4
  406de2:	4423      	add	r3, r4
  406de4:	f002 0203 	and.w	r2, r2, #3
  406de8:	b162      	cbz	r2, 406e04 <memmove+0xc0>
  406dea:	3b01      	subs	r3, #1
  406dec:	440a      	add	r2, r1
  406dee:	f811 4b01 	ldrb.w	r4, [r1], #1
  406df2:	f803 4f01 	strb.w	r4, [r3, #1]!
  406df6:	428a      	cmp	r2, r1
  406df8:	d1f9      	bne.n	406dee <memmove+0xaa>
  406dfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406dfc:	4603      	mov	r3, r0
  406dfe:	e7f3      	b.n	406de8 <memmove+0xa4>
  406e00:	4603      	mov	r3, r0
  406e02:	e7f2      	b.n	406dea <memmove+0xa6>
  406e04:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406e06:	4672      	mov	r2, lr
  406e08:	e7ee      	b.n	406de8 <memmove+0xa4>
  406e0a:	bf00      	nop

00406e0c <_Balloc>:
  406e0c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406e0e:	b570      	push	{r4, r5, r6, lr}
  406e10:	4605      	mov	r5, r0
  406e12:	460c      	mov	r4, r1
  406e14:	b14b      	cbz	r3, 406e2a <_Balloc+0x1e>
  406e16:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  406e1a:	b180      	cbz	r0, 406e3e <_Balloc+0x32>
  406e1c:	6802      	ldr	r2, [r0, #0]
  406e1e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  406e22:	2300      	movs	r3, #0
  406e24:	6103      	str	r3, [r0, #16]
  406e26:	60c3      	str	r3, [r0, #12]
  406e28:	bd70      	pop	{r4, r5, r6, pc}
  406e2a:	2221      	movs	r2, #33	; 0x21
  406e2c:	2104      	movs	r1, #4
  406e2e:	f000 fe57 	bl	407ae0 <_calloc_r>
  406e32:	64e8      	str	r0, [r5, #76]	; 0x4c
  406e34:	4603      	mov	r3, r0
  406e36:	2800      	cmp	r0, #0
  406e38:	d1ed      	bne.n	406e16 <_Balloc+0xa>
  406e3a:	2000      	movs	r0, #0
  406e3c:	bd70      	pop	{r4, r5, r6, pc}
  406e3e:	2101      	movs	r1, #1
  406e40:	fa01 f604 	lsl.w	r6, r1, r4
  406e44:	1d72      	adds	r2, r6, #5
  406e46:	4628      	mov	r0, r5
  406e48:	0092      	lsls	r2, r2, #2
  406e4a:	f000 fe49 	bl	407ae0 <_calloc_r>
  406e4e:	2800      	cmp	r0, #0
  406e50:	d0f3      	beq.n	406e3a <_Balloc+0x2e>
  406e52:	6044      	str	r4, [r0, #4]
  406e54:	6086      	str	r6, [r0, #8]
  406e56:	e7e4      	b.n	406e22 <_Balloc+0x16>

00406e58 <_Bfree>:
  406e58:	b131      	cbz	r1, 406e68 <_Bfree+0x10>
  406e5a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406e5c:	684a      	ldr	r2, [r1, #4]
  406e5e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  406e62:	6008      	str	r0, [r1, #0]
  406e64:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  406e68:	4770      	bx	lr
  406e6a:	bf00      	nop

00406e6c <__multadd>:
  406e6c:	b5f0      	push	{r4, r5, r6, r7, lr}
  406e6e:	690c      	ldr	r4, [r1, #16]
  406e70:	b083      	sub	sp, #12
  406e72:	460d      	mov	r5, r1
  406e74:	4606      	mov	r6, r0
  406e76:	f101 0e14 	add.w	lr, r1, #20
  406e7a:	2700      	movs	r7, #0
  406e7c:	f8de 0000 	ldr.w	r0, [lr]
  406e80:	b281      	uxth	r1, r0
  406e82:	fb02 3301 	mla	r3, r2, r1, r3
  406e86:	0c01      	lsrs	r1, r0, #16
  406e88:	0c18      	lsrs	r0, r3, #16
  406e8a:	fb02 0101 	mla	r1, r2, r1, r0
  406e8e:	b29b      	uxth	r3, r3
  406e90:	3701      	adds	r7, #1
  406e92:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  406e96:	42bc      	cmp	r4, r7
  406e98:	f84e 3b04 	str.w	r3, [lr], #4
  406e9c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  406ea0:	dcec      	bgt.n	406e7c <__multadd+0x10>
  406ea2:	b13b      	cbz	r3, 406eb4 <__multadd+0x48>
  406ea4:	68aa      	ldr	r2, [r5, #8]
  406ea6:	4294      	cmp	r4, r2
  406ea8:	da07      	bge.n	406eba <__multadd+0x4e>
  406eaa:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  406eae:	3401      	adds	r4, #1
  406eb0:	6153      	str	r3, [r2, #20]
  406eb2:	612c      	str	r4, [r5, #16]
  406eb4:	4628      	mov	r0, r5
  406eb6:	b003      	add	sp, #12
  406eb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406eba:	6869      	ldr	r1, [r5, #4]
  406ebc:	9301      	str	r3, [sp, #4]
  406ebe:	3101      	adds	r1, #1
  406ec0:	4630      	mov	r0, r6
  406ec2:	f7ff ffa3 	bl	406e0c <_Balloc>
  406ec6:	692a      	ldr	r2, [r5, #16]
  406ec8:	3202      	adds	r2, #2
  406eca:	f105 010c 	add.w	r1, r5, #12
  406ece:	4607      	mov	r7, r0
  406ed0:	0092      	lsls	r2, r2, #2
  406ed2:	300c      	adds	r0, #12
  406ed4:	f7ff fe9c 	bl	406c10 <memcpy>
  406ed8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  406eda:	6869      	ldr	r1, [r5, #4]
  406edc:	9b01      	ldr	r3, [sp, #4]
  406ede:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  406ee2:	6028      	str	r0, [r5, #0]
  406ee4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  406ee8:	463d      	mov	r5, r7
  406eea:	e7de      	b.n	406eaa <__multadd+0x3e>

00406eec <__hi0bits>:
  406eec:	0c02      	lsrs	r2, r0, #16
  406eee:	0412      	lsls	r2, r2, #16
  406ef0:	4603      	mov	r3, r0
  406ef2:	b9b2      	cbnz	r2, 406f22 <__hi0bits+0x36>
  406ef4:	0403      	lsls	r3, r0, #16
  406ef6:	2010      	movs	r0, #16
  406ef8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  406efc:	bf04      	itt	eq
  406efe:	021b      	lsleq	r3, r3, #8
  406f00:	3008      	addeq	r0, #8
  406f02:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  406f06:	bf04      	itt	eq
  406f08:	011b      	lsleq	r3, r3, #4
  406f0a:	3004      	addeq	r0, #4
  406f0c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  406f10:	bf04      	itt	eq
  406f12:	009b      	lsleq	r3, r3, #2
  406f14:	3002      	addeq	r0, #2
  406f16:	2b00      	cmp	r3, #0
  406f18:	db02      	blt.n	406f20 <__hi0bits+0x34>
  406f1a:	005b      	lsls	r3, r3, #1
  406f1c:	d403      	bmi.n	406f26 <__hi0bits+0x3a>
  406f1e:	2020      	movs	r0, #32
  406f20:	4770      	bx	lr
  406f22:	2000      	movs	r0, #0
  406f24:	e7e8      	b.n	406ef8 <__hi0bits+0xc>
  406f26:	3001      	adds	r0, #1
  406f28:	4770      	bx	lr
  406f2a:	bf00      	nop

00406f2c <__lo0bits>:
  406f2c:	6803      	ldr	r3, [r0, #0]
  406f2e:	f013 0207 	ands.w	r2, r3, #7
  406f32:	4601      	mov	r1, r0
  406f34:	d007      	beq.n	406f46 <__lo0bits+0x1a>
  406f36:	07da      	lsls	r2, r3, #31
  406f38:	d421      	bmi.n	406f7e <__lo0bits+0x52>
  406f3a:	0798      	lsls	r0, r3, #30
  406f3c:	d421      	bmi.n	406f82 <__lo0bits+0x56>
  406f3e:	089b      	lsrs	r3, r3, #2
  406f40:	600b      	str	r3, [r1, #0]
  406f42:	2002      	movs	r0, #2
  406f44:	4770      	bx	lr
  406f46:	b298      	uxth	r0, r3
  406f48:	b198      	cbz	r0, 406f72 <__lo0bits+0x46>
  406f4a:	4610      	mov	r0, r2
  406f4c:	f013 0fff 	tst.w	r3, #255	; 0xff
  406f50:	bf04      	itt	eq
  406f52:	0a1b      	lsreq	r3, r3, #8
  406f54:	3008      	addeq	r0, #8
  406f56:	071a      	lsls	r2, r3, #28
  406f58:	bf04      	itt	eq
  406f5a:	091b      	lsreq	r3, r3, #4
  406f5c:	3004      	addeq	r0, #4
  406f5e:	079a      	lsls	r2, r3, #30
  406f60:	bf04      	itt	eq
  406f62:	089b      	lsreq	r3, r3, #2
  406f64:	3002      	addeq	r0, #2
  406f66:	07da      	lsls	r2, r3, #31
  406f68:	d407      	bmi.n	406f7a <__lo0bits+0x4e>
  406f6a:	085b      	lsrs	r3, r3, #1
  406f6c:	d104      	bne.n	406f78 <__lo0bits+0x4c>
  406f6e:	2020      	movs	r0, #32
  406f70:	4770      	bx	lr
  406f72:	0c1b      	lsrs	r3, r3, #16
  406f74:	2010      	movs	r0, #16
  406f76:	e7e9      	b.n	406f4c <__lo0bits+0x20>
  406f78:	3001      	adds	r0, #1
  406f7a:	600b      	str	r3, [r1, #0]
  406f7c:	4770      	bx	lr
  406f7e:	2000      	movs	r0, #0
  406f80:	4770      	bx	lr
  406f82:	085b      	lsrs	r3, r3, #1
  406f84:	600b      	str	r3, [r1, #0]
  406f86:	2001      	movs	r0, #1
  406f88:	4770      	bx	lr
  406f8a:	bf00      	nop

00406f8c <__i2b>:
  406f8c:	b510      	push	{r4, lr}
  406f8e:	460c      	mov	r4, r1
  406f90:	2101      	movs	r1, #1
  406f92:	f7ff ff3b 	bl	406e0c <_Balloc>
  406f96:	2201      	movs	r2, #1
  406f98:	6144      	str	r4, [r0, #20]
  406f9a:	6102      	str	r2, [r0, #16]
  406f9c:	bd10      	pop	{r4, pc}
  406f9e:	bf00      	nop

00406fa0 <__multiply>:
  406fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406fa4:	690c      	ldr	r4, [r1, #16]
  406fa6:	6915      	ldr	r5, [r2, #16]
  406fa8:	42ac      	cmp	r4, r5
  406faa:	b083      	sub	sp, #12
  406fac:	468b      	mov	fp, r1
  406fae:	4616      	mov	r6, r2
  406fb0:	da04      	bge.n	406fbc <__multiply+0x1c>
  406fb2:	4622      	mov	r2, r4
  406fb4:	46b3      	mov	fp, r6
  406fb6:	462c      	mov	r4, r5
  406fb8:	460e      	mov	r6, r1
  406fba:	4615      	mov	r5, r2
  406fbc:	f8db 3008 	ldr.w	r3, [fp, #8]
  406fc0:	f8db 1004 	ldr.w	r1, [fp, #4]
  406fc4:	eb04 0805 	add.w	r8, r4, r5
  406fc8:	4598      	cmp	r8, r3
  406fca:	bfc8      	it	gt
  406fcc:	3101      	addgt	r1, #1
  406fce:	f7ff ff1d 	bl	406e0c <_Balloc>
  406fd2:	f100 0914 	add.w	r9, r0, #20
  406fd6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  406fda:	45d1      	cmp	r9, sl
  406fdc:	9000      	str	r0, [sp, #0]
  406fde:	d205      	bcs.n	406fec <__multiply+0x4c>
  406fe0:	464b      	mov	r3, r9
  406fe2:	2100      	movs	r1, #0
  406fe4:	f843 1b04 	str.w	r1, [r3], #4
  406fe8:	459a      	cmp	sl, r3
  406fea:	d8fb      	bhi.n	406fe4 <__multiply+0x44>
  406fec:	f106 0c14 	add.w	ip, r6, #20
  406ff0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  406ff4:	f10b 0b14 	add.w	fp, fp, #20
  406ff8:	459c      	cmp	ip, r3
  406ffa:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  406ffe:	d24c      	bcs.n	40709a <__multiply+0xfa>
  407000:	f8cd a004 	str.w	sl, [sp, #4]
  407004:	469a      	mov	sl, r3
  407006:	f8dc 5000 	ldr.w	r5, [ip]
  40700a:	b2af      	uxth	r7, r5
  40700c:	b1ef      	cbz	r7, 40704a <__multiply+0xaa>
  40700e:	2100      	movs	r1, #0
  407010:	464d      	mov	r5, r9
  407012:	465e      	mov	r6, fp
  407014:	460c      	mov	r4, r1
  407016:	f856 2b04 	ldr.w	r2, [r6], #4
  40701a:	6828      	ldr	r0, [r5, #0]
  40701c:	b293      	uxth	r3, r2
  40701e:	b281      	uxth	r1, r0
  407020:	fb07 1303 	mla	r3, r7, r3, r1
  407024:	0c12      	lsrs	r2, r2, #16
  407026:	0c01      	lsrs	r1, r0, #16
  407028:	4423      	add	r3, r4
  40702a:	fb07 1102 	mla	r1, r7, r2, r1
  40702e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  407032:	b29b      	uxth	r3, r3
  407034:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  407038:	45b6      	cmp	lr, r6
  40703a:	f845 3b04 	str.w	r3, [r5], #4
  40703e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  407042:	d8e8      	bhi.n	407016 <__multiply+0x76>
  407044:	602c      	str	r4, [r5, #0]
  407046:	f8dc 5000 	ldr.w	r5, [ip]
  40704a:	0c2d      	lsrs	r5, r5, #16
  40704c:	d01d      	beq.n	40708a <__multiply+0xea>
  40704e:	f8d9 3000 	ldr.w	r3, [r9]
  407052:	4648      	mov	r0, r9
  407054:	461c      	mov	r4, r3
  407056:	4659      	mov	r1, fp
  407058:	2200      	movs	r2, #0
  40705a:	880e      	ldrh	r6, [r1, #0]
  40705c:	0c24      	lsrs	r4, r4, #16
  40705e:	fb05 4406 	mla	r4, r5, r6, r4
  407062:	4422      	add	r2, r4
  407064:	b29b      	uxth	r3, r3
  407066:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40706a:	f840 3b04 	str.w	r3, [r0], #4
  40706e:	f851 3b04 	ldr.w	r3, [r1], #4
  407072:	6804      	ldr	r4, [r0, #0]
  407074:	0c1b      	lsrs	r3, r3, #16
  407076:	b2a6      	uxth	r6, r4
  407078:	fb05 6303 	mla	r3, r5, r3, r6
  40707c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  407080:	458e      	cmp	lr, r1
  407082:	ea4f 4213 	mov.w	r2, r3, lsr #16
  407086:	d8e8      	bhi.n	40705a <__multiply+0xba>
  407088:	6003      	str	r3, [r0, #0]
  40708a:	f10c 0c04 	add.w	ip, ip, #4
  40708e:	45e2      	cmp	sl, ip
  407090:	f109 0904 	add.w	r9, r9, #4
  407094:	d8b7      	bhi.n	407006 <__multiply+0x66>
  407096:	f8dd a004 	ldr.w	sl, [sp, #4]
  40709a:	f1b8 0f00 	cmp.w	r8, #0
  40709e:	dd0b      	ble.n	4070b8 <__multiply+0x118>
  4070a0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4070a4:	f1aa 0a04 	sub.w	sl, sl, #4
  4070a8:	b11b      	cbz	r3, 4070b2 <__multiply+0x112>
  4070aa:	e005      	b.n	4070b8 <__multiply+0x118>
  4070ac:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4070b0:	b913      	cbnz	r3, 4070b8 <__multiply+0x118>
  4070b2:	f1b8 0801 	subs.w	r8, r8, #1
  4070b6:	d1f9      	bne.n	4070ac <__multiply+0x10c>
  4070b8:	9800      	ldr	r0, [sp, #0]
  4070ba:	f8c0 8010 	str.w	r8, [r0, #16]
  4070be:	b003      	add	sp, #12
  4070c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004070c4 <__pow5mult>:
  4070c4:	f012 0303 	ands.w	r3, r2, #3
  4070c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4070cc:	4614      	mov	r4, r2
  4070ce:	4607      	mov	r7, r0
  4070d0:	d12e      	bne.n	407130 <__pow5mult+0x6c>
  4070d2:	460d      	mov	r5, r1
  4070d4:	10a4      	asrs	r4, r4, #2
  4070d6:	d01c      	beq.n	407112 <__pow5mult+0x4e>
  4070d8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  4070da:	b396      	cbz	r6, 407142 <__pow5mult+0x7e>
  4070dc:	07e3      	lsls	r3, r4, #31
  4070de:	f04f 0800 	mov.w	r8, #0
  4070e2:	d406      	bmi.n	4070f2 <__pow5mult+0x2e>
  4070e4:	1064      	asrs	r4, r4, #1
  4070e6:	d014      	beq.n	407112 <__pow5mult+0x4e>
  4070e8:	6830      	ldr	r0, [r6, #0]
  4070ea:	b1a8      	cbz	r0, 407118 <__pow5mult+0x54>
  4070ec:	4606      	mov	r6, r0
  4070ee:	07e3      	lsls	r3, r4, #31
  4070f0:	d5f8      	bpl.n	4070e4 <__pow5mult+0x20>
  4070f2:	4632      	mov	r2, r6
  4070f4:	4629      	mov	r1, r5
  4070f6:	4638      	mov	r0, r7
  4070f8:	f7ff ff52 	bl	406fa0 <__multiply>
  4070fc:	b1b5      	cbz	r5, 40712c <__pow5mult+0x68>
  4070fe:	686a      	ldr	r2, [r5, #4]
  407100:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407102:	1064      	asrs	r4, r4, #1
  407104:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  407108:	6029      	str	r1, [r5, #0]
  40710a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40710e:	4605      	mov	r5, r0
  407110:	d1ea      	bne.n	4070e8 <__pow5mult+0x24>
  407112:	4628      	mov	r0, r5
  407114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407118:	4632      	mov	r2, r6
  40711a:	4631      	mov	r1, r6
  40711c:	4638      	mov	r0, r7
  40711e:	f7ff ff3f 	bl	406fa0 <__multiply>
  407122:	6030      	str	r0, [r6, #0]
  407124:	f8c0 8000 	str.w	r8, [r0]
  407128:	4606      	mov	r6, r0
  40712a:	e7e0      	b.n	4070ee <__pow5mult+0x2a>
  40712c:	4605      	mov	r5, r0
  40712e:	e7d9      	b.n	4070e4 <__pow5mult+0x20>
  407130:	1e5a      	subs	r2, r3, #1
  407132:	4d0b      	ldr	r5, [pc, #44]	; (407160 <__pow5mult+0x9c>)
  407134:	2300      	movs	r3, #0
  407136:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40713a:	f7ff fe97 	bl	406e6c <__multadd>
  40713e:	4605      	mov	r5, r0
  407140:	e7c8      	b.n	4070d4 <__pow5mult+0x10>
  407142:	2101      	movs	r1, #1
  407144:	4638      	mov	r0, r7
  407146:	f7ff fe61 	bl	406e0c <_Balloc>
  40714a:	f240 2171 	movw	r1, #625	; 0x271
  40714e:	2201      	movs	r2, #1
  407150:	2300      	movs	r3, #0
  407152:	6141      	str	r1, [r0, #20]
  407154:	6102      	str	r2, [r0, #16]
  407156:	4606      	mov	r6, r0
  407158:	64b8      	str	r0, [r7, #72]	; 0x48
  40715a:	6003      	str	r3, [r0, #0]
  40715c:	e7be      	b.n	4070dc <__pow5mult+0x18>
  40715e:	bf00      	nop
  407160:	00408b50 	.word	0x00408b50

00407164 <__lshift>:
  407164:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  407168:	4691      	mov	r9, r2
  40716a:	690a      	ldr	r2, [r1, #16]
  40716c:	688b      	ldr	r3, [r1, #8]
  40716e:	ea4f 1469 	mov.w	r4, r9, asr #5
  407172:	eb04 0802 	add.w	r8, r4, r2
  407176:	f108 0501 	add.w	r5, r8, #1
  40717a:	429d      	cmp	r5, r3
  40717c:	460e      	mov	r6, r1
  40717e:	4607      	mov	r7, r0
  407180:	6849      	ldr	r1, [r1, #4]
  407182:	dd04      	ble.n	40718e <__lshift+0x2a>
  407184:	005b      	lsls	r3, r3, #1
  407186:	429d      	cmp	r5, r3
  407188:	f101 0101 	add.w	r1, r1, #1
  40718c:	dcfa      	bgt.n	407184 <__lshift+0x20>
  40718e:	4638      	mov	r0, r7
  407190:	f7ff fe3c 	bl	406e0c <_Balloc>
  407194:	2c00      	cmp	r4, #0
  407196:	f100 0314 	add.w	r3, r0, #20
  40719a:	dd06      	ble.n	4071aa <__lshift+0x46>
  40719c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4071a0:	2100      	movs	r1, #0
  4071a2:	f843 1b04 	str.w	r1, [r3], #4
  4071a6:	429a      	cmp	r2, r3
  4071a8:	d1fb      	bne.n	4071a2 <__lshift+0x3e>
  4071aa:	6934      	ldr	r4, [r6, #16]
  4071ac:	f106 0114 	add.w	r1, r6, #20
  4071b0:	f019 091f 	ands.w	r9, r9, #31
  4071b4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4071b8:	d01d      	beq.n	4071f6 <__lshift+0x92>
  4071ba:	f1c9 0c20 	rsb	ip, r9, #32
  4071be:	2200      	movs	r2, #0
  4071c0:	680c      	ldr	r4, [r1, #0]
  4071c2:	fa04 f409 	lsl.w	r4, r4, r9
  4071c6:	4314      	orrs	r4, r2
  4071c8:	f843 4b04 	str.w	r4, [r3], #4
  4071cc:	f851 2b04 	ldr.w	r2, [r1], #4
  4071d0:	458e      	cmp	lr, r1
  4071d2:	fa22 f20c 	lsr.w	r2, r2, ip
  4071d6:	d8f3      	bhi.n	4071c0 <__lshift+0x5c>
  4071d8:	601a      	str	r2, [r3, #0]
  4071da:	b10a      	cbz	r2, 4071e0 <__lshift+0x7c>
  4071dc:	f108 0502 	add.w	r5, r8, #2
  4071e0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4071e2:	6872      	ldr	r2, [r6, #4]
  4071e4:	3d01      	subs	r5, #1
  4071e6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4071ea:	6105      	str	r5, [r0, #16]
  4071ec:	6031      	str	r1, [r6, #0]
  4071ee:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  4071f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4071f6:	3b04      	subs	r3, #4
  4071f8:	f851 2b04 	ldr.w	r2, [r1], #4
  4071fc:	f843 2f04 	str.w	r2, [r3, #4]!
  407200:	458e      	cmp	lr, r1
  407202:	d8f9      	bhi.n	4071f8 <__lshift+0x94>
  407204:	e7ec      	b.n	4071e0 <__lshift+0x7c>
  407206:	bf00      	nop

00407208 <__mcmp>:
  407208:	b430      	push	{r4, r5}
  40720a:	690b      	ldr	r3, [r1, #16]
  40720c:	4605      	mov	r5, r0
  40720e:	6900      	ldr	r0, [r0, #16]
  407210:	1ac0      	subs	r0, r0, r3
  407212:	d10f      	bne.n	407234 <__mcmp+0x2c>
  407214:	009b      	lsls	r3, r3, #2
  407216:	3514      	adds	r5, #20
  407218:	3114      	adds	r1, #20
  40721a:	4419      	add	r1, r3
  40721c:	442b      	add	r3, r5
  40721e:	e001      	b.n	407224 <__mcmp+0x1c>
  407220:	429d      	cmp	r5, r3
  407222:	d207      	bcs.n	407234 <__mcmp+0x2c>
  407224:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  407228:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40722c:	4294      	cmp	r4, r2
  40722e:	d0f7      	beq.n	407220 <__mcmp+0x18>
  407230:	d302      	bcc.n	407238 <__mcmp+0x30>
  407232:	2001      	movs	r0, #1
  407234:	bc30      	pop	{r4, r5}
  407236:	4770      	bx	lr
  407238:	f04f 30ff 	mov.w	r0, #4294967295
  40723c:	e7fa      	b.n	407234 <__mcmp+0x2c>
  40723e:	bf00      	nop

00407240 <__mdiff>:
  407240:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407244:	690f      	ldr	r7, [r1, #16]
  407246:	460e      	mov	r6, r1
  407248:	6911      	ldr	r1, [r2, #16]
  40724a:	1a7f      	subs	r7, r7, r1
  40724c:	2f00      	cmp	r7, #0
  40724e:	4690      	mov	r8, r2
  407250:	d117      	bne.n	407282 <__mdiff+0x42>
  407252:	0089      	lsls	r1, r1, #2
  407254:	f106 0514 	add.w	r5, r6, #20
  407258:	f102 0e14 	add.w	lr, r2, #20
  40725c:	186b      	adds	r3, r5, r1
  40725e:	4471      	add	r1, lr
  407260:	e001      	b.n	407266 <__mdiff+0x26>
  407262:	429d      	cmp	r5, r3
  407264:	d25c      	bcs.n	407320 <__mdiff+0xe0>
  407266:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40726a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40726e:	42a2      	cmp	r2, r4
  407270:	d0f7      	beq.n	407262 <__mdiff+0x22>
  407272:	d25e      	bcs.n	407332 <__mdiff+0xf2>
  407274:	4633      	mov	r3, r6
  407276:	462c      	mov	r4, r5
  407278:	4646      	mov	r6, r8
  40727a:	4675      	mov	r5, lr
  40727c:	4698      	mov	r8, r3
  40727e:	2701      	movs	r7, #1
  407280:	e005      	b.n	40728e <__mdiff+0x4e>
  407282:	db58      	blt.n	407336 <__mdiff+0xf6>
  407284:	f106 0514 	add.w	r5, r6, #20
  407288:	f108 0414 	add.w	r4, r8, #20
  40728c:	2700      	movs	r7, #0
  40728e:	6871      	ldr	r1, [r6, #4]
  407290:	f7ff fdbc 	bl	406e0c <_Balloc>
  407294:	f8d8 3010 	ldr.w	r3, [r8, #16]
  407298:	6936      	ldr	r6, [r6, #16]
  40729a:	60c7      	str	r7, [r0, #12]
  40729c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4072a0:	46a6      	mov	lr, r4
  4072a2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4072a6:	f100 0414 	add.w	r4, r0, #20
  4072aa:	2300      	movs	r3, #0
  4072ac:	f85e 1b04 	ldr.w	r1, [lr], #4
  4072b0:	f855 8b04 	ldr.w	r8, [r5], #4
  4072b4:	b28a      	uxth	r2, r1
  4072b6:	fa13 f388 	uxtah	r3, r3, r8
  4072ba:	0c09      	lsrs	r1, r1, #16
  4072bc:	1a9a      	subs	r2, r3, r2
  4072be:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4072c2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4072c6:	b292      	uxth	r2, r2
  4072c8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4072cc:	45f4      	cmp	ip, lr
  4072ce:	f844 2b04 	str.w	r2, [r4], #4
  4072d2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4072d6:	d8e9      	bhi.n	4072ac <__mdiff+0x6c>
  4072d8:	42af      	cmp	r7, r5
  4072da:	d917      	bls.n	40730c <__mdiff+0xcc>
  4072dc:	46a4      	mov	ip, r4
  4072de:	46ae      	mov	lr, r5
  4072e0:	f85e 2b04 	ldr.w	r2, [lr], #4
  4072e4:	fa13 f382 	uxtah	r3, r3, r2
  4072e8:	1419      	asrs	r1, r3, #16
  4072ea:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  4072ee:	b29b      	uxth	r3, r3
  4072f0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  4072f4:	4577      	cmp	r7, lr
  4072f6:	f84c 2b04 	str.w	r2, [ip], #4
  4072fa:	ea4f 4321 	mov.w	r3, r1, asr #16
  4072fe:	d8ef      	bhi.n	4072e0 <__mdiff+0xa0>
  407300:	43ed      	mvns	r5, r5
  407302:	442f      	add	r7, r5
  407304:	f027 0703 	bic.w	r7, r7, #3
  407308:	3704      	adds	r7, #4
  40730a:	443c      	add	r4, r7
  40730c:	3c04      	subs	r4, #4
  40730e:	b922      	cbnz	r2, 40731a <__mdiff+0xda>
  407310:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  407314:	3e01      	subs	r6, #1
  407316:	2b00      	cmp	r3, #0
  407318:	d0fa      	beq.n	407310 <__mdiff+0xd0>
  40731a:	6106      	str	r6, [r0, #16]
  40731c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407320:	2100      	movs	r1, #0
  407322:	f7ff fd73 	bl	406e0c <_Balloc>
  407326:	2201      	movs	r2, #1
  407328:	2300      	movs	r3, #0
  40732a:	6102      	str	r2, [r0, #16]
  40732c:	6143      	str	r3, [r0, #20]
  40732e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407332:	4674      	mov	r4, lr
  407334:	e7ab      	b.n	40728e <__mdiff+0x4e>
  407336:	4633      	mov	r3, r6
  407338:	f106 0414 	add.w	r4, r6, #20
  40733c:	f102 0514 	add.w	r5, r2, #20
  407340:	4616      	mov	r6, r2
  407342:	2701      	movs	r7, #1
  407344:	4698      	mov	r8, r3
  407346:	e7a2      	b.n	40728e <__mdiff+0x4e>

00407348 <__d2b>:
  407348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40734c:	b082      	sub	sp, #8
  40734e:	2101      	movs	r1, #1
  407350:	461c      	mov	r4, r3
  407352:	f3c3 570a 	ubfx	r7, r3, #20, #11
  407356:	4615      	mov	r5, r2
  407358:	9e08      	ldr	r6, [sp, #32]
  40735a:	f7ff fd57 	bl	406e0c <_Balloc>
  40735e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  407362:	4680      	mov	r8, r0
  407364:	b10f      	cbz	r7, 40736a <__d2b+0x22>
  407366:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40736a:	9401      	str	r4, [sp, #4]
  40736c:	b31d      	cbz	r5, 4073b6 <__d2b+0x6e>
  40736e:	a802      	add	r0, sp, #8
  407370:	f840 5d08 	str.w	r5, [r0, #-8]!
  407374:	f7ff fdda 	bl	406f2c <__lo0bits>
  407378:	2800      	cmp	r0, #0
  40737a:	d134      	bne.n	4073e6 <__d2b+0x9e>
  40737c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  407380:	f8c8 2014 	str.w	r2, [r8, #20]
  407384:	2b00      	cmp	r3, #0
  407386:	bf0c      	ite	eq
  407388:	2101      	moveq	r1, #1
  40738a:	2102      	movne	r1, #2
  40738c:	f8c8 3018 	str.w	r3, [r8, #24]
  407390:	f8c8 1010 	str.w	r1, [r8, #16]
  407394:	b9df      	cbnz	r7, 4073ce <__d2b+0x86>
  407396:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40739a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40739e:	6030      	str	r0, [r6, #0]
  4073a0:	6918      	ldr	r0, [r3, #16]
  4073a2:	f7ff fda3 	bl	406eec <__hi0bits>
  4073a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4073a8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4073ac:	6018      	str	r0, [r3, #0]
  4073ae:	4640      	mov	r0, r8
  4073b0:	b002      	add	sp, #8
  4073b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4073b6:	a801      	add	r0, sp, #4
  4073b8:	f7ff fdb8 	bl	406f2c <__lo0bits>
  4073bc:	9b01      	ldr	r3, [sp, #4]
  4073be:	f8c8 3014 	str.w	r3, [r8, #20]
  4073c2:	2101      	movs	r1, #1
  4073c4:	3020      	adds	r0, #32
  4073c6:	f8c8 1010 	str.w	r1, [r8, #16]
  4073ca:	2f00      	cmp	r7, #0
  4073cc:	d0e3      	beq.n	407396 <__d2b+0x4e>
  4073ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4073d0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4073d4:	4407      	add	r7, r0
  4073d6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4073da:	6037      	str	r7, [r6, #0]
  4073dc:	6018      	str	r0, [r3, #0]
  4073de:	4640      	mov	r0, r8
  4073e0:	b002      	add	sp, #8
  4073e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4073e6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  4073ea:	f1c0 0220 	rsb	r2, r0, #32
  4073ee:	fa03 f202 	lsl.w	r2, r3, r2
  4073f2:	430a      	orrs	r2, r1
  4073f4:	40c3      	lsrs	r3, r0
  4073f6:	9301      	str	r3, [sp, #4]
  4073f8:	f8c8 2014 	str.w	r2, [r8, #20]
  4073fc:	e7c2      	b.n	407384 <__d2b+0x3c>
  4073fe:	bf00      	nop

00407400 <_realloc_r>:
  407400:	2900      	cmp	r1, #0
  407402:	f000 8095 	beq.w	407530 <_realloc_r+0x130>
  407406:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40740a:	460d      	mov	r5, r1
  40740c:	4616      	mov	r6, r2
  40740e:	b083      	sub	sp, #12
  407410:	4680      	mov	r8, r0
  407412:	f106 070b 	add.w	r7, r6, #11
  407416:	f7fb fb19 	bl	402a4c <__malloc_lock>
  40741a:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40741e:	2f16      	cmp	r7, #22
  407420:	f02e 0403 	bic.w	r4, lr, #3
  407424:	f1a5 0908 	sub.w	r9, r5, #8
  407428:	d83c      	bhi.n	4074a4 <_realloc_r+0xa4>
  40742a:	2210      	movs	r2, #16
  40742c:	4617      	mov	r7, r2
  40742e:	42be      	cmp	r6, r7
  407430:	d83d      	bhi.n	4074ae <_realloc_r+0xae>
  407432:	4294      	cmp	r4, r2
  407434:	da43      	bge.n	4074be <_realloc_r+0xbe>
  407436:	4bc4      	ldr	r3, [pc, #784]	; (407748 <_realloc_r+0x348>)
  407438:	6899      	ldr	r1, [r3, #8]
  40743a:	eb09 0004 	add.w	r0, r9, r4
  40743e:	4288      	cmp	r0, r1
  407440:	f000 80b4 	beq.w	4075ac <_realloc_r+0x1ac>
  407444:	6843      	ldr	r3, [r0, #4]
  407446:	f023 0101 	bic.w	r1, r3, #1
  40744a:	4401      	add	r1, r0
  40744c:	6849      	ldr	r1, [r1, #4]
  40744e:	07c9      	lsls	r1, r1, #31
  407450:	d54c      	bpl.n	4074ec <_realloc_r+0xec>
  407452:	f01e 0f01 	tst.w	lr, #1
  407456:	f000 809b 	beq.w	407590 <_realloc_r+0x190>
  40745a:	4631      	mov	r1, r6
  40745c:	4640      	mov	r0, r8
  40745e:	f7fa fff7 	bl	402450 <_malloc_r>
  407462:	4606      	mov	r6, r0
  407464:	2800      	cmp	r0, #0
  407466:	d03a      	beq.n	4074de <_realloc_r+0xde>
  407468:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40746c:	f023 0301 	bic.w	r3, r3, #1
  407470:	444b      	add	r3, r9
  407472:	f1a0 0208 	sub.w	r2, r0, #8
  407476:	429a      	cmp	r2, r3
  407478:	f000 8121 	beq.w	4076be <_realloc_r+0x2be>
  40747c:	1f22      	subs	r2, r4, #4
  40747e:	2a24      	cmp	r2, #36	; 0x24
  407480:	f200 8107 	bhi.w	407692 <_realloc_r+0x292>
  407484:	2a13      	cmp	r2, #19
  407486:	f200 80db 	bhi.w	407640 <_realloc_r+0x240>
  40748a:	4603      	mov	r3, r0
  40748c:	462a      	mov	r2, r5
  40748e:	6811      	ldr	r1, [r2, #0]
  407490:	6019      	str	r1, [r3, #0]
  407492:	6851      	ldr	r1, [r2, #4]
  407494:	6059      	str	r1, [r3, #4]
  407496:	6892      	ldr	r2, [r2, #8]
  407498:	609a      	str	r2, [r3, #8]
  40749a:	4629      	mov	r1, r5
  40749c:	4640      	mov	r0, r8
  40749e:	f7ff f827 	bl	4064f0 <_free_r>
  4074a2:	e01c      	b.n	4074de <_realloc_r+0xde>
  4074a4:	f027 0707 	bic.w	r7, r7, #7
  4074a8:	2f00      	cmp	r7, #0
  4074aa:	463a      	mov	r2, r7
  4074ac:	dabf      	bge.n	40742e <_realloc_r+0x2e>
  4074ae:	2600      	movs	r6, #0
  4074b0:	230c      	movs	r3, #12
  4074b2:	4630      	mov	r0, r6
  4074b4:	f8c8 3000 	str.w	r3, [r8]
  4074b8:	b003      	add	sp, #12
  4074ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4074be:	462e      	mov	r6, r5
  4074c0:	1be3      	subs	r3, r4, r7
  4074c2:	2b0f      	cmp	r3, #15
  4074c4:	d81e      	bhi.n	407504 <_realloc_r+0x104>
  4074c6:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4074ca:	f003 0301 	and.w	r3, r3, #1
  4074ce:	4323      	orrs	r3, r4
  4074d0:	444c      	add	r4, r9
  4074d2:	f8c9 3004 	str.w	r3, [r9, #4]
  4074d6:	6863      	ldr	r3, [r4, #4]
  4074d8:	f043 0301 	orr.w	r3, r3, #1
  4074dc:	6063      	str	r3, [r4, #4]
  4074de:	4640      	mov	r0, r8
  4074e0:	f7fb faba 	bl	402a58 <__malloc_unlock>
  4074e4:	4630      	mov	r0, r6
  4074e6:	b003      	add	sp, #12
  4074e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4074ec:	f023 0303 	bic.w	r3, r3, #3
  4074f0:	18e1      	adds	r1, r4, r3
  4074f2:	4291      	cmp	r1, r2
  4074f4:	db1f      	blt.n	407536 <_realloc_r+0x136>
  4074f6:	68c3      	ldr	r3, [r0, #12]
  4074f8:	6882      	ldr	r2, [r0, #8]
  4074fa:	462e      	mov	r6, r5
  4074fc:	60d3      	str	r3, [r2, #12]
  4074fe:	460c      	mov	r4, r1
  407500:	609a      	str	r2, [r3, #8]
  407502:	e7dd      	b.n	4074c0 <_realloc_r+0xc0>
  407504:	f8d9 2004 	ldr.w	r2, [r9, #4]
  407508:	eb09 0107 	add.w	r1, r9, r7
  40750c:	f002 0201 	and.w	r2, r2, #1
  407510:	444c      	add	r4, r9
  407512:	f043 0301 	orr.w	r3, r3, #1
  407516:	4317      	orrs	r7, r2
  407518:	f8c9 7004 	str.w	r7, [r9, #4]
  40751c:	604b      	str	r3, [r1, #4]
  40751e:	6863      	ldr	r3, [r4, #4]
  407520:	f043 0301 	orr.w	r3, r3, #1
  407524:	3108      	adds	r1, #8
  407526:	6063      	str	r3, [r4, #4]
  407528:	4640      	mov	r0, r8
  40752a:	f7fe ffe1 	bl	4064f0 <_free_r>
  40752e:	e7d6      	b.n	4074de <_realloc_r+0xde>
  407530:	4611      	mov	r1, r2
  407532:	f7fa bf8d 	b.w	402450 <_malloc_r>
  407536:	f01e 0f01 	tst.w	lr, #1
  40753a:	d18e      	bne.n	40745a <_realloc_r+0x5a>
  40753c:	f855 1c08 	ldr.w	r1, [r5, #-8]
  407540:	eba9 0a01 	sub.w	sl, r9, r1
  407544:	f8da 1004 	ldr.w	r1, [sl, #4]
  407548:	f021 0103 	bic.w	r1, r1, #3
  40754c:	440b      	add	r3, r1
  40754e:	4423      	add	r3, r4
  407550:	4293      	cmp	r3, r2
  407552:	db25      	blt.n	4075a0 <_realloc_r+0x1a0>
  407554:	68c2      	ldr	r2, [r0, #12]
  407556:	6881      	ldr	r1, [r0, #8]
  407558:	4656      	mov	r6, sl
  40755a:	60ca      	str	r2, [r1, #12]
  40755c:	6091      	str	r1, [r2, #8]
  40755e:	f8da 100c 	ldr.w	r1, [sl, #12]
  407562:	f856 0f08 	ldr.w	r0, [r6, #8]!
  407566:	1f22      	subs	r2, r4, #4
  407568:	2a24      	cmp	r2, #36	; 0x24
  40756a:	60c1      	str	r1, [r0, #12]
  40756c:	6088      	str	r0, [r1, #8]
  40756e:	f200 8094 	bhi.w	40769a <_realloc_r+0x29a>
  407572:	2a13      	cmp	r2, #19
  407574:	d96f      	bls.n	407656 <_realloc_r+0x256>
  407576:	6829      	ldr	r1, [r5, #0]
  407578:	f8ca 1008 	str.w	r1, [sl, #8]
  40757c:	6869      	ldr	r1, [r5, #4]
  40757e:	f8ca 100c 	str.w	r1, [sl, #12]
  407582:	2a1b      	cmp	r2, #27
  407584:	f200 80a2 	bhi.w	4076cc <_realloc_r+0x2cc>
  407588:	3508      	adds	r5, #8
  40758a:	f10a 0210 	add.w	r2, sl, #16
  40758e:	e063      	b.n	407658 <_realloc_r+0x258>
  407590:	f855 3c08 	ldr.w	r3, [r5, #-8]
  407594:	eba9 0a03 	sub.w	sl, r9, r3
  407598:	f8da 1004 	ldr.w	r1, [sl, #4]
  40759c:	f021 0103 	bic.w	r1, r1, #3
  4075a0:	1863      	adds	r3, r4, r1
  4075a2:	4293      	cmp	r3, r2
  4075a4:	f6ff af59 	blt.w	40745a <_realloc_r+0x5a>
  4075a8:	4656      	mov	r6, sl
  4075aa:	e7d8      	b.n	40755e <_realloc_r+0x15e>
  4075ac:	6841      	ldr	r1, [r0, #4]
  4075ae:	f021 0b03 	bic.w	fp, r1, #3
  4075b2:	44a3      	add	fp, r4
  4075b4:	f107 0010 	add.w	r0, r7, #16
  4075b8:	4583      	cmp	fp, r0
  4075ba:	da56      	bge.n	40766a <_realloc_r+0x26a>
  4075bc:	f01e 0f01 	tst.w	lr, #1
  4075c0:	f47f af4b 	bne.w	40745a <_realloc_r+0x5a>
  4075c4:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4075c8:	eba9 0a01 	sub.w	sl, r9, r1
  4075cc:	f8da 1004 	ldr.w	r1, [sl, #4]
  4075d0:	f021 0103 	bic.w	r1, r1, #3
  4075d4:	448b      	add	fp, r1
  4075d6:	4558      	cmp	r0, fp
  4075d8:	dce2      	bgt.n	4075a0 <_realloc_r+0x1a0>
  4075da:	4656      	mov	r6, sl
  4075dc:	f8da 100c 	ldr.w	r1, [sl, #12]
  4075e0:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4075e4:	1f22      	subs	r2, r4, #4
  4075e6:	2a24      	cmp	r2, #36	; 0x24
  4075e8:	60c1      	str	r1, [r0, #12]
  4075ea:	6088      	str	r0, [r1, #8]
  4075ec:	f200 808f 	bhi.w	40770e <_realloc_r+0x30e>
  4075f0:	2a13      	cmp	r2, #19
  4075f2:	f240 808a 	bls.w	40770a <_realloc_r+0x30a>
  4075f6:	6829      	ldr	r1, [r5, #0]
  4075f8:	f8ca 1008 	str.w	r1, [sl, #8]
  4075fc:	6869      	ldr	r1, [r5, #4]
  4075fe:	f8ca 100c 	str.w	r1, [sl, #12]
  407602:	2a1b      	cmp	r2, #27
  407604:	f200 808a 	bhi.w	40771c <_realloc_r+0x31c>
  407608:	3508      	adds	r5, #8
  40760a:	f10a 0210 	add.w	r2, sl, #16
  40760e:	6829      	ldr	r1, [r5, #0]
  407610:	6011      	str	r1, [r2, #0]
  407612:	6869      	ldr	r1, [r5, #4]
  407614:	6051      	str	r1, [r2, #4]
  407616:	68a9      	ldr	r1, [r5, #8]
  407618:	6091      	str	r1, [r2, #8]
  40761a:	eb0a 0107 	add.w	r1, sl, r7
  40761e:	ebab 0207 	sub.w	r2, fp, r7
  407622:	f042 0201 	orr.w	r2, r2, #1
  407626:	6099      	str	r1, [r3, #8]
  407628:	604a      	str	r2, [r1, #4]
  40762a:	f8da 3004 	ldr.w	r3, [sl, #4]
  40762e:	f003 0301 	and.w	r3, r3, #1
  407632:	431f      	orrs	r7, r3
  407634:	4640      	mov	r0, r8
  407636:	f8ca 7004 	str.w	r7, [sl, #4]
  40763a:	f7fb fa0d 	bl	402a58 <__malloc_unlock>
  40763e:	e751      	b.n	4074e4 <_realloc_r+0xe4>
  407640:	682b      	ldr	r3, [r5, #0]
  407642:	6003      	str	r3, [r0, #0]
  407644:	686b      	ldr	r3, [r5, #4]
  407646:	6043      	str	r3, [r0, #4]
  407648:	2a1b      	cmp	r2, #27
  40764a:	d82d      	bhi.n	4076a8 <_realloc_r+0x2a8>
  40764c:	f100 0308 	add.w	r3, r0, #8
  407650:	f105 0208 	add.w	r2, r5, #8
  407654:	e71b      	b.n	40748e <_realloc_r+0x8e>
  407656:	4632      	mov	r2, r6
  407658:	6829      	ldr	r1, [r5, #0]
  40765a:	6011      	str	r1, [r2, #0]
  40765c:	6869      	ldr	r1, [r5, #4]
  40765e:	6051      	str	r1, [r2, #4]
  407660:	68a9      	ldr	r1, [r5, #8]
  407662:	6091      	str	r1, [r2, #8]
  407664:	461c      	mov	r4, r3
  407666:	46d1      	mov	r9, sl
  407668:	e72a      	b.n	4074c0 <_realloc_r+0xc0>
  40766a:	eb09 0107 	add.w	r1, r9, r7
  40766e:	ebab 0b07 	sub.w	fp, fp, r7
  407672:	f04b 0201 	orr.w	r2, fp, #1
  407676:	6099      	str	r1, [r3, #8]
  407678:	604a      	str	r2, [r1, #4]
  40767a:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40767e:	f003 0301 	and.w	r3, r3, #1
  407682:	431f      	orrs	r7, r3
  407684:	4640      	mov	r0, r8
  407686:	f845 7c04 	str.w	r7, [r5, #-4]
  40768a:	f7fb f9e5 	bl	402a58 <__malloc_unlock>
  40768e:	462e      	mov	r6, r5
  407690:	e728      	b.n	4074e4 <_realloc_r+0xe4>
  407692:	4629      	mov	r1, r5
  407694:	f7ff fb56 	bl	406d44 <memmove>
  407698:	e6ff      	b.n	40749a <_realloc_r+0x9a>
  40769a:	4629      	mov	r1, r5
  40769c:	4630      	mov	r0, r6
  40769e:	461c      	mov	r4, r3
  4076a0:	46d1      	mov	r9, sl
  4076a2:	f7ff fb4f 	bl	406d44 <memmove>
  4076a6:	e70b      	b.n	4074c0 <_realloc_r+0xc0>
  4076a8:	68ab      	ldr	r3, [r5, #8]
  4076aa:	6083      	str	r3, [r0, #8]
  4076ac:	68eb      	ldr	r3, [r5, #12]
  4076ae:	60c3      	str	r3, [r0, #12]
  4076b0:	2a24      	cmp	r2, #36	; 0x24
  4076b2:	d017      	beq.n	4076e4 <_realloc_r+0x2e4>
  4076b4:	f100 0310 	add.w	r3, r0, #16
  4076b8:	f105 0210 	add.w	r2, r5, #16
  4076bc:	e6e7      	b.n	40748e <_realloc_r+0x8e>
  4076be:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4076c2:	f023 0303 	bic.w	r3, r3, #3
  4076c6:	441c      	add	r4, r3
  4076c8:	462e      	mov	r6, r5
  4076ca:	e6f9      	b.n	4074c0 <_realloc_r+0xc0>
  4076cc:	68a9      	ldr	r1, [r5, #8]
  4076ce:	f8ca 1010 	str.w	r1, [sl, #16]
  4076d2:	68e9      	ldr	r1, [r5, #12]
  4076d4:	f8ca 1014 	str.w	r1, [sl, #20]
  4076d8:	2a24      	cmp	r2, #36	; 0x24
  4076da:	d00c      	beq.n	4076f6 <_realloc_r+0x2f6>
  4076dc:	3510      	adds	r5, #16
  4076de:	f10a 0218 	add.w	r2, sl, #24
  4076e2:	e7b9      	b.n	407658 <_realloc_r+0x258>
  4076e4:	692b      	ldr	r3, [r5, #16]
  4076e6:	6103      	str	r3, [r0, #16]
  4076e8:	696b      	ldr	r3, [r5, #20]
  4076ea:	6143      	str	r3, [r0, #20]
  4076ec:	f105 0218 	add.w	r2, r5, #24
  4076f0:	f100 0318 	add.w	r3, r0, #24
  4076f4:	e6cb      	b.n	40748e <_realloc_r+0x8e>
  4076f6:	692a      	ldr	r2, [r5, #16]
  4076f8:	f8ca 2018 	str.w	r2, [sl, #24]
  4076fc:	696a      	ldr	r2, [r5, #20]
  4076fe:	f8ca 201c 	str.w	r2, [sl, #28]
  407702:	3518      	adds	r5, #24
  407704:	f10a 0220 	add.w	r2, sl, #32
  407708:	e7a6      	b.n	407658 <_realloc_r+0x258>
  40770a:	4632      	mov	r2, r6
  40770c:	e77f      	b.n	40760e <_realloc_r+0x20e>
  40770e:	4629      	mov	r1, r5
  407710:	4630      	mov	r0, r6
  407712:	9301      	str	r3, [sp, #4]
  407714:	f7ff fb16 	bl	406d44 <memmove>
  407718:	9b01      	ldr	r3, [sp, #4]
  40771a:	e77e      	b.n	40761a <_realloc_r+0x21a>
  40771c:	68a9      	ldr	r1, [r5, #8]
  40771e:	f8ca 1010 	str.w	r1, [sl, #16]
  407722:	68e9      	ldr	r1, [r5, #12]
  407724:	f8ca 1014 	str.w	r1, [sl, #20]
  407728:	2a24      	cmp	r2, #36	; 0x24
  40772a:	d003      	beq.n	407734 <_realloc_r+0x334>
  40772c:	3510      	adds	r5, #16
  40772e:	f10a 0218 	add.w	r2, sl, #24
  407732:	e76c      	b.n	40760e <_realloc_r+0x20e>
  407734:	692a      	ldr	r2, [r5, #16]
  407736:	f8ca 2018 	str.w	r2, [sl, #24]
  40773a:	696a      	ldr	r2, [r5, #20]
  40773c:	f8ca 201c 	str.w	r2, [sl, #28]
  407740:	3518      	adds	r5, #24
  407742:	f10a 0220 	add.w	r2, sl, #32
  407746:	e762      	b.n	40760e <_realloc_r+0x20e>
  407748:	20400440 	.word	0x20400440

0040774c <__sread>:
  40774c:	b510      	push	{r4, lr}
  40774e:	460c      	mov	r4, r1
  407750:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  407754:	f000 faa4 	bl	407ca0 <_read_r>
  407758:	2800      	cmp	r0, #0
  40775a:	db03      	blt.n	407764 <__sread+0x18>
  40775c:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40775e:	4403      	add	r3, r0
  407760:	6523      	str	r3, [r4, #80]	; 0x50
  407762:	bd10      	pop	{r4, pc}
  407764:	89a3      	ldrh	r3, [r4, #12]
  407766:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40776a:	81a3      	strh	r3, [r4, #12]
  40776c:	bd10      	pop	{r4, pc}
  40776e:	bf00      	nop

00407770 <__swrite>:
  407770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407774:	4616      	mov	r6, r2
  407776:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40777a:	461f      	mov	r7, r3
  40777c:	05d3      	lsls	r3, r2, #23
  40777e:	460c      	mov	r4, r1
  407780:	4605      	mov	r5, r0
  407782:	d507      	bpl.n	407794 <__swrite+0x24>
  407784:	2200      	movs	r2, #0
  407786:	2302      	movs	r3, #2
  407788:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40778c:	f000 fa72 	bl	407c74 <_lseek_r>
  407790:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  407794:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  407798:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  40779c:	81a2      	strh	r2, [r4, #12]
  40779e:	463b      	mov	r3, r7
  4077a0:	4632      	mov	r2, r6
  4077a2:	4628      	mov	r0, r5
  4077a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4077a8:	f000 b922 	b.w	4079f0 <_write_r>

004077ac <__sseek>:
  4077ac:	b510      	push	{r4, lr}
  4077ae:	460c      	mov	r4, r1
  4077b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4077b4:	f000 fa5e 	bl	407c74 <_lseek_r>
  4077b8:	89a3      	ldrh	r3, [r4, #12]
  4077ba:	1c42      	adds	r2, r0, #1
  4077bc:	bf0e      	itee	eq
  4077be:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  4077c2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  4077c6:	6520      	strne	r0, [r4, #80]	; 0x50
  4077c8:	81a3      	strh	r3, [r4, #12]
  4077ca:	bd10      	pop	{r4, pc}

004077cc <__sclose>:
  4077cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4077d0:	f000 b9b6 	b.w	407b40 <_close_r>

004077d4 <__ssprint_r>:
  4077d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4077d8:	6893      	ldr	r3, [r2, #8]
  4077da:	b083      	sub	sp, #12
  4077dc:	4690      	mov	r8, r2
  4077de:	2b00      	cmp	r3, #0
  4077e0:	d070      	beq.n	4078c4 <__ssprint_r+0xf0>
  4077e2:	4682      	mov	sl, r0
  4077e4:	460c      	mov	r4, r1
  4077e6:	6817      	ldr	r7, [r2, #0]
  4077e8:	688d      	ldr	r5, [r1, #8]
  4077ea:	6808      	ldr	r0, [r1, #0]
  4077ec:	e042      	b.n	407874 <__ssprint_r+0xa0>
  4077ee:	89a3      	ldrh	r3, [r4, #12]
  4077f0:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4077f4:	d02e      	beq.n	407854 <__ssprint_r+0x80>
  4077f6:	6965      	ldr	r5, [r4, #20]
  4077f8:	6921      	ldr	r1, [r4, #16]
  4077fa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  4077fe:	eba0 0b01 	sub.w	fp, r0, r1
  407802:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  407806:	f10b 0001 	add.w	r0, fp, #1
  40780a:	106d      	asrs	r5, r5, #1
  40780c:	4430      	add	r0, r6
  40780e:	42a8      	cmp	r0, r5
  407810:	462a      	mov	r2, r5
  407812:	bf84      	itt	hi
  407814:	4605      	movhi	r5, r0
  407816:	462a      	movhi	r2, r5
  407818:	055b      	lsls	r3, r3, #21
  40781a:	d538      	bpl.n	40788e <__ssprint_r+0xba>
  40781c:	4611      	mov	r1, r2
  40781e:	4650      	mov	r0, sl
  407820:	f7fa fe16 	bl	402450 <_malloc_r>
  407824:	2800      	cmp	r0, #0
  407826:	d03c      	beq.n	4078a2 <__ssprint_r+0xce>
  407828:	465a      	mov	r2, fp
  40782a:	6921      	ldr	r1, [r4, #16]
  40782c:	9001      	str	r0, [sp, #4]
  40782e:	f7ff f9ef 	bl	406c10 <memcpy>
  407832:	89a2      	ldrh	r2, [r4, #12]
  407834:	9b01      	ldr	r3, [sp, #4]
  407836:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  40783a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40783e:	81a2      	strh	r2, [r4, #12]
  407840:	eba5 020b 	sub.w	r2, r5, fp
  407844:	eb03 000b 	add.w	r0, r3, fp
  407848:	6165      	str	r5, [r4, #20]
  40784a:	6123      	str	r3, [r4, #16]
  40784c:	6020      	str	r0, [r4, #0]
  40784e:	60a2      	str	r2, [r4, #8]
  407850:	4635      	mov	r5, r6
  407852:	46b3      	mov	fp, r6
  407854:	465a      	mov	r2, fp
  407856:	4649      	mov	r1, r9
  407858:	f7ff fa74 	bl	406d44 <memmove>
  40785c:	f8d8 3008 	ldr.w	r3, [r8, #8]
  407860:	68a2      	ldr	r2, [r4, #8]
  407862:	6820      	ldr	r0, [r4, #0]
  407864:	1b55      	subs	r5, r2, r5
  407866:	4458      	add	r0, fp
  407868:	1b9e      	subs	r6, r3, r6
  40786a:	60a5      	str	r5, [r4, #8]
  40786c:	6020      	str	r0, [r4, #0]
  40786e:	f8c8 6008 	str.w	r6, [r8, #8]
  407872:	b33e      	cbz	r6, 4078c4 <__ssprint_r+0xf0>
  407874:	687e      	ldr	r6, [r7, #4]
  407876:	463b      	mov	r3, r7
  407878:	3708      	adds	r7, #8
  40787a:	2e00      	cmp	r6, #0
  40787c:	d0fa      	beq.n	407874 <__ssprint_r+0xa0>
  40787e:	42ae      	cmp	r6, r5
  407880:	f8d3 9000 	ldr.w	r9, [r3]
  407884:	46ab      	mov	fp, r5
  407886:	d2b2      	bcs.n	4077ee <__ssprint_r+0x1a>
  407888:	4635      	mov	r5, r6
  40788a:	46b3      	mov	fp, r6
  40788c:	e7e2      	b.n	407854 <__ssprint_r+0x80>
  40788e:	4650      	mov	r0, sl
  407890:	f7ff fdb6 	bl	407400 <_realloc_r>
  407894:	4603      	mov	r3, r0
  407896:	2800      	cmp	r0, #0
  407898:	d1d2      	bne.n	407840 <__ssprint_r+0x6c>
  40789a:	6921      	ldr	r1, [r4, #16]
  40789c:	4650      	mov	r0, sl
  40789e:	f7fe fe27 	bl	4064f0 <_free_r>
  4078a2:	230c      	movs	r3, #12
  4078a4:	f8ca 3000 	str.w	r3, [sl]
  4078a8:	89a3      	ldrh	r3, [r4, #12]
  4078aa:	2200      	movs	r2, #0
  4078ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4078b0:	f04f 30ff 	mov.w	r0, #4294967295
  4078b4:	81a3      	strh	r3, [r4, #12]
  4078b6:	f8c8 2008 	str.w	r2, [r8, #8]
  4078ba:	f8c8 2004 	str.w	r2, [r8, #4]
  4078be:	b003      	add	sp, #12
  4078c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4078c4:	2000      	movs	r0, #0
  4078c6:	f8c8 0004 	str.w	r0, [r8, #4]
  4078ca:	b003      	add	sp, #12
  4078cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004078d0 <__swbuf_r>:
  4078d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4078d2:	460d      	mov	r5, r1
  4078d4:	4614      	mov	r4, r2
  4078d6:	4606      	mov	r6, r0
  4078d8:	b110      	cbz	r0, 4078e0 <__swbuf_r+0x10>
  4078da:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4078dc:	2b00      	cmp	r3, #0
  4078de:	d04b      	beq.n	407978 <__swbuf_r+0xa8>
  4078e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4078e4:	69a3      	ldr	r3, [r4, #24]
  4078e6:	60a3      	str	r3, [r4, #8]
  4078e8:	b291      	uxth	r1, r2
  4078ea:	0708      	lsls	r0, r1, #28
  4078ec:	d539      	bpl.n	407962 <__swbuf_r+0x92>
  4078ee:	6923      	ldr	r3, [r4, #16]
  4078f0:	2b00      	cmp	r3, #0
  4078f2:	d036      	beq.n	407962 <__swbuf_r+0x92>
  4078f4:	b2ed      	uxtb	r5, r5
  4078f6:	0489      	lsls	r1, r1, #18
  4078f8:	462f      	mov	r7, r5
  4078fa:	d515      	bpl.n	407928 <__swbuf_r+0x58>
  4078fc:	6822      	ldr	r2, [r4, #0]
  4078fe:	6961      	ldr	r1, [r4, #20]
  407900:	1ad3      	subs	r3, r2, r3
  407902:	428b      	cmp	r3, r1
  407904:	da1c      	bge.n	407940 <__swbuf_r+0x70>
  407906:	3301      	adds	r3, #1
  407908:	68a1      	ldr	r1, [r4, #8]
  40790a:	1c50      	adds	r0, r2, #1
  40790c:	3901      	subs	r1, #1
  40790e:	60a1      	str	r1, [r4, #8]
  407910:	6020      	str	r0, [r4, #0]
  407912:	7015      	strb	r5, [r2, #0]
  407914:	6962      	ldr	r2, [r4, #20]
  407916:	429a      	cmp	r2, r3
  407918:	d01a      	beq.n	407950 <__swbuf_r+0x80>
  40791a:	89a3      	ldrh	r3, [r4, #12]
  40791c:	07db      	lsls	r3, r3, #31
  40791e:	d501      	bpl.n	407924 <__swbuf_r+0x54>
  407920:	2d0a      	cmp	r5, #10
  407922:	d015      	beq.n	407950 <__swbuf_r+0x80>
  407924:	4638      	mov	r0, r7
  407926:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407928:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40792a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40792e:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  407932:	81a2      	strh	r2, [r4, #12]
  407934:	6822      	ldr	r2, [r4, #0]
  407936:	6661      	str	r1, [r4, #100]	; 0x64
  407938:	6961      	ldr	r1, [r4, #20]
  40793a:	1ad3      	subs	r3, r2, r3
  40793c:	428b      	cmp	r3, r1
  40793e:	dbe2      	blt.n	407906 <__swbuf_r+0x36>
  407940:	4621      	mov	r1, r4
  407942:	4630      	mov	r0, r6
  407944:	f7fe fc56 	bl	4061f4 <_fflush_r>
  407948:	b940      	cbnz	r0, 40795c <__swbuf_r+0x8c>
  40794a:	6822      	ldr	r2, [r4, #0]
  40794c:	2301      	movs	r3, #1
  40794e:	e7db      	b.n	407908 <__swbuf_r+0x38>
  407950:	4621      	mov	r1, r4
  407952:	4630      	mov	r0, r6
  407954:	f7fe fc4e 	bl	4061f4 <_fflush_r>
  407958:	2800      	cmp	r0, #0
  40795a:	d0e3      	beq.n	407924 <__swbuf_r+0x54>
  40795c:	f04f 37ff 	mov.w	r7, #4294967295
  407960:	e7e0      	b.n	407924 <__swbuf_r+0x54>
  407962:	4621      	mov	r1, r4
  407964:	4630      	mov	r0, r6
  407966:	f7fd fb71 	bl	40504c <__swsetup_r>
  40796a:	2800      	cmp	r0, #0
  40796c:	d1f6      	bne.n	40795c <__swbuf_r+0x8c>
  40796e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  407972:	6923      	ldr	r3, [r4, #16]
  407974:	b291      	uxth	r1, r2
  407976:	e7bd      	b.n	4078f4 <__swbuf_r+0x24>
  407978:	f7fe fc94 	bl	4062a4 <__sinit>
  40797c:	e7b0      	b.n	4078e0 <__swbuf_r+0x10>
  40797e:	bf00      	nop

00407980 <_wcrtomb_r>:
  407980:	b5f0      	push	{r4, r5, r6, r7, lr}
  407982:	4606      	mov	r6, r0
  407984:	b085      	sub	sp, #20
  407986:	461f      	mov	r7, r3
  407988:	b189      	cbz	r1, 4079ae <_wcrtomb_r+0x2e>
  40798a:	4c10      	ldr	r4, [pc, #64]	; (4079cc <_wcrtomb_r+0x4c>)
  40798c:	4d10      	ldr	r5, [pc, #64]	; (4079d0 <_wcrtomb_r+0x50>)
  40798e:	6824      	ldr	r4, [r4, #0]
  407990:	6b64      	ldr	r4, [r4, #52]	; 0x34
  407992:	2c00      	cmp	r4, #0
  407994:	bf08      	it	eq
  407996:	462c      	moveq	r4, r5
  407998:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  40799c:	47a0      	blx	r4
  40799e:	1c43      	adds	r3, r0, #1
  4079a0:	d103      	bne.n	4079aa <_wcrtomb_r+0x2a>
  4079a2:	2200      	movs	r2, #0
  4079a4:	238a      	movs	r3, #138	; 0x8a
  4079a6:	603a      	str	r2, [r7, #0]
  4079a8:	6033      	str	r3, [r6, #0]
  4079aa:	b005      	add	sp, #20
  4079ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4079ae:	460c      	mov	r4, r1
  4079b0:	4906      	ldr	r1, [pc, #24]	; (4079cc <_wcrtomb_r+0x4c>)
  4079b2:	4a07      	ldr	r2, [pc, #28]	; (4079d0 <_wcrtomb_r+0x50>)
  4079b4:	6809      	ldr	r1, [r1, #0]
  4079b6:	6b49      	ldr	r1, [r1, #52]	; 0x34
  4079b8:	2900      	cmp	r1, #0
  4079ba:	bf08      	it	eq
  4079bc:	4611      	moveq	r1, r2
  4079be:	4622      	mov	r2, r4
  4079c0:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  4079c4:	a901      	add	r1, sp, #4
  4079c6:	47a0      	blx	r4
  4079c8:	e7e9      	b.n	40799e <_wcrtomb_r+0x1e>
  4079ca:	bf00      	nop
  4079cc:	20400014 	.word	0x20400014
  4079d0:	20400854 	.word	0x20400854

004079d4 <__ascii_wctomb>:
  4079d4:	b121      	cbz	r1, 4079e0 <__ascii_wctomb+0xc>
  4079d6:	2aff      	cmp	r2, #255	; 0xff
  4079d8:	d804      	bhi.n	4079e4 <__ascii_wctomb+0x10>
  4079da:	700a      	strb	r2, [r1, #0]
  4079dc:	2001      	movs	r0, #1
  4079de:	4770      	bx	lr
  4079e0:	4608      	mov	r0, r1
  4079e2:	4770      	bx	lr
  4079e4:	238a      	movs	r3, #138	; 0x8a
  4079e6:	6003      	str	r3, [r0, #0]
  4079e8:	f04f 30ff 	mov.w	r0, #4294967295
  4079ec:	4770      	bx	lr
  4079ee:	bf00      	nop

004079f0 <_write_r>:
  4079f0:	b570      	push	{r4, r5, r6, lr}
  4079f2:	460d      	mov	r5, r1
  4079f4:	4c08      	ldr	r4, [pc, #32]	; (407a18 <_write_r+0x28>)
  4079f6:	4611      	mov	r1, r2
  4079f8:	4606      	mov	r6, r0
  4079fa:	461a      	mov	r2, r3
  4079fc:	4628      	mov	r0, r5
  4079fe:	2300      	movs	r3, #0
  407a00:	6023      	str	r3, [r4, #0]
  407a02:	f7f8 ffaf 	bl	400964 <_write>
  407a06:	1c43      	adds	r3, r0, #1
  407a08:	d000      	beq.n	407a0c <_write_r+0x1c>
  407a0a:	bd70      	pop	{r4, r5, r6, pc}
  407a0c:	6823      	ldr	r3, [r4, #0]
  407a0e:	2b00      	cmp	r3, #0
  407a10:	d0fb      	beq.n	407a0a <_write_r+0x1a>
  407a12:	6033      	str	r3, [r6, #0]
  407a14:	bd70      	pop	{r4, r5, r6, pc}
  407a16:	bf00      	nop
  407a18:	20400e88 	.word	0x20400e88

00407a1c <__register_exitproc>:
  407a1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  407a20:	4d2c      	ldr	r5, [pc, #176]	; (407ad4 <__register_exitproc+0xb8>)
  407a22:	4606      	mov	r6, r0
  407a24:	6828      	ldr	r0, [r5, #0]
  407a26:	4698      	mov	r8, r3
  407a28:	460f      	mov	r7, r1
  407a2a:	4691      	mov	r9, r2
  407a2c:	f7ff f808 	bl	406a40 <__retarget_lock_acquire_recursive>
  407a30:	4b29      	ldr	r3, [pc, #164]	; (407ad8 <__register_exitproc+0xbc>)
  407a32:	681c      	ldr	r4, [r3, #0]
  407a34:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  407a38:	2b00      	cmp	r3, #0
  407a3a:	d03e      	beq.n	407aba <__register_exitproc+0x9e>
  407a3c:	685a      	ldr	r2, [r3, #4]
  407a3e:	2a1f      	cmp	r2, #31
  407a40:	dc1c      	bgt.n	407a7c <__register_exitproc+0x60>
  407a42:	f102 0e01 	add.w	lr, r2, #1
  407a46:	b176      	cbz	r6, 407a66 <__register_exitproc+0x4a>
  407a48:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  407a4c:	2401      	movs	r4, #1
  407a4e:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  407a52:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  407a56:	4094      	lsls	r4, r2
  407a58:	4320      	orrs	r0, r4
  407a5a:	2e02      	cmp	r6, #2
  407a5c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  407a60:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  407a64:	d023      	beq.n	407aae <__register_exitproc+0x92>
  407a66:	3202      	adds	r2, #2
  407a68:	f8c3 e004 	str.w	lr, [r3, #4]
  407a6c:	6828      	ldr	r0, [r5, #0]
  407a6e:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  407a72:	f7fe ffe7 	bl	406a44 <__retarget_lock_release_recursive>
  407a76:	2000      	movs	r0, #0
  407a78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407a7c:	4b17      	ldr	r3, [pc, #92]	; (407adc <__register_exitproc+0xc0>)
  407a7e:	b30b      	cbz	r3, 407ac4 <__register_exitproc+0xa8>
  407a80:	f44f 70c8 	mov.w	r0, #400	; 0x190
  407a84:	f7fa fcdc 	bl	402440 <malloc>
  407a88:	4603      	mov	r3, r0
  407a8a:	b1d8      	cbz	r0, 407ac4 <__register_exitproc+0xa8>
  407a8c:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  407a90:	6002      	str	r2, [r0, #0]
  407a92:	2100      	movs	r1, #0
  407a94:	6041      	str	r1, [r0, #4]
  407a96:	460a      	mov	r2, r1
  407a98:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  407a9c:	f04f 0e01 	mov.w	lr, #1
  407aa0:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  407aa4:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  407aa8:	2e00      	cmp	r6, #0
  407aaa:	d0dc      	beq.n	407a66 <__register_exitproc+0x4a>
  407aac:	e7cc      	b.n	407a48 <__register_exitproc+0x2c>
  407aae:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  407ab2:	430c      	orrs	r4, r1
  407ab4:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  407ab8:	e7d5      	b.n	407a66 <__register_exitproc+0x4a>
  407aba:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  407abe:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  407ac2:	e7bb      	b.n	407a3c <__register_exitproc+0x20>
  407ac4:	6828      	ldr	r0, [r5, #0]
  407ac6:	f7fe ffbd 	bl	406a44 <__retarget_lock_release_recursive>
  407aca:	f04f 30ff 	mov.w	r0, #4294967295
  407ace:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407ad2:	bf00      	nop
  407ad4:	20400850 	.word	0x20400850
  407ad8:	004089b8 	.word	0x004089b8
  407adc:	00402441 	.word	0x00402441

00407ae0 <_calloc_r>:
  407ae0:	b510      	push	{r4, lr}
  407ae2:	fb02 f101 	mul.w	r1, r2, r1
  407ae6:	f7fa fcb3 	bl	402450 <_malloc_r>
  407aea:	4604      	mov	r4, r0
  407aec:	b1d8      	cbz	r0, 407b26 <_calloc_r+0x46>
  407aee:	f850 2c04 	ldr.w	r2, [r0, #-4]
  407af2:	f022 0203 	bic.w	r2, r2, #3
  407af6:	3a04      	subs	r2, #4
  407af8:	2a24      	cmp	r2, #36	; 0x24
  407afa:	d818      	bhi.n	407b2e <_calloc_r+0x4e>
  407afc:	2a13      	cmp	r2, #19
  407afe:	d914      	bls.n	407b2a <_calloc_r+0x4a>
  407b00:	2300      	movs	r3, #0
  407b02:	2a1b      	cmp	r2, #27
  407b04:	6003      	str	r3, [r0, #0]
  407b06:	6043      	str	r3, [r0, #4]
  407b08:	d916      	bls.n	407b38 <_calloc_r+0x58>
  407b0a:	2a24      	cmp	r2, #36	; 0x24
  407b0c:	6083      	str	r3, [r0, #8]
  407b0e:	60c3      	str	r3, [r0, #12]
  407b10:	bf11      	iteee	ne
  407b12:	f100 0210 	addne.w	r2, r0, #16
  407b16:	6103      	streq	r3, [r0, #16]
  407b18:	6143      	streq	r3, [r0, #20]
  407b1a:	f100 0218 	addeq.w	r2, r0, #24
  407b1e:	2300      	movs	r3, #0
  407b20:	6013      	str	r3, [r2, #0]
  407b22:	6053      	str	r3, [r2, #4]
  407b24:	6093      	str	r3, [r2, #8]
  407b26:	4620      	mov	r0, r4
  407b28:	bd10      	pop	{r4, pc}
  407b2a:	4602      	mov	r2, r0
  407b2c:	e7f7      	b.n	407b1e <_calloc_r+0x3e>
  407b2e:	2100      	movs	r1, #0
  407b30:	f7fa ff3e 	bl	4029b0 <memset>
  407b34:	4620      	mov	r0, r4
  407b36:	bd10      	pop	{r4, pc}
  407b38:	f100 0208 	add.w	r2, r0, #8
  407b3c:	e7ef      	b.n	407b1e <_calloc_r+0x3e>
  407b3e:	bf00      	nop

00407b40 <_close_r>:
  407b40:	b538      	push	{r3, r4, r5, lr}
  407b42:	4c07      	ldr	r4, [pc, #28]	; (407b60 <_close_r+0x20>)
  407b44:	2300      	movs	r3, #0
  407b46:	4605      	mov	r5, r0
  407b48:	4608      	mov	r0, r1
  407b4a:	6023      	str	r3, [r4, #0]
  407b4c:	f7fa f95a 	bl	401e04 <_close>
  407b50:	1c43      	adds	r3, r0, #1
  407b52:	d000      	beq.n	407b56 <_close_r+0x16>
  407b54:	bd38      	pop	{r3, r4, r5, pc}
  407b56:	6823      	ldr	r3, [r4, #0]
  407b58:	2b00      	cmp	r3, #0
  407b5a:	d0fb      	beq.n	407b54 <_close_r+0x14>
  407b5c:	602b      	str	r3, [r5, #0]
  407b5e:	bd38      	pop	{r3, r4, r5, pc}
  407b60:	20400e88 	.word	0x20400e88

00407b64 <_fclose_r>:
  407b64:	b570      	push	{r4, r5, r6, lr}
  407b66:	b159      	cbz	r1, 407b80 <_fclose_r+0x1c>
  407b68:	4605      	mov	r5, r0
  407b6a:	460c      	mov	r4, r1
  407b6c:	b110      	cbz	r0, 407b74 <_fclose_r+0x10>
  407b6e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  407b70:	2b00      	cmp	r3, #0
  407b72:	d03c      	beq.n	407bee <_fclose_r+0x8a>
  407b74:	6e63      	ldr	r3, [r4, #100]	; 0x64
  407b76:	07d8      	lsls	r0, r3, #31
  407b78:	d505      	bpl.n	407b86 <_fclose_r+0x22>
  407b7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  407b7e:	b92b      	cbnz	r3, 407b8c <_fclose_r+0x28>
  407b80:	2600      	movs	r6, #0
  407b82:	4630      	mov	r0, r6
  407b84:	bd70      	pop	{r4, r5, r6, pc}
  407b86:	89a3      	ldrh	r3, [r4, #12]
  407b88:	0599      	lsls	r1, r3, #22
  407b8a:	d53c      	bpl.n	407c06 <_fclose_r+0xa2>
  407b8c:	4621      	mov	r1, r4
  407b8e:	4628      	mov	r0, r5
  407b90:	f7fe fa90 	bl	4060b4 <__sflush_r>
  407b94:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  407b96:	4606      	mov	r6, r0
  407b98:	b133      	cbz	r3, 407ba8 <_fclose_r+0x44>
  407b9a:	69e1      	ldr	r1, [r4, #28]
  407b9c:	4628      	mov	r0, r5
  407b9e:	4798      	blx	r3
  407ba0:	2800      	cmp	r0, #0
  407ba2:	bfb8      	it	lt
  407ba4:	f04f 36ff 	movlt.w	r6, #4294967295
  407ba8:	89a3      	ldrh	r3, [r4, #12]
  407baa:	061a      	lsls	r2, r3, #24
  407bac:	d422      	bmi.n	407bf4 <_fclose_r+0x90>
  407bae:	6b21      	ldr	r1, [r4, #48]	; 0x30
  407bb0:	b141      	cbz	r1, 407bc4 <_fclose_r+0x60>
  407bb2:	f104 0340 	add.w	r3, r4, #64	; 0x40
  407bb6:	4299      	cmp	r1, r3
  407bb8:	d002      	beq.n	407bc0 <_fclose_r+0x5c>
  407bba:	4628      	mov	r0, r5
  407bbc:	f7fe fc98 	bl	4064f0 <_free_r>
  407bc0:	2300      	movs	r3, #0
  407bc2:	6323      	str	r3, [r4, #48]	; 0x30
  407bc4:	6c61      	ldr	r1, [r4, #68]	; 0x44
  407bc6:	b121      	cbz	r1, 407bd2 <_fclose_r+0x6e>
  407bc8:	4628      	mov	r0, r5
  407bca:	f7fe fc91 	bl	4064f0 <_free_r>
  407bce:	2300      	movs	r3, #0
  407bd0:	6463      	str	r3, [r4, #68]	; 0x44
  407bd2:	f7fe fb93 	bl	4062fc <__sfp_lock_acquire>
  407bd6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  407bd8:	2200      	movs	r2, #0
  407bda:	07db      	lsls	r3, r3, #31
  407bdc:	81a2      	strh	r2, [r4, #12]
  407bde:	d50e      	bpl.n	407bfe <_fclose_r+0x9a>
  407be0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  407be2:	f7fe ff2b 	bl	406a3c <__retarget_lock_close_recursive>
  407be6:	f7fe fb8f 	bl	406308 <__sfp_lock_release>
  407bea:	4630      	mov	r0, r6
  407bec:	bd70      	pop	{r4, r5, r6, pc}
  407bee:	f7fe fb59 	bl	4062a4 <__sinit>
  407bf2:	e7bf      	b.n	407b74 <_fclose_r+0x10>
  407bf4:	6921      	ldr	r1, [r4, #16]
  407bf6:	4628      	mov	r0, r5
  407bf8:	f7fe fc7a 	bl	4064f0 <_free_r>
  407bfc:	e7d7      	b.n	407bae <_fclose_r+0x4a>
  407bfe:	6da0      	ldr	r0, [r4, #88]	; 0x58
  407c00:	f7fe ff20 	bl	406a44 <__retarget_lock_release_recursive>
  407c04:	e7ec      	b.n	407be0 <_fclose_r+0x7c>
  407c06:	6da0      	ldr	r0, [r4, #88]	; 0x58
  407c08:	f7fe ff1a 	bl	406a40 <__retarget_lock_acquire_recursive>
  407c0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  407c10:	2b00      	cmp	r3, #0
  407c12:	d1bb      	bne.n	407b8c <_fclose_r+0x28>
  407c14:	6e66      	ldr	r6, [r4, #100]	; 0x64
  407c16:	f016 0601 	ands.w	r6, r6, #1
  407c1a:	d1b1      	bne.n	407b80 <_fclose_r+0x1c>
  407c1c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  407c1e:	f7fe ff11 	bl	406a44 <__retarget_lock_release_recursive>
  407c22:	4630      	mov	r0, r6
  407c24:	bd70      	pop	{r4, r5, r6, pc}
  407c26:	bf00      	nop

00407c28 <_fstat_r>:
  407c28:	b538      	push	{r3, r4, r5, lr}
  407c2a:	460b      	mov	r3, r1
  407c2c:	4c07      	ldr	r4, [pc, #28]	; (407c4c <_fstat_r+0x24>)
  407c2e:	4605      	mov	r5, r0
  407c30:	4611      	mov	r1, r2
  407c32:	4618      	mov	r0, r3
  407c34:	2300      	movs	r3, #0
  407c36:	6023      	str	r3, [r4, #0]
  407c38:	f7fa f8e7 	bl	401e0a <_fstat>
  407c3c:	1c43      	adds	r3, r0, #1
  407c3e:	d000      	beq.n	407c42 <_fstat_r+0x1a>
  407c40:	bd38      	pop	{r3, r4, r5, pc}
  407c42:	6823      	ldr	r3, [r4, #0]
  407c44:	2b00      	cmp	r3, #0
  407c46:	d0fb      	beq.n	407c40 <_fstat_r+0x18>
  407c48:	602b      	str	r3, [r5, #0]
  407c4a:	bd38      	pop	{r3, r4, r5, pc}
  407c4c:	20400e88 	.word	0x20400e88

00407c50 <_isatty_r>:
  407c50:	b538      	push	{r3, r4, r5, lr}
  407c52:	4c07      	ldr	r4, [pc, #28]	; (407c70 <_isatty_r+0x20>)
  407c54:	2300      	movs	r3, #0
  407c56:	4605      	mov	r5, r0
  407c58:	4608      	mov	r0, r1
  407c5a:	6023      	str	r3, [r4, #0]
  407c5c:	f7fa f8da 	bl	401e14 <_isatty>
  407c60:	1c43      	adds	r3, r0, #1
  407c62:	d000      	beq.n	407c66 <_isatty_r+0x16>
  407c64:	bd38      	pop	{r3, r4, r5, pc}
  407c66:	6823      	ldr	r3, [r4, #0]
  407c68:	2b00      	cmp	r3, #0
  407c6a:	d0fb      	beq.n	407c64 <_isatty_r+0x14>
  407c6c:	602b      	str	r3, [r5, #0]
  407c6e:	bd38      	pop	{r3, r4, r5, pc}
  407c70:	20400e88 	.word	0x20400e88

00407c74 <_lseek_r>:
  407c74:	b570      	push	{r4, r5, r6, lr}
  407c76:	460d      	mov	r5, r1
  407c78:	4c08      	ldr	r4, [pc, #32]	; (407c9c <_lseek_r+0x28>)
  407c7a:	4611      	mov	r1, r2
  407c7c:	4606      	mov	r6, r0
  407c7e:	461a      	mov	r2, r3
  407c80:	4628      	mov	r0, r5
  407c82:	2300      	movs	r3, #0
  407c84:	6023      	str	r3, [r4, #0]
  407c86:	f7fa f8c7 	bl	401e18 <_lseek>
  407c8a:	1c43      	adds	r3, r0, #1
  407c8c:	d000      	beq.n	407c90 <_lseek_r+0x1c>
  407c8e:	bd70      	pop	{r4, r5, r6, pc}
  407c90:	6823      	ldr	r3, [r4, #0]
  407c92:	2b00      	cmp	r3, #0
  407c94:	d0fb      	beq.n	407c8e <_lseek_r+0x1a>
  407c96:	6033      	str	r3, [r6, #0]
  407c98:	bd70      	pop	{r4, r5, r6, pc}
  407c9a:	bf00      	nop
  407c9c:	20400e88 	.word	0x20400e88

00407ca0 <_read_r>:
  407ca0:	b570      	push	{r4, r5, r6, lr}
  407ca2:	460d      	mov	r5, r1
  407ca4:	4c08      	ldr	r4, [pc, #32]	; (407cc8 <_read_r+0x28>)
  407ca6:	4611      	mov	r1, r2
  407ca8:	4606      	mov	r6, r0
  407caa:	461a      	mov	r2, r3
  407cac:	4628      	mov	r0, r5
  407cae:	2300      	movs	r3, #0
  407cb0:	6023      	str	r3, [r4, #0]
  407cb2:	f7f8 fe39 	bl	400928 <_read>
  407cb6:	1c43      	adds	r3, r0, #1
  407cb8:	d000      	beq.n	407cbc <_read_r+0x1c>
  407cba:	bd70      	pop	{r4, r5, r6, pc}
  407cbc:	6823      	ldr	r3, [r4, #0]
  407cbe:	2b00      	cmp	r3, #0
  407cc0:	d0fb      	beq.n	407cba <_read_r+0x1a>
  407cc2:	6033      	str	r3, [r6, #0]
  407cc4:	bd70      	pop	{r4, r5, r6, pc}
  407cc6:	bf00      	nop
  407cc8:	20400e88 	.word	0x20400e88

00407ccc <__aeabi_drsub>:
  407ccc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  407cd0:	e002      	b.n	407cd8 <__adddf3>
  407cd2:	bf00      	nop

00407cd4 <__aeabi_dsub>:
  407cd4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00407cd8 <__adddf3>:
  407cd8:	b530      	push	{r4, r5, lr}
  407cda:	ea4f 0441 	mov.w	r4, r1, lsl #1
  407cde:	ea4f 0543 	mov.w	r5, r3, lsl #1
  407ce2:	ea94 0f05 	teq	r4, r5
  407ce6:	bf08      	it	eq
  407ce8:	ea90 0f02 	teqeq	r0, r2
  407cec:	bf1f      	itttt	ne
  407cee:	ea54 0c00 	orrsne.w	ip, r4, r0
  407cf2:	ea55 0c02 	orrsne.w	ip, r5, r2
  407cf6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  407cfa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407cfe:	f000 80e2 	beq.w	407ec6 <__adddf3+0x1ee>
  407d02:	ea4f 5454 	mov.w	r4, r4, lsr #21
  407d06:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  407d0a:	bfb8      	it	lt
  407d0c:	426d      	neglt	r5, r5
  407d0e:	dd0c      	ble.n	407d2a <__adddf3+0x52>
  407d10:	442c      	add	r4, r5
  407d12:	ea80 0202 	eor.w	r2, r0, r2
  407d16:	ea81 0303 	eor.w	r3, r1, r3
  407d1a:	ea82 0000 	eor.w	r0, r2, r0
  407d1e:	ea83 0101 	eor.w	r1, r3, r1
  407d22:	ea80 0202 	eor.w	r2, r0, r2
  407d26:	ea81 0303 	eor.w	r3, r1, r3
  407d2a:	2d36      	cmp	r5, #54	; 0x36
  407d2c:	bf88      	it	hi
  407d2e:	bd30      	pophi	{r4, r5, pc}
  407d30:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407d34:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407d38:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  407d3c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  407d40:	d002      	beq.n	407d48 <__adddf3+0x70>
  407d42:	4240      	negs	r0, r0
  407d44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407d48:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  407d4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407d50:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  407d54:	d002      	beq.n	407d5c <__adddf3+0x84>
  407d56:	4252      	negs	r2, r2
  407d58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  407d5c:	ea94 0f05 	teq	r4, r5
  407d60:	f000 80a7 	beq.w	407eb2 <__adddf3+0x1da>
  407d64:	f1a4 0401 	sub.w	r4, r4, #1
  407d68:	f1d5 0e20 	rsbs	lr, r5, #32
  407d6c:	db0d      	blt.n	407d8a <__adddf3+0xb2>
  407d6e:	fa02 fc0e 	lsl.w	ip, r2, lr
  407d72:	fa22 f205 	lsr.w	r2, r2, r5
  407d76:	1880      	adds	r0, r0, r2
  407d78:	f141 0100 	adc.w	r1, r1, #0
  407d7c:	fa03 f20e 	lsl.w	r2, r3, lr
  407d80:	1880      	adds	r0, r0, r2
  407d82:	fa43 f305 	asr.w	r3, r3, r5
  407d86:	4159      	adcs	r1, r3
  407d88:	e00e      	b.n	407da8 <__adddf3+0xd0>
  407d8a:	f1a5 0520 	sub.w	r5, r5, #32
  407d8e:	f10e 0e20 	add.w	lr, lr, #32
  407d92:	2a01      	cmp	r2, #1
  407d94:	fa03 fc0e 	lsl.w	ip, r3, lr
  407d98:	bf28      	it	cs
  407d9a:	f04c 0c02 	orrcs.w	ip, ip, #2
  407d9e:	fa43 f305 	asr.w	r3, r3, r5
  407da2:	18c0      	adds	r0, r0, r3
  407da4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  407da8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407dac:	d507      	bpl.n	407dbe <__adddf3+0xe6>
  407dae:	f04f 0e00 	mov.w	lr, #0
  407db2:	f1dc 0c00 	rsbs	ip, ip, #0
  407db6:	eb7e 0000 	sbcs.w	r0, lr, r0
  407dba:	eb6e 0101 	sbc.w	r1, lr, r1
  407dbe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  407dc2:	d31b      	bcc.n	407dfc <__adddf3+0x124>
  407dc4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  407dc8:	d30c      	bcc.n	407de4 <__adddf3+0x10c>
  407dca:	0849      	lsrs	r1, r1, #1
  407dcc:	ea5f 0030 	movs.w	r0, r0, rrx
  407dd0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  407dd4:	f104 0401 	add.w	r4, r4, #1
  407dd8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  407ddc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  407de0:	f080 809a 	bcs.w	407f18 <__adddf3+0x240>
  407de4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  407de8:	bf08      	it	eq
  407dea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407dee:	f150 0000 	adcs.w	r0, r0, #0
  407df2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407df6:	ea41 0105 	orr.w	r1, r1, r5
  407dfa:	bd30      	pop	{r4, r5, pc}
  407dfc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  407e00:	4140      	adcs	r0, r0
  407e02:	eb41 0101 	adc.w	r1, r1, r1
  407e06:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407e0a:	f1a4 0401 	sub.w	r4, r4, #1
  407e0e:	d1e9      	bne.n	407de4 <__adddf3+0x10c>
  407e10:	f091 0f00 	teq	r1, #0
  407e14:	bf04      	itt	eq
  407e16:	4601      	moveq	r1, r0
  407e18:	2000      	moveq	r0, #0
  407e1a:	fab1 f381 	clz	r3, r1
  407e1e:	bf08      	it	eq
  407e20:	3320      	addeq	r3, #32
  407e22:	f1a3 030b 	sub.w	r3, r3, #11
  407e26:	f1b3 0220 	subs.w	r2, r3, #32
  407e2a:	da0c      	bge.n	407e46 <__adddf3+0x16e>
  407e2c:	320c      	adds	r2, #12
  407e2e:	dd08      	ble.n	407e42 <__adddf3+0x16a>
  407e30:	f102 0c14 	add.w	ip, r2, #20
  407e34:	f1c2 020c 	rsb	r2, r2, #12
  407e38:	fa01 f00c 	lsl.w	r0, r1, ip
  407e3c:	fa21 f102 	lsr.w	r1, r1, r2
  407e40:	e00c      	b.n	407e5c <__adddf3+0x184>
  407e42:	f102 0214 	add.w	r2, r2, #20
  407e46:	bfd8      	it	le
  407e48:	f1c2 0c20 	rsble	ip, r2, #32
  407e4c:	fa01 f102 	lsl.w	r1, r1, r2
  407e50:	fa20 fc0c 	lsr.w	ip, r0, ip
  407e54:	bfdc      	itt	le
  407e56:	ea41 010c 	orrle.w	r1, r1, ip
  407e5a:	4090      	lslle	r0, r2
  407e5c:	1ae4      	subs	r4, r4, r3
  407e5e:	bfa2      	ittt	ge
  407e60:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  407e64:	4329      	orrge	r1, r5
  407e66:	bd30      	popge	{r4, r5, pc}
  407e68:	ea6f 0404 	mvn.w	r4, r4
  407e6c:	3c1f      	subs	r4, #31
  407e6e:	da1c      	bge.n	407eaa <__adddf3+0x1d2>
  407e70:	340c      	adds	r4, #12
  407e72:	dc0e      	bgt.n	407e92 <__adddf3+0x1ba>
  407e74:	f104 0414 	add.w	r4, r4, #20
  407e78:	f1c4 0220 	rsb	r2, r4, #32
  407e7c:	fa20 f004 	lsr.w	r0, r0, r4
  407e80:	fa01 f302 	lsl.w	r3, r1, r2
  407e84:	ea40 0003 	orr.w	r0, r0, r3
  407e88:	fa21 f304 	lsr.w	r3, r1, r4
  407e8c:	ea45 0103 	orr.w	r1, r5, r3
  407e90:	bd30      	pop	{r4, r5, pc}
  407e92:	f1c4 040c 	rsb	r4, r4, #12
  407e96:	f1c4 0220 	rsb	r2, r4, #32
  407e9a:	fa20 f002 	lsr.w	r0, r0, r2
  407e9e:	fa01 f304 	lsl.w	r3, r1, r4
  407ea2:	ea40 0003 	orr.w	r0, r0, r3
  407ea6:	4629      	mov	r1, r5
  407ea8:	bd30      	pop	{r4, r5, pc}
  407eaa:	fa21 f004 	lsr.w	r0, r1, r4
  407eae:	4629      	mov	r1, r5
  407eb0:	bd30      	pop	{r4, r5, pc}
  407eb2:	f094 0f00 	teq	r4, #0
  407eb6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  407eba:	bf06      	itte	eq
  407ebc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  407ec0:	3401      	addeq	r4, #1
  407ec2:	3d01      	subne	r5, #1
  407ec4:	e74e      	b.n	407d64 <__adddf3+0x8c>
  407ec6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407eca:	bf18      	it	ne
  407ecc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407ed0:	d029      	beq.n	407f26 <__adddf3+0x24e>
  407ed2:	ea94 0f05 	teq	r4, r5
  407ed6:	bf08      	it	eq
  407ed8:	ea90 0f02 	teqeq	r0, r2
  407edc:	d005      	beq.n	407eea <__adddf3+0x212>
  407ede:	ea54 0c00 	orrs.w	ip, r4, r0
  407ee2:	bf04      	itt	eq
  407ee4:	4619      	moveq	r1, r3
  407ee6:	4610      	moveq	r0, r2
  407ee8:	bd30      	pop	{r4, r5, pc}
  407eea:	ea91 0f03 	teq	r1, r3
  407eee:	bf1e      	ittt	ne
  407ef0:	2100      	movne	r1, #0
  407ef2:	2000      	movne	r0, #0
  407ef4:	bd30      	popne	{r4, r5, pc}
  407ef6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  407efa:	d105      	bne.n	407f08 <__adddf3+0x230>
  407efc:	0040      	lsls	r0, r0, #1
  407efe:	4149      	adcs	r1, r1
  407f00:	bf28      	it	cs
  407f02:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  407f06:	bd30      	pop	{r4, r5, pc}
  407f08:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  407f0c:	bf3c      	itt	cc
  407f0e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  407f12:	bd30      	popcc	{r4, r5, pc}
  407f14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407f18:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  407f1c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407f20:	f04f 0000 	mov.w	r0, #0
  407f24:	bd30      	pop	{r4, r5, pc}
  407f26:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407f2a:	bf1a      	itte	ne
  407f2c:	4619      	movne	r1, r3
  407f2e:	4610      	movne	r0, r2
  407f30:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  407f34:	bf1c      	itt	ne
  407f36:	460b      	movne	r3, r1
  407f38:	4602      	movne	r2, r0
  407f3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407f3e:	bf06      	itte	eq
  407f40:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  407f44:	ea91 0f03 	teqeq	r1, r3
  407f48:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  407f4c:	bd30      	pop	{r4, r5, pc}
  407f4e:	bf00      	nop

00407f50 <__aeabi_ui2d>:
  407f50:	f090 0f00 	teq	r0, #0
  407f54:	bf04      	itt	eq
  407f56:	2100      	moveq	r1, #0
  407f58:	4770      	bxeq	lr
  407f5a:	b530      	push	{r4, r5, lr}
  407f5c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407f60:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407f64:	f04f 0500 	mov.w	r5, #0
  407f68:	f04f 0100 	mov.w	r1, #0
  407f6c:	e750      	b.n	407e10 <__adddf3+0x138>
  407f6e:	bf00      	nop

00407f70 <__aeabi_i2d>:
  407f70:	f090 0f00 	teq	r0, #0
  407f74:	bf04      	itt	eq
  407f76:	2100      	moveq	r1, #0
  407f78:	4770      	bxeq	lr
  407f7a:	b530      	push	{r4, r5, lr}
  407f7c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407f80:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407f84:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  407f88:	bf48      	it	mi
  407f8a:	4240      	negmi	r0, r0
  407f8c:	f04f 0100 	mov.w	r1, #0
  407f90:	e73e      	b.n	407e10 <__adddf3+0x138>
  407f92:	bf00      	nop

00407f94 <__aeabi_f2d>:
  407f94:	0042      	lsls	r2, r0, #1
  407f96:	ea4f 01e2 	mov.w	r1, r2, asr #3
  407f9a:	ea4f 0131 	mov.w	r1, r1, rrx
  407f9e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  407fa2:	bf1f      	itttt	ne
  407fa4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  407fa8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407fac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  407fb0:	4770      	bxne	lr
  407fb2:	f092 0f00 	teq	r2, #0
  407fb6:	bf14      	ite	ne
  407fb8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407fbc:	4770      	bxeq	lr
  407fbe:	b530      	push	{r4, r5, lr}
  407fc0:	f44f 7460 	mov.w	r4, #896	; 0x380
  407fc4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407fc8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407fcc:	e720      	b.n	407e10 <__adddf3+0x138>
  407fce:	bf00      	nop

00407fd0 <__aeabi_ul2d>:
  407fd0:	ea50 0201 	orrs.w	r2, r0, r1
  407fd4:	bf08      	it	eq
  407fd6:	4770      	bxeq	lr
  407fd8:	b530      	push	{r4, r5, lr}
  407fda:	f04f 0500 	mov.w	r5, #0
  407fde:	e00a      	b.n	407ff6 <__aeabi_l2d+0x16>

00407fe0 <__aeabi_l2d>:
  407fe0:	ea50 0201 	orrs.w	r2, r0, r1
  407fe4:	bf08      	it	eq
  407fe6:	4770      	bxeq	lr
  407fe8:	b530      	push	{r4, r5, lr}
  407fea:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  407fee:	d502      	bpl.n	407ff6 <__aeabi_l2d+0x16>
  407ff0:	4240      	negs	r0, r0
  407ff2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407ff6:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407ffa:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407ffe:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  408002:	f43f aedc 	beq.w	407dbe <__adddf3+0xe6>
  408006:	f04f 0203 	mov.w	r2, #3
  40800a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40800e:	bf18      	it	ne
  408010:	3203      	addne	r2, #3
  408012:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  408016:	bf18      	it	ne
  408018:	3203      	addne	r2, #3
  40801a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40801e:	f1c2 0320 	rsb	r3, r2, #32
  408022:	fa00 fc03 	lsl.w	ip, r0, r3
  408026:	fa20 f002 	lsr.w	r0, r0, r2
  40802a:	fa01 fe03 	lsl.w	lr, r1, r3
  40802e:	ea40 000e 	orr.w	r0, r0, lr
  408032:	fa21 f102 	lsr.w	r1, r1, r2
  408036:	4414      	add	r4, r2
  408038:	e6c1      	b.n	407dbe <__adddf3+0xe6>
  40803a:	bf00      	nop

0040803c <__aeabi_dmul>:
  40803c:	b570      	push	{r4, r5, r6, lr}
  40803e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  408042:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  408046:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40804a:	bf1d      	ittte	ne
  40804c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  408050:	ea94 0f0c 	teqne	r4, ip
  408054:	ea95 0f0c 	teqne	r5, ip
  408058:	f000 f8de 	bleq	408218 <__aeabi_dmul+0x1dc>
  40805c:	442c      	add	r4, r5
  40805e:	ea81 0603 	eor.w	r6, r1, r3
  408062:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  408066:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40806a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40806e:	bf18      	it	ne
  408070:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  408074:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  408078:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40807c:	d038      	beq.n	4080f0 <__aeabi_dmul+0xb4>
  40807e:	fba0 ce02 	umull	ip, lr, r0, r2
  408082:	f04f 0500 	mov.w	r5, #0
  408086:	fbe1 e502 	umlal	lr, r5, r1, r2
  40808a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40808e:	fbe0 e503 	umlal	lr, r5, r0, r3
  408092:	f04f 0600 	mov.w	r6, #0
  408096:	fbe1 5603 	umlal	r5, r6, r1, r3
  40809a:	f09c 0f00 	teq	ip, #0
  40809e:	bf18      	it	ne
  4080a0:	f04e 0e01 	orrne.w	lr, lr, #1
  4080a4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4080a8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4080ac:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4080b0:	d204      	bcs.n	4080bc <__aeabi_dmul+0x80>
  4080b2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4080b6:	416d      	adcs	r5, r5
  4080b8:	eb46 0606 	adc.w	r6, r6, r6
  4080bc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4080c0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4080c4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4080c8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4080cc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4080d0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4080d4:	bf88      	it	hi
  4080d6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4080da:	d81e      	bhi.n	40811a <__aeabi_dmul+0xde>
  4080dc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4080e0:	bf08      	it	eq
  4080e2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4080e6:	f150 0000 	adcs.w	r0, r0, #0
  4080ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4080ee:	bd70      	pop	{r4, r5, r6, pc}
  4080f0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4080f4:	ea46 0101 	orr.w	r1, r6, r1
  4080f8:	ea40 0002 	orr.w	r0, r0, r2
  4080fc:	ea81 0103 	eor.w	r1, r1, r3
  408100:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  408104:	bfc2      	ittt	gt
  408106:	ebd4 050c 	rsbsgt	r5, r4, ip
  40810a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40810e:	bd70      	popgt	{r4, r5, r6, pc}
  408110:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  408114:	f04f 0e00 	mov.w	lr, #0
  408118:	3c01      	subs	r4, #1
  40811a:	f300 80ab 	bgt.w	408274 <__aeabi_dmul+0x238>
  40811e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  408122:	bfde      	ittt	le
  408124:	2000      	movle	r0, #0
  408126:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40812a:	bd70      	pople	{r4, r5, r6, pc}
  40812c:	f1c4 0400 	rsb	r4, r4, #0
  408130:	3c20      	subs	r4, #32
  408132:	da35      	bge.n	4081a0 <__aeabi_dmul+0x164>
  408134:	340c      	adds	r4, #12
  408136:	dc1b      	bgt.n	408170 <__aeabi_dmul+0x134>
  408138:	f104 0414 	add.w	r4, r4, #20
  40813c:	f1c4 0520 	rsb	r5, r4, #32
  408140:	fa00 f305 	lsl.w	r3, r0, r5
  408144:	fa20 f004 	lsr.w	r0, r0, r4
  408148:	fa01 f205 	lsl.w	r2, r1, r5
  40814c:	ea40 0002 	orr.w	r0, r0, r2
  408150:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  408154:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  408158:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40815c:	fa21 f604 	lsr.w	r6, r1, r4
  408160:	eb42 0106 	adc.w	r1, r2, r6
  408164:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  408168:	bf08      	it	eq
  40816a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40816e:	bd70      	pop	{r4, r5, r6, pc}
  408170:	f1c4 040c 	rsb	r4, r4, #12
  408174:	f1c4 0520 	rsb	r5, r4, #32
  408178:	fa00 f304 	lsl.w	r3, r0, r4
  40817c:	fa20 f005 	lsr.w	r0, r0, r5
  408180:	fa01 f204 	lsl.w	r2, r1, r4
  408184:	ea40 0002 	orr.w	r0, r0, r2
  408188:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40818c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  408190:	f141 0100 	adc.w	r1, r1, #0
  408194:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  408198:	bf08      	it	eq
  40819a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40819e:	bd70      	pop	{r4, r5, r6, pc}
  4081a0:	f1c4 0520 	rsb	r5, r4, #32
  4081a4:	fa00 f205 	lsl.w	r2, r0, r5
  4081a8:	ea4e 0e02 	orr.w	lr, lr, r2
  4081ac:	fa20 f304 	lsr.w	r3, r0, r4
  4081b0:	fa01 f205 	lsl.w	r2, r1, r5
  4081b4:	ea43 0302 	orr.w	r3, r3, r2
  4081b8:	fa21 f004 	lsr.w	r0, r1, r4
  4081bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4081c0:	fa21 f204 	lsr.w	r2, r1, r4
  4081c4:	ea20 0002 	bic.w	r0, r0, r2
  4081c8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4081cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4081d0:	bf08      	it	eq
  4081d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4081d6:	bd70      	pop	{r4, r5, r6, pc}
  4081d8:	f094 0f00 	teq	r4, #0
  4081dc:	d10f      	bne.n	4081fe <__aeabi_dmul+0x1c2>
  4081de:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4081e2:	0040      	lsls	r0, r0, #1
  4081e4:	eb41 0101 	adc.w	r1, r1, r1
  4081e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4081ec:	bf08      	it	eq
  4081ee:	3c01      	subeq	r4, #1
  4081f0:	d0f7      	beq.n	4081e2 <__aeabi_dmul+0x1a6>
  4081f2:	ea41 0106 	orr.w	r1, r1, r6
  4081f6:	f095 0f00 	teq	r5, #0
  4081fa:	bf18      	it	ne
  4081fc:	4770      	bxne	lr
  4081fe:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  408202:	0052      	lsls	r2, r2, #1
  408204:	eb43 0303 	adc.w	r3, r3, r3
  408208:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40820c:	bf08      	it	eq
  40820e:	3d01      	subeq	r5, #1
  408210:	d0f7      	beq.n	408202 <__aeabi_dmul+0x1c6>
  408212:	ea43 0306 	orr.w	r3, r3, r6
  408216:	4770      	bx	lr
  408218:	ea94 0f0c 	teq	r4, ip
  40821c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  408220:	bf18      	it	ne
  408222:	ea95 0f0c 	teqne	r5, ip
  408226:	d00c      	beq.n	408242 <__aeabi_dmul+0x206>
  408228:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40822c:	bf18      	it	ne
  40822e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  408232:	d1d1      	bne.n	4081d8 <__aeabi_dmul+0x19c>
  408234:	ea81 0103 	eor.w	r1, r1, r3
  408238:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40823c:	f04f 0000 	mov.w	r0, #0
  408240:	bd70      	pop	{r4, r5, r6, pc}
  408242:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  408246:	bf06      	itte	eq
  408248:	4610      	moveq	r0, r2
  40824a:	4619      	moveq	r1, r3
  40824c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  408250:	d019      	beq.n	408286 <__aeabi_dmul+0x24a>
  408252:	ea94 0f0c 	teq	r4, ip
  408256:	d102      	bne.n	40825e <__aeabi_dmul+0x222>
  408258:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  40825c:	d113      	bne.n	408286 <__aeabi_dmul+0x24a>
  40825e:	ea95 0f0c 	teq	r5, ip
  408262:	d105      	bne.n	408270 <__aeabi_dmul+0x234>
  408264:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  408268:	bf1c      	itt	ne
  40826a:	4610      	movne	r0, r2
  40826c:	4619      	movne	r1, r3
  40826e:	d10a      	bne.n	408286 <__aeabi_dmul+0x24a>
  408270:	ea81 0103 	eor.w	r1, r1, r3
  408274:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  408278:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40827c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  408280:	f04f 0000 	mov.w	r0, #0
  408284:	bd70      	pop	{r4, r5, r6, pc}
  408286:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40828a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40828e:	bd70      	pop	{r4, r5, r6, pc}

00408290 <__aeabi_ddiv>:
  408290:	b570      	push	{r4, r5, r6, lr}
  408292:	f04f 0cff 	mov.w	ip, #255	; 0xff
  408296:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40829a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40829e:	bf1d      	ittte	ne
  4082a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4082a4:	ea94 0f0c 	teqne	r4, ip
  4082a8:	ea95 0f0c 	teqne	r5, ip
  4082ac:	f000 f8a7 	bleq	4083fe <__aeabi_ddiv+0x16e>
  4082b0:	eba4 0405 	sub.w	r4, r4, r5
  4082b4:	ea81 0e03 	eor.w	lr, r1, r3
  4082b8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4082bc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4082c0:	f000 8088 	beq.w	4083d4 <__aeabi_ddiv+0x144>
  4082c4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4082c8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4082cc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4082d0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4082d4:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4082d8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4082dc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4082e0:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4082e4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4082e8:	429d      	cmp	r5, r3
  4082ea:	bf08      	it	eq
  4082ec:	4296      	cmpeq	r6, r2
  4082ee:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4082f2:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4082f6:	d202      	bcs.n	4082fe <__aeabi_ddiv+0x6e>
  4082f8:	085b      	lsrs	r3, r3, #1
  4082fa:	ea4f 0232 	mov.w	r2, r2, rrx
  4082fe:	1ab6      	subs	r6, r6, r2
  408300:	eb65 0503 	sbc.w	r5, r5, r3
  408304:	085b      	lsrs	r3, r3, #1
  408306:	ea4f 0232 	mov.w	r2, r2, rrx
  40830a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40830e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  408312:	ebb6 0e02 	subs.w	lr, r6, r2
  408316:	eb75 0e03 	sbcs.w	lr, r5, r3
  40831a:	bf22      	ittt	cs
  40831c:	1ab6      	subcs	r6, r6, r2
  40831e:	4675      	movcs	r5, lr
  408320:	ea40 000c 	orrcs.w	r0, r0, ip
  408324:	085b      	lsrs	r3, r3, #1
  408326:	ea4f 0232 	mov.w	r2, r2, rrx
  40832a:	ebb6 0e02 	subs.w	lr, r6, r2
  40832e:	eb75 0e03 	sbcs.w	lr, r5, r3
  408332:	bf22      	ittt	cs
  408334:	1ab6      	subcs	r6, r6, r2
  408336:	4675      	movcs	r5, lr
  408338:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40833c:	085b      	lsrs	r3, r3, #1
  40833e:	ea4f 0232 	mov.w	r2, r2, rrx
  408342:	ebb6 0e02 	subs.w	lr, r6, r2
  408346:	eb75 0e03 	sbcs.w	lr, r5, r3
  40834a:	bf22      	ittt	cs
  40834c:	1ab6      	subcs	r6, r6, r2
  40834e:	4675      	movcs	r5, lr
  408350:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  408354:	085b      	lsrs	r3, r3, #1
  408356:	ea4f 0232 	mov.w	r2, r2, rrx
  40835a:	ebb6 0e02 	subs.w	lr, r6, r2
  40835e:	eb75 0e03 	sbcs.w	lr, r5, r3
  408362:	bf22      	ittt	cs
  408364:	1ab6      	subcs	r6, r6, r2
  408366:	4675      	movcs	r5, lr
  408368:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40836c:	ea55 0e06 	orrs.w	lr, r5, r6
  408370:	d018      	beq.n	4083a4 <__aeabi_ddiv+0x114>
  408372:	ea4f 1505 	mov.w	r5, r5, lsl #4
  408376:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40837a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40837e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  408382:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  408386:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40838a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40838e:	d1c0      	bne.n	408312 <__aeabi_ddiv+0x82>
  408390:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  408394:	d10b      	bne.n	4083ae <__aeabi_ddiv+0x11e>
  408396:	ea41 0100 	orr.w	r1, r1, r0
  40839a:	f04f 0000 	mov.w	r0, #0
  40839e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4083a2:	e7b6      	b.n	408312 <__aeabi_ddiv+0x82>
  4083a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4083a8:	bf04      	itt	eq
  4083aa:	4301      	orreq	r1, r0
  4083ac:	2000      	moveq	r0, #0
  4083ae:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4083b2:	bf88      	it	hi
  4083b4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4083b8:	f63f aeaf 	bhi.w	40811a <__aeabi_dmul+0xde>
  4083bc:	ebb5 0c03 	subs.w	ip, r5, r3
  4083c0:	bf04      	itt	eq
  4083c2:	ebb6 0c02 	subseq.w	ip, r6, r2
  4083c6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4083ca:	f150 0000 	adcs.w	r0, r0, #0
  4083ce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4083d2:	bd70      	pop	{r4, r5, r6, pc}
  4083d4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4083d8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4083dc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4083e0:	bfc2      	ittt	gt
  4083e2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4083e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4083ea:	bd70      	popgt	{r4, r5, r6, pc}
  4083ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4083f0:	f04f 0e00 	mov.w	lr, #0
  4083f4:	3c01      	subs	r4, #1
  4083f6:	e690      	b.n	40811a <__aeabi_dmul+0xde>
  4083f8:	ea45 0e06 	orr.w	lr, r5, r6
  4083fc:	e68d      	b.n	40811a <__aeabi_dmul+0xde>
  4083fe:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  408402:	ea94 0f0c 	teq	r4, ip
  408406:	bf08      	it	eq
  408408:	ea95 0f0c 	teqeq	r5, ip
  40840c:	f43f af3b 	beq.w	408286 <__aeabi_dmul+0x24a>
  408410:	ea94 0f0c 	teq	r4, ip
  408414:	d10a      	bne.n	40842c <__aeabi_ddiv+0x19c>
  408416:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40841a:	f47f af34 	bne.w	408286 <__aeabi_dmul+0x24a>
  40841e:	ea95 0f0c 	teq	r5, ip
  408422:	f47f af25 	bne.w	408270 <__aeabi_dmul+0x234>
  408426:	4610      	mov	r0, r2
  408428:	4619      	mov	r1, r3
  40842a:	e72c      	b.n	408286 <__aeabi_dmul+0x24a>
  40842c:	ea95 0f0c 	teq	r5, ip
  408430:	d106      	bne.n	408440 <__aeabi_ddiv+0x1b0>
  408432:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  408436:	f43f aefd 	beq.w	408234 <__aeabi_dmul+0x1f8>
  40843a:	4610      	mov	r0, r2
  40843c:	4619      	mov	r1, r3
  40843e:	e722      	b.n	408286 <__aeabi_dmul+0x24a>
  408440:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  408444:	bf18      	it	ne
  408446:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40844a:	f47f aec5 	bne.w	4081d8 <__aeabi_dmul+0x19c>
  40844e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  408452:	f47f af0d 	bne.w	408270 <__aeabi_dmul+0x234>
  408456:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40845a:	f47f aeeb 	bne.w	408234 <__aeabi_dmul+0x1f8>
  40845e:	e712      	b.n	408286 <__aeabi_dmul+0x24a>

00408460 <__gedf2>:
  408460:	f04f 3cff 	mov.w	ip, #4294967295
  408464:	e006      	b.n	408474 <__cmpdf2+0x4>
  408466:	bf00      	nop

00408468 <__ledf2>:
  408468:	f04f 0c01 	mov.w	ip, #1
  40846c:	e002      	b.n	408474 <__cmpdf2+0x4>
  40846e:	bf00      	nop

00408470 <__cmpdf2>:
  408470:	f04f 0c01 	mov.w	ip, #1
  408474:	f84d cd04 	str.w	ip, [sp, #-4]!
  408478:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40847c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408480:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408484:	bf18      	it	ne
  408486:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40848a:	d01b      	beq.n	4084c4 <__cmpdf2+0x54>
  40848c:	b001      	add	sp, #4
  40848e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  408492:	bf0c      	ite	eq
  408494:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  408498:	ea91 0f03 	teqne	r1, r3
  40849c:	bf02      	ittt	eq
  40849e:	ea90 0f02 	teqeq	r0, r2
  4084a2:	2000      	moveq	r0, #0
  4084a4:	4770      	bxeq	lr
  4084a6:	f110 0f00 	cmn.w	r0, #0
  4084aa:	ea91 0f03 	teq	r1, r3
  4084ae:	bf58      	it	pl
  4084b0:	4299      	cmppl	r1, r3
  4084b2:	bf08      	it	eq
  4084b4:	4290      	cmpeq	r0, r2
  4084b6:	bf2c      	ite	cs
  4084b8:	17d8      	asrcs	r0, r3, #31
  4084ba:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4084be:	f040 0001 	orr.w	r0, r0, #1
  4084c2:	4770      	bx	lr
  4084c4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4084c8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4084cc:	d102      	bne.n	4084d4 <__cmpdf2+0x64>
  4084ce:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4084d2:	d107      	bne.n	4084e4 <__cmpdf2+0x74>
  4084d4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4084d8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4084dc:	d1d6      	bne.n	40848c <__cmpdf2+0x1c>
  4084de:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4084e2:	d0d3      	beq.n	40848c <__cmpdf2+0x1c>
  4084e4:	f85d 0b04 	ldr.w	r0, [sp], #4
  4084e8:	4770      	bx	lr
  4084ea:	bf00      	nop

004084ec <__aeabi_cdrcmple>:
  4084ec:	4684      	mov	ip, r0
  4084ee:	4610      	mov	r0, r2
  4084f0:	4662      	mov	r2, ip
  4084f2:	468c      	mov	ip, r1
  4084f4:	4619      	mov	r1, r3
  4084f6:	4663      	mov	r3, ip
  4084f8:	e000      	b.n	4084fc <__aeabi_cdcmpeq>
  4084fa:	bf00      	nop

004084fc <__aeabi_cdcmpeq>:
  4084fc:	b501      	push	{r0, lr}
  4084fe:	f7ff ffb7 	bl	408470 <__cmpdf2>
  408502:	2800      	cmp	r0, #0
  408504:	bf48      	it	mi
  408506:	f110 0f00 	cmnmi.w	r0, #0
  40850a:	bd01      	pop	{r0, pc}

0040850c <__aeabi_dcmpeq>:
  40850c:	f84d ed08 	str.w	lr, [sp, #-8]!
  408510:	f7ff fff4 	bl	4084fc <__aeabi_cdcmpeq>
  408514:	bf0c      	ite	eq
  408516:	2001      	moveq	r0, #1
  408518:	2000      	movne	r0, #0
  40851a:	f85d fb08 	ldr.w	pc, [sp], #8
  40851e:	bf00      	nop

00408520 <__aeabi_dcmplt>:
  408520:	f84d ed08 	str.w	lr, [sp, #-8]!
  408524:	f7ff ffea 	bl	4084fc <__aeabi_cdcmpeq>
  408528:	bf34      	ite	cc
  40852a:	2001      	movcc	r0, #1
  40852c:	2000      	movcs	r0, #0
  40852e:	f85d fb08 	ldr.w	pc, [sp], #8
  408532:	bf00      	nop

00408534 <__aeabi_dcmple>:
  408534:	f84d ed08 	str.w	lr, [sp, #-8]!
  408538:	f7ff ffe0 	bl	4084fc <__aeabi_cdcmpeq>
  40853c:	bf94      	ite	ls
  40853e:	2001      	movls	r0, #1
  408540:	2000      	movhi	r0, #0
  408542:	f85d fb08 	ldr.w	pc, [sp], #8
  408546:	bf00      	nop

00408548 <__aeabi_dcmpge>:
  408548:	f84d ed08 	str.w	lr, [sp, #-8]!
  40854c:	f7ff ffce 	bl	4084ec <__aeabi_cdrcmple>
  408550:	bf94      	ite	ls
  408552:	2001      	movls	r0, #1
  408554:	2000      	movhi	r0, #0
  408556:	f85d fb08 	ldr.w	pc, [sp], #8
  40855a:	bf00      	nop

0040855c <__aeabi_dcmpgt>:
  40855c:	f84d ed08 	str.w	lr, [sp, #-8]!
  408560:	f7ff ffc4 	bl	4084ec <__aeabi_cdrcmple>
  408564:	bf34      	ite	cc
  408566:	2001      	movcc	r0, #1
  408568:	2000      	movcs	r0, #0
  40856a:	f85d fb08 	ldr.w	pc, [sp], #8
  40856e:	bf00      	nop

00408570 <__aeabi_dcmpun>:
  408570:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  408574:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408578:	d102      	bne.n	408580 <__aeabi_dcmpun+0x10>
  40857a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40857e:	d10a      	bne.n	408596 <__aeabi_dcmpun+0x26>
  408580:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408584:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408588:	d102      	bne.n	408590 <__aeabi_dcmpun+0x20>
  40858a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40858e:	d102      	bne.n	408596 <__aeabi_dcmpun+0x26>
  408590:	f04f 0000 	mov.w	r0, #0
  408594:	4770      	bx	lr
  408596:	f04f 0001 	mov.w	r0, #1
  40859a:	4770      	bx	lr

0040859c <__aeabi_d2iz>:
  40859c:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4085a0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4085a4:	d215      	bcs.n	4085d2 <__aeabi_d2iz+0x36>
  4085a6:	d511      	bpl.n	4085cc <__aeabi_d2iz+0x30>
  4085a8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4085ac:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4085b0:	d912      	bls.n	4085d8 <__aeabi_d2iz+0x3c>
  4085b2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4085b6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4085ba:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4085be:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4085c2:	fa23 f002 	lsr.w	r0, r3, r2
  4085c6:	bf18      	it	ne
  4085c8:	4240      	negne	r0, r0
  4085ca:	4770      	bx	lr
  4085cc:	f04f 0000 	mov.w	r0, #0
  4085d0:	4770      	bx	lr
  4085d2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4085d6:	d105      	bne.n	4085e4 <__aeabi_d2iz+0x48>
  4085d8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4085dc:	bf08      	it	eq
  4085de:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4085e2:	4770      	bx	lr
  4085e4:	f04f 0000 	mov.w	r0, #0
  4085e8:	4770      	bx	lr
  4085ea:	bf00      	nop

004085ec <__aeabi_uldivmod>:
  4085ec:	b953      	cbnz	r3, 408604 <__aeabi_uldivmod+0x18>
  4085ee:	b94a      	cbnz	r2, 408604 <__aeabi_uldivmod+0x18>
  4085f0:	2900      	cmp	r1, #0
  4085f2:	bf08      	it	eq
  4085f4:	2800      	cmpeq	r0, #0
  4085f6:	bf1c      	itt	ne
  4085f8:	f04f 31ff 	movne.w	r1, #4294967295
  4085fc:	f04f 30ff 	movne.w	r0, #4294967295
  408600:	f000 b97a 	b.w	4088f8 <__aeabi_idiv0>
  408604:	f1ad 0c08 	sub.w	ip, sp, #8
  408608:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40860c:	f000 f806 	bl	40861c <__udivmoddi4>
  408610:	f8dd e004 	ldr.w	lr, [sp, #4]
  408614:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  408618:	b004      	add	sp, #16
  40861a:	4770      	bx	lr

0040861c <__udivmoddi4>:
  40861c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  408620:	468c      	mov	ip, r1
  408622:	460d      	mov	r5, r1
  408624:	4604      	mov	r4, r0
  408626:	9e08      	ldr	r6, [sp, #32]
  408628:	2b00      	cmp	r3, #0
  40862a:	d151      	bne.n	4086d0 <__udivmoddi4+0xb4>
  40862c:	428a      	cmp	r2, r1
  40862e:	4617      	mov	r7, r2
  408630:	d96d      	bls.n	40870e <__udivmoddi4+0xf2>
  408632:	fab2 fe82 	clz	lr, r2
  408636:	f1be 0f00 	cmp.w	lr, #0
  40863a:	d00b      	beq.n	408654 <__udivmoddi4+0x38>
  40863c:	f1ce 0c20 	rsb	ip, lr, #32
  408640:	fa01 f50e 	lsl.w	r5, r1, lr
  408644:	fa20 fc0c 	lsr.w	ip, r0, ip
  408648:	fa02 f70e 	lsl.w	r7, r2, lr
  40864c:	ea4c 0c05 	orr.w	ip, ip, r5
  408650:	fa00 f40e 	lsl.w	r4, r0, lr
  408654:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  408658:	0c25      	lsrs	r5, r4, #16
  40865a:	fbbc f8fa 	udiv	r8, ip, sl
  40865e:	fa1f f987 	uxth.w	r9, r7
  408662:	fb0a cc18 	mls	ip, sl, r8, ip
  408666:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40866a:	fb08 f309 	mul.w	r3, r8, r9
  40866e:	42ab      	cmp	r3, r5
  408670:	d90a      	bls.n	408688 <__udivmoddi4+0x6c>
  408672:	19ed      	adds	r5, r5, r7
  408674:	f108 32ff 	add.w	r2, r8, #4294967295
  408678:	f080 8123 	bcs.w	4088c2 <__udivmoddi4+0x2a6>
  40867c:	42ab      	cmp	r3, r5
  40867e:	f240 8120 	bls.w	4088c2 <__udivmoddi4+0x2a6>
  408682:	f1a8 0802 	sub.w	r8, r8, #2
  408686:	443d      	add	r5, r7
  408688:	1aed      	subs	r5, r5, r3
  40868a:	b2a4      	uxth	r4, r4
  40868c:	fbb5 f0fa 	udiv	r0, r5, sl
  408690:	fb0a 5510 	mls	r5, sl, r0, r5
  408694:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  408698:	fb00 f909 	mul.w	r9, r0, r9
  40869c:	45a1      	cmp	r9, r4
  40869e:	d909      	bls.n	4086b4 <__udivmoddi4+0x98>
  4086a0:	19e4      	adds	r4, r4, r7
  4086a2:	f100 33ff 	add.w	r3, r0, #4294967295
  4086a6:	f080 810a 	bcs.w	4088be <__udivmoddi4+0x2a2>
  4086aa:	45a1      	cmp	r9, r4
  4086ac:	f240 8107 	bls.w	4088be <__udivmoddi4+0x2a2>
  4086b0:	3802      	subs	r0, #2
  4086b2:	443c      	add	r4, r7
  4086b4:	eba4 0409 	sub.w	r4, r4, r9
  4086b8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4086bc:	2100      	movs	r1, #0
  4086be:	2e00      	cmp	r6, #0
  4086c0:	d061      	beq.n	408786 <__udivmoddi4+0x16a>
  4086c2:	fa24 f40e 	lsr.w	r4, r4, lr
  4086c6:	2300      	movs	r3, #0
  4086c8:	6034      	str	r4, [r6, #0]
  4086ca:	6073      	str	r3, [r6, #4]
  4086cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4086d0:	428b      	cmp	r3, r1
  4086d2:	d907      	bls.n	4086e4 <__udivmoddi4+0xc8>
  4086d4:	2e00      	cmp	r6, #0
  4086d6:	d054      	beq.n	408782 <__udivmoddi4+0x166>
  4086d8:	2100      	movs	r1, #0
  4086da:	e886 0021 	stmia.w	r6, {r0, r5}
  4086de:	4608      	mov	r0, r1
  4086e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4086e4:	fab3 f183 	clz	r1, r3
  4086e8:	2900      	cmp	r1, #0
  4086ea:	f040 808e 	bne.w	40880a <__udivmoddi4+0x1ee>
  4086ee:	42ab      	cmp	r3, r5
  4086f0:	d302      	bcc.n	4086f8 <__udivmoddi4+0xdc>
  4086f2:	4282      	cmp	r2, r0
  4086f4:	f200 80fa 	bhi.w	4088ec <__udivmoddi4+0x2d0>
  4086f8:	1a84      	subs	r4, r0, r2
  4086fa:	eb65 0503 	sbc.w	r5, r5, r3
  4086fe:	2001      	movs	r0, #1
  408700:	46ac      	mov	ip, r5
  408702:	2e00      	cmp	r6, #0
  408704:	d03f      	beq.n	408786 <__udivmoddi4+0x16a>
  408706:	e886 1010 	stmia.w	r6, {r4, ip}
  40870a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40870e:	b912      	cbnz	r2, 408716 <__udivmoddi4+0xfa>
  408710:	2701      	movs	r7, #1
  408712:	fbb7 f7f2 	udiv	r7, r7, r2
  408716:	fab7 fe87 	clz	lr, r7
  40871a:	f1be 0f00 	cmp.w	lr, #0
  40871e:	d134      	bne.n	40878a <__udivmoddi4+0x16e>
  408720:	1beb      	subs	r3, r5, r7
  408722:	0c3a      	lsrs	r2, r7, #16
  408724:	fa1f fc87 	uxth.w	ip, r7
  408728:	2101      	movs	r1, #1
  40872a:	fbb3 f8f2 	udiv	r8, r3, r2
  40872e:	0c25      	lsrs	r5, r4, #16
  408730:	fb02 3318 	mls	r3, r2, r8, r3
  408734:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  408738:	fb0c f308 	mul.w	r3, ip, r8
  40873c:	42ab      	cmp	r3, r5
  40873e:	d907      	bls.n	408750 <__udivmoddi4+0x134>
  408740:	19ed      	adds	r5, r5, r7
  408742:	f108 30ff 	add.w	r0, r8, #4294967295
  408746:	d202      	bcs.n	40874e <__udivmoddi4+0x132>
  408748:	42ab      	cmp	r3, r5
  40874a:	f200 80d1 	bhi.w	4088f0 <__udivmoddi4+0x2d4>
  40874e:	4680      	mov	r8, r0
  408750:	1aed      	subs	r5, r5, r3
  408752:	b2a3      	uxth	r3, r4
  408754:	fbb5 f0f2 	udiv	r0, r5, r2
  408758:	fb02 5510 	mls	r5, r2, r0, r5
  40875c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  408760:	fb0c fc00 	mul.w	ip, ip, r0
  408764:	45a4      	cmp	ip, r4
  408766:	d907      	bls.n	408778 <__udivmoddi4+0x15c>
  408768:	19e4      	adds	r4, r4, r7
  40876a:	f100 33ff 	add.w	r3, r0, #4294967295
  40876e:	d202      	bcs.n	408776 <__udivmoddi4+0x15a>
  408770:	45a4      	cmp	ip, r4
  408772:	f200 80b8 	bhi.w	4088e6 <__udivmoddi4+0x2ca>
  408776:	4618      	mov	r0, r3
  408778:	eba4 040c 	sub.w	r4, r4, ip
  40877c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  408780:	e79d      	b.n	4086be <__udivmoddi4+0xa2>
  408782:	4631      	mov	r1, r6
  408784:	4630      	mov	r0, r6
  408786:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40878a:	f1ce 0420 	rsb	r4, lr, #32
  40878e:	fa05 f30e 	lsl.w	r3, r5, lr
  408792:	fa07 f70e 	lsl.w	r7, r7, lr
  408796:	fa20 f804 	lsr.w	r8, r0, r4
  40879a:	0c3a      	lsrs	r2, r7, #16
  40879c:	fa25 f404 	lsr.w	r4, r5, r4
  4087a0:	ea48 0803 	orr.w	r8, r8, r3
  4087a4:	fbb4 f1f2 	udiv	r1, r4, r2
  4087a8:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4087ac:	fb02 4411 	mls	r4, r2, r1, r4
  4087b0:	fa1f fc87 	uxth.w	ip, r7
  4087b4:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4087b8:	fb01 f30c 	mul.w	r3, r1, ip
  4087bc:	42ab      	cmp	r3, r5
  4087be:	fa00 f40e 	lsl.w	r4, r0, lr
  4087c2:	d909      	bls.n	4087d8 <__udivmoddi4+0x1bc>
  4087c4:	19ed      	adds	r5, r5, r7
  4087c6:	f101 30ff 	add.w	r0, r1, #4294967295
  4087ca:	f080 808a 	bcs.w	4088e2 <__udivmoddi4+0x2c6>
  4087ce:	42ab      	cmp	r3, r5
  4087d0:	f240 8087 	bls.w	4088e2 <__udivmoddi4+0x2c6>
  4087d4:	3902      	subs	r1, #2
  4087d6:	443d      	add	r5, r7
  4087d8:	1aeb      	subs	r3, r5, r3
  4087da:	fa1f f588 	uxth.w	r5, r8
  4087de:	fbb3 f0f2 	udiv	r0, r3, r2
  4087e2:	fb02 3310 	mls	r3, r2, r0, r3
  4087e6:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4087ea:	fb00 f30c 	mul.w	r3, r0, ip
  4087ee:	42ab      	cmp	r3, r5
  4087f0:	d907      	bls.n	408802 <__udivmoddi4+0x1e6>
  4087f2:	19ed      	adds	r5, r5, r7
  4087f4:	f100 38ff 	add.w	r8, r0, #4294967295
  4087f8:	d26f      	bcs.n	4088da <__udivmoddi4+0x2be>
  4087fa:	42ab      	cmp	r3, r5
  4087fc:	d96d      	bls.n	4088da <__udivmoddi4+0x2be>
  4087fe:	3802      	subs	r0, #2
  408800:	443d      	add	r5, r7
  408802:	1aeb      	subs	r3, r5, r3
  408804:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  408808:	e78f      	b.n	40872a <__udivmoddi4+0x10e>
  40880a:	f1c1 0720 	rsb	r7, r1, #32
  40880e:	fa22 f807 	lsr.w	r8, r2, r7
  408812:	408b      	lsls	r3, r1
  408814:	fa05 f401 	lsl.w	r4, r5, r1
  408818:	ea48 0303 	orr.w	r3, r8, r3
  40881c:	fa20 fe07 	lsr.w	lr, r0, r7
  408820:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  408824:	40fd      	lsrs	r5, r7
  408826:	ea4e 0e04 	orr.w	lr, lr, r4
  40882a:	fbb5 f9fc 	udiv	r9, r5, ip
  40882e:	ea4f 441e 	mov.w	r4, lr, lsr #16
  408832:	fb0c 5519 	mls	r5, ip, r9, r5
  408836:	fa1f f883 	uxth.w	r8, r3
  40883a:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40883e:	fb09 f408 	mul.w	r4, r9, r8
  408842:	42ac      	cmp	r4, r5
  408844:	fa02 f201 	lsl.w	r2, r2, r1
  408848:	fa00 fa01 	lsl.w	sl, r0, r1
  40884c:	d908      	bls.n	408860 <__udivmoddi4+0x244>
  40884e:	18ed      	adds	r5, r5, r3
  408850:	f109 30ff 	add.w	r0, r9, #4294967295
  408854:	d243      	bcs.n	4088de <__udivmoddi4+0x2c2>
  408856:	42ac      	cmp	r4, r5
  408858:	d941      	bls.n	4088de <__udivmoddi4+0x2c2>
  40885a:	f1a9 0902 	sub.w	r9, r9, #2
  40885e:	441d      	add	r5, r3
  408860:	1b2d      	subs	r5, r5, r4
  408862:	fa1f fe8e 	uxth.w	lr, lr
  408866:	fbb5 f0fc 	udiv	r0, r5, ip
  40886a:	fb0c 5510 	mls	r5, ip, r0, r5
  40886e:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  408872:	fb00 f808 	mul.w	r8, r0, r8
  408876:	45a0      	cmp	r8, r4
  408878:	d907      	bls.n	40888a <__udivmoddi4+0x26e>
  40887a:	18e4      	adds	r4, r4, r3
  40887c:	f100 35ff 	add.w	r5, r0, #4294967295
  408880:	d229      	bcs.n	4088d6 <__udivmoddi4+0x2ba>
  408882:	45a0      	cmp	r8, r4
  408884:	d927      	bls.n	4088d6 <__udivmoddi4+0x2ba>
  408886:	3802      	subs	r0, #2
  408888:	441c      	add	r4, r3
  40888a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40888e:	eba4 0408 	sub.w	r4, r4, r8
  408892:	fba0 8902 	umull	r8, r9, r0, r2
  408896:	454c      	cmp	r4, r9
  408898:	46c6      	mov	lr, r8
  40889a:	464d      	mov	r5, r9
  40889c:	d315      	bcc.n	4088ca <__udivmoddi4+0x2ae>
  40889e:	d012      	beq.n	4088c6 <__udivmoddi4+0x2aa>
  4088a0:	b156      	cbz	r6, 4088b8 <__udivmoddi4+0x29c>
  4088a2:	ebba 030e 	subs.w	r3, sl, lr
  4088a6:	eb64 0405 	sbc.w	r4, r4, r5
  4088aa:	fa04 f707 	lsl.w	r7, r4, r7
  4088ae:	40cb      	lsrs	r3, r1
  4088b0:	431f      	orrs	r7, r3
  4088b2:	40cc      	lsrs	r4, r1
  4088b4:	6037      	str	r7, [r6, #0]
  4088b6:	6074      	str	r4, [r6, #4]
  4088b8:	2100      	movs	r1, #0
  4088ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4088be:	4618      	mov	r0, r3
  4088c0:	e6f8      	b.n	4086b4 <__udivmoddi4+0x98>
  4088c2:	4690      	mov	r8, r2
  4088c4:	e6e0      	b.n	408688 <__udivmoddi4+0x6c>
  4088c6:	45c2      	cmp	sl, r8
  4088c8:	d2ea      	bcs.n	4088a0 <__udivmoddi4+0x284>
  4088ca:	ebb8 0e02 	subs.w	lr, r8, r2
  4088ce:	eb69 0503 	sbc.w	r5, r9, r3
  4088d2:	3801      	subs	r0, #1
  4088d4:	e7e4      	b.n	4088a0 <__udivmoddi4+0x284>
  4088d6:	4628      	mov	r0, r5
  4088d8:	e7d7      	b.n	40888a <__udivmoddi4+0x26e>
  4088da:	4640      	mov	r0, r8
  4088dc:	e791      	b.n	408802 <__udivmoddi4+0x1e6>
  4088de:	4681      	mov	r9, r0
  4088e0:	e7be      	b.n	408860 <__udivmoddi4+0x244>
  4088e2:	4601      	mov	r1, r0
  4088e4:	e778      	b.n	4087d8 <__udivmoddi4+0x1bc>
  4088e6:	3802      	subs	r0, #2
  4088e8:	443c      	add	r4, r7
  4088ea:	e745      	b.n	408778 <__udivmoddi4+0x15c>
  4088ec:	4608      	mov	r0, r1
  4088ee:	e708      	b.n	408702 <__udivmoddi4+0xe6>
  4088f0:	f1a8 0802 	sub.w	r8, r8, #2
  4088f4:	443d      	add	r5, r7
  4088f6:	e72b      	b.n	408750 <__udivmoddi4+0x134>

004088f8 <__aeabi_idiv0>:
  4088f8:	4770      	bx	lr
  4088fa:	bf00      	nop
  4088fc:	0a05000d 	.word	0x0a05000d
  408900:	0000004b 	.word	0x0000004b
  408904:	00001932 	.word	0x00001932
  408908:	0e00008b 	.word	0x0e00008b
  40890c:	32800008 	.word	0x32800008
  408910:	030a0205 	.word	0x030a0205
  408914:	0f022003 	.word	0x0f022003
  408918:	00000a0f 	.word	0x00000a0f
  40891c:	18180000 	.word	0x18180000
  408920:	00002020 	.word	0x00002020
  408924:	0a000000 	.word	0x0a000000
  408928:	02020000 	.word	0x02020000
  40892c:	18180000 	.word	0x18180000
  408930:	00030000 	.word	0x00030000
  408934:	00000000 	.word	0x00000000
  408938:	18010002 	.word	0x18010002
  40893c:	1e1e1e1e 	.word	0x1e1e1e1e
  408940:	1e1e1e1e 	.word	0x1e1e1e1e
  408944:	1e1e1e1e 	.word	0x1e1e1e1e
  408948:	00001e1e 	.word	0x00001e1e
	...
  40895c:	616d0d0a 	.word	0x616d0d0a
  408960:	756f5458 	.word	0x756f5458
  408964:	64206863 	.word	0x64206863
  408968:	20617461 	.word	0x20617461
  40896c:	52415355 	.word	0x52415355
  408970:	72742054 	.word	0x72742054
  408974:	6d736e61 	.word	0x6d736e61
  408978:	65747469 	.word	0x65747469
  40897c:	000d0a72 	.word	0x000d0a72
  408980:	203a724e 	.word	0x203a724e
  408984:	2c643125 	.word	0x2c643125
  408988:	253a5820 	.word	0x253a5820
  40898c:	202c6434 	.word	0x202c6434
  408990:	34253a59 	.word	0x34253a59
  408994:	53202c64 	.word	0x53202c64
  408998:	75746174 	.word	0x75746174
  40899c:	78303a73 	.word	0x78303a73
  4089a0:	20783225 	.word	0x20783225
  4089a4:	766e6f63 	.word	0x766e6f63
  4089a8:	253a5820 	.word	0x253a5820
  4089ac:	59206433 	.word	0x59206433
  4089b0:	6433253a 	.word	0x6433253a
  4089b4:	00000d0a 	.word	0x00000d0a

004089b8 <_global_impure_ptr>:
  4089b8:	20400018 00464e49 00666e69 004e414e     ..@ INF.inf.NAN.
  4089c8:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  4089d8:	46454443 00000000 33323130 37363534     CDEF....01234567
  4089e8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  4089f8:	0000296c 00000030                       l)..0...

00408a00 <blanks.7223>:
  408a00:	20202020 20202020 20202020 20202020                     

00408a10 <zeroes.7224>:
  408a10:	30303030 30303030 30303030 30303030     0000000000000000

00408a20 <blanks.7217>:
  408a20:	20202020 20202020 20202020 20202020                     

00408a30 <zeroes.7218>:
  408a30:	30303030 30303030 30303030 30303030     0000000000000000
  408a40:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  408a50:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00408a60 <__mprec_bigtens>:
  408a60:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  408a70:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  408a80:	7f73bf3c 75154fdd                       <.s..O.u

00408a88 <__mprec_tens>:
  408a88:	00000000 3ff00000 00000000 40240000     .......?......$@
  408a98:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  408aa8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  408ab8:	00000000 412e8480 00000000 416312d0     .......A......cA
  408ac8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  408ad8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  408ae8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  408af8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  408b08:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  408b18:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  408b28:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  408b38:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  408b48:	79d99db4 44ea7843                       ...yCx.D

00408b50 <p05.6055>:
  408b50:	00000005 00000019 0000007d              ........}...

00408b5c <_ctype_>:
  408b5c:	20202000 20202020 28282020 20282828     .         ((((( 
  408b6c:	20202020 20202020 20202020 20202020                     
  408b7c:	10108820 10101010 10101010 10101010      ...............
  408b8c:	04040410 04040404 10040404 10101010     ................
  408b9c:	41411010 41414141 01010101 01010101     ..AAAAAA........
  408bac:	01010101 01010101 01010101 10101010     ................
  408bbc:	42421010 42424242 02020202 02020202     ..BBBBBB........
  408bcc:	02020202 02020202 02020202 10101010     ................
  408bdc:	00000020 00000000 00000000 00000000      ...............
	...

00408c60 <_init>:
  408c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  408c62:	bf00      	nop
  408c64:	bcf8      	pop	{r3, r4, r5, r6, r7}
  408c66:	bc08      	pop	{r3}
  408c68:	469e      	mov	lr, r3
  408c6a:	4770      	bx	lr

00408c6c <__init_array_start>:
  408c6c:	00405115 	.word	0x00405115

00408c70 <__frame_dummy_init_array_entry>:
  408c70:	0040018d                                ..@.

00408c74 <_fini>:
  408c74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  408c76:	bf00      	nop
  408c78:	bcf8      	pop	{r3, r4, r5, r6, r7}
  408c7a:	bc08      	pop	{r3}
  408c7c:	469e      	mov	lr, r3
  408c7e:	4770      	bx	lr

00408c80 <__fini_array_start>:
  408c80:	00400169 	.word	0x00400169

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr

2040000a <g_interrupt_enabled>:
2040000a:	0001                                        ..

2040000c <SystemCoreClock>:
2040000c:	0900 003d                                   ..=.

20400010 <last_state.11173>:
20400010:	00ff 0000                                   ....

20400014 <_impure_ptr>:
20400014:	0018 2040                                   ..@ 

20400018 <impure_data>:
20400018:	0000 0000 0304 2040 036c 2040 03d4 2040     ......@ l.@ ..@ 
	...
204000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400440 <__malloc_av_>:
	...
20400448:	0440 2040 0440 2040 0448 2040 0448 2040     @.@ @.@ H.@ H.@ 
20400458:	0450 2040 0450 2040 0458 2040 0458 2040     P.@ P.@ X.@ X.@ 
20400468:	0460 2040 0460 2040 0468 2040 0468 2040     `.@ `.@ h.@ h.@ 
20400478:	0470 2040 0470 2040 0478 2040 0478 2040     p.@ p.@ x.@ x.@ 
20400488:	0480 2040 0480 2040 0488 2040 0488 2040     ..@ ..@ ..@ ..@ 
20400498:	0490 2040 0490 2040 0498 2040 0498 2040     ..@ ..@ ..@ ..@ 
204004a8:	04a0 2040 04a0 2040 04a8 2040 04a8 2040     ..@ ..@ ..@ ..@ 
204004b8:	04b0 2040 04b0 2040 04b8 2040 04b8 2040     ..@ ..@ ..@ ..@ 
204004c8:	04c0 2040 04c0 2040 04c8 2040 04c8 2040     ..@ ..@ ..@ ..@ 
204004d8:	04d0 2040 04d0 2040 04d8 2040 04d8 2040     ..@ ..@ ..@ ..@ 
204004e8:	04e0 2040 04e0 2040 04e8 2040 04e8 2040     ..@ ..@ ..@ ..@ 
204004f8:	04f0 2040 04f0 2040 04f8 2040 04f8 2040     ..@ ..@ ..@ ..@ 
20400508:	0500 2040 0500 2040 0508 2040 0508 2040     ..@ ..@ ..@ ..@ 
20400518:	0510 2040 0510 2040 0518 2040 0518 2040     ..@ ..@ ..@ ..@ 
20400528:	0520 2040 0520 2040 0528 2040 0528 2040      .@  .@ (.@ (.@ 
20400538:	0530 2040 0530 2040 0538 2040 0538 2040     0.@ 0.@ 8.@ 8.@ 
20400548:	0540 2040 0540 2040 0548 2040 0548 2040     @.@ @.@ H.@ H.@ 
20400558:	0550 2040 0550 2040 0558 2040 0558 2040     P.@ P.@ X.@ X.@ 
20400568:	0560 2040 0560 2040 0568 2040 0568 2040     `.@ `.@ h.@ h.@ 
20400578:	0570 2040 0570 2040 0578 2040 0578 2040     p.@ p.@ x.@ x.@ 
20400588:	0580 2040 0580 2040 0588 2040 0588 2040     ..@ ..@ ..@ ..@ 
20400598:	0590 2040 0590 2040 0598 2040 0598 2040     ..@ ..@ ..@ ..@ 
204005a8:	05a0 2040 05a0 2040 05a8 2040 05a8 2040     ..@ ..@ ..@ ..@ 
204005b8:	05b0 2040 05b0 2040 05b8 2040 05b8 2040     ..@ ..@ ..@ ..@ 
204005c8:	05c0 2040 05c0 2040 05c8 2040 05c8 2040     ..@ ..@ ..@ ..@ 
204005d8:	05d0 2040 05d0 2040 05d8 2040 05d8 2040     ..@ ..@ ..@ ..@ 
204005e8:	05e0 2040 05e0 2040 05e8 2040 05e8 2040     ..@ ..@ ..@ ..@ 
204005f8:	05f0 2040 05f0 2040 05f8 2040 05f8 2040     ..@ ..@ ..@ ..@ 
20400608:	0600 2040 0600 2040 0608 2040 0608 2040     ..@ ..@ ..@ ..@ 
20400618:	0610 2040 0610 2040 0618 2040 0618 2040     ..@ ..@ ..@ ..@ 
20400628:	0620 2040 0620 2040 0628 2040 0628 2040      .@  .@ (.@ (.@ 
20400638:	0630 2040 0630 2040 0638 2040 0638 2040     0.@ 0.@ 8.@ 8.@ 
20400648:	0640 2040 0640 2040 0648 2040 0648 2040     @.@ @.@ H.@ H.@ 
20400658:	0650 2040 0650 2040 0658 2040 0658 2040     P.@ P.@ X.@ X.@ 
20400668:	0660 2040 0660 2040 0668 2040 0668 2040     `.@ `.@ h.@ h.@ 
20400678:	0670 2040 0670 2040 0678 2040 0678 2040     p.@ p.@ x.@ x.@ 
20400688:	0680 2040 0680 2040 0688 2040 0688 2040     ..@ ..@ ..@ ..@ 
20400698:	0690 2040 0690 2040 0698 2040 0698 2040     ..@ ..@ ..@ ..@ 
204006a8:	06a0 2040 06a0 2040 06a8 2040 06a8 2040     ..@ ..@ ..@ ..@ 
204006b8:	06b0 2040 06b0 2040 06b8 2040 06b8 2040     ..@ ..@ ..@ ..@ 
204006c8:	06c0 2040 06c0 2040 06c8 2040 06c8 2040     ..@ ..@ ..@ ..@ 
204006d8:	06d0 2040 06d0 2040 06d8 2040 06d8 2040     ..@ ..@ ..@ ..@ 
204006e8:	06e0 2040 06e0 2040 06e8 2040 06e8 2040     ..@ ..@ ..@ ..@ 
204006f8:	06f0 2040 06f0 2040 06f8 2040 06f8 2040     ..@ ..@ ..@ ..@ 
20400708:	0700 2040 0700 2040 0708 2040 0708 2040     ..@ ..@ ..@ ..@ 
20400718:	0710 2040 0710 2040 0718 2040 0718 2040     ..@ ..@ ..@ ..@ 
20400728:	0720 2040 0720 2040 0728 2040 0728 2040      .@  .@ (.@ (.@ 
20400738:	0730 2040 0730 2040 0738 2040 0738 2040     0.@ 0.@ 8.@ 8.@ 
20400748:	0740 2040 0740 2040 0748 2040 0748 2040     @.@ @.@ H.@ H.@ 
20400758:	0750 2040 0750 2040 0758 2040 0758 2040     P.@ P.@ X.@ X.@ 
20400768:	0760 2040 0760 2040 0768 2040 0768 2040     `.@ `.@ h.@ h.@ 
20400778:	0770 2040 0770 2040 0778 2040 0778 2040     p.@ p.@ x.@ x.@ 
20400788:	0780 2040 0780 2040 0788 2040 0788 2040     ..@ ..@ ..@ ..@ 
20400798:	0790 2040 0790 2040 0798 2040 0798 2040     ..@ ..@ ..@ ..@ 
204007a8:	07a0 2040 07a0 2040 07a8 2040 07a8 2040     ..@ ..@ ..@ ..@ 
204007b8:	07b0 2040 07b0 2040 07b8 2040 07b8 2040     ..@ ..@ ..@ ..@ 
204007c8:	07c0 2040 07c0 2040 07c8 2040 07c8 2040     ..@ ..@ ..@ ..@ 
204007d8:	07d0 2040 07d0 2040 07d8 2040 07d8 2040     ..@ ..@ ..@ ..@ 
204007e8:	07e0 2040 07e0 2040 07e8 2040 07e8 2040     ..@ ..@ ..@ ..@ 
204007f8:	07f0 2040 07f0 2040 07f8 2040 07f8 2040     ..@ ..@ ..@ ..@ 
20400808:	0800 2040 0800 2040 0808 2040 0808 2040     ..@ ..@ ..@ ..@ 
20400818:	0810 2040 0810 2040 0818 2040 0818 2040     ..@ ..@ ..@ ..@ 
20400828:	0820 2040 0820 2040 0828 2040 0828 2040      .@  .@ (.@ (.@ 
20400838:	0830 2040 0830 2040 0838 2040 0838 2040     0.@ 0.@ 8.@ 8.@ 

20400848 <__malloc_sbrk_base>:
20400848:	ffff ffff                                   ....

2040084c <__malloc_trim_threshold>:
2040084c:	0000 0002                                   ....

20400850 <__atexit_recursive_mutex>:
20400850:	0e64 2040                                   d.@ 

20400854 <__global_locale>:
20400854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400934:	79d5 0040 6b39 0040 0000 0000 8b5c 0040     .y@.9k@.....\.@.
20400944:	8a5c 0040 89dc 0040 89dc 0040 89dc 0040     \.@...@...@...@.
20400954:	89dc 0040 89dc 0040 89dc 0040 89dc 0040     ..@...@...@...@.
20400964:	89dc 0040 89dc 0040 ffff ffff ffff ffff     ..@...@.........
20400974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2040099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
